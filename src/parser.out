Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND_OP
    DO
    NEXT
    NOT
    NOT_OP
    OR_OP
    SEMICOLON
    THEN
    YIELD

Grammar

Rule 0     S' -> start
Rule 1     start -> sentence
Rule 2     function -> DEF ID body END
Rule 3     function -> DEF ID LPAREN args_multiple RPAREN body END
Rule 4     function -> DEF ID LPAREN args RPAREN body END
Rule 5     args_multiple -> ID COMMA args
Rule 6     args -> ID
Rule 7     body -> sentence
Rule 8     body -> sentence body
Rule 9     print -> PUTS factor
Rule 10    class_def -> CLASS ID body END
Rule 11    sentence -> assignment
Rule 12    sentence -> expression
Rule 13    sentence -> print
Rule 14    sentence -> input
Rule 15    sentence -> condition
Rule 16    sentence -> while_loop
Rule 17    sentence -> for_loop
Rule 18    sentence -> array
Rule 19    sentence -> range_incl
Rule 20    sentence -> range_excl
Rule 21    sentence -> hash
Rule 22    sentence -> function
Rule 23    sentence -> class_def
Rule 24    sentence -> RETURN factor
Rule 25    sentence -> BREAK
Rule 26    assignment -> ID ASSIGN expression
Rule 27    input -> PUTS STRING
Rule 28    input -> ID ASSIGN GETS DOT ID
Rule 29    expression -> expression PLUS term
Rule 30    expression -> expression MINUS term
Rule 31    expression -> term
Rule 32    term -> term TIMES factor
Rule 33    term -> term DIVIDE factor
Rule 34    term -> term EXPONENT factor
Rule 35    term -> term MODULE factor
Rule 36    term -> factor
Rule 37    factor -> INTEGER
Rule 38    factor -> FLOAT
Rule 39    factor -> STRING
Rule 40    factor -> BOOLEAN
Rule 41    factor -> ID
Rule 42    factor -> VAR_INST
Rule 43    factor -> TRUE
Rule 44    factor -> FALSE
Rule 45    factor -> NIL
Rule 46    array -> ID ASSIGN LCORCH elements RCORCH
Rule 47    elements -> factor
Rule 48    elements -> factor COMMA elements
Rule 49    for_loop -> FOR ID IN range_incl body END
Rule 50    hash -> ID ASSIGN LBRACE hash_pairs RBRACE
Rule 51    hash_pairs -> STRING COLON factor
Rule 52    hash_pairs -> STRING COLON factor COMMA hash_pairs
Rule 53    while_loop -> WHILE logic_expression body END
Rule 54    range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN
Rule 55    range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN
Rule 56    condition -> IF logic_expression body END
Rule 57    condition -> IF logic_expression body ELSE body END
Rule 58    logic_expression -> factor logic_op factor
Rule 59    logic_expression -> factor logic_op factor logic_connector logic_expression
Rule 60    logic_op -> EQUALS
Rule 61    logic_op -> NEQUALS
Rule 62    logic_op -> GREATEREQ
Rule 63    logic_op -> LESSEQ
Rule 64    logic_op -> GREATERT
Rule 65    logic_op -> LESST
Rule 66    logic_connector -> AND
Rule 67    logic_connector -> OR

Terminals, with rules where they appear

AND                  : 66
AND_OP               : 
ASSIGN               : 26 28 46 50
BOOLEAN              : 40
BREAK                : 25
CLASS                : 10
COLON                : 51 52
COMMA                : 5 48 52
DEF                  : 2 3 4
DIVIDE               : 33
DO                   : 
DOT                  : 28
ELSE                 : 57
END                  : 2 3 4 10 49 53 56 57
EQUALS               : 60
EXPONENT             : 34
FALSE                : 44
FLOAT                : 38
FOR                  : 49
GETS                 : 28
GREATEREQ            : 62
GREATERT             : 64
ID                   : 2 3 4 5 6 10 26 28 28 41 46 49 50
IF                   : 56 57
IN                   : 49
INTEGER              : 37 54 54 55 55
LBRACE               : 50
LCORCH               : 46
LESSEQ               : 63
LESST                : 65
LPAREN               : 3 4 54 55
MINUS                : 30
MODULE               : 35
NEQUALS              : 61
NEXT                 : 
NIL                  : 45
NOT                  : 
NOT_OP               : 
OR                   : 67
OR_OP                : 
PLUS                 : 29
PUTS                 : 9 27
RANGE_EXCL           : 55
RANGE_INCL           : 54
RBRACE               : 50
RCORCH               : 46
RETURN               : 24
RPAREN               : 3 4 54 55
SEMICOLON            : 
STRING               : 27 39 51 52
THEN                 : 
TIMES                : 32
TRUE                 : 43
VAR_INST             : 42
WHILE                : 53
YIELD                : 
error                : 

Nonterminals, with rules where they appear

args                 : 4 5
args_multiple        : 3
array                : 18
assignment           : 11
body                 : 2 3 4 8 10 49 53 56 57 57
class_def            : 23
condition            : 15
elements             : 46 48
expression           : 12 26 29 30
factor               : 9 24 32 33 34 35 36 47 48 51 52 58 58 59 59
for_loop             : 17
function             : 22
hash                 : 21
hash_pairs           : 50 52
input                : 14
logic_connector      : 59
logic_expression     : 53 56 57 59
logic_op             : 58 59
print                : 13
range_excl           : 20
range_incl           : 19 49
sentence             : 1 7 8
start                : 0
term                 : 29 30 31 32 33 34 35
while_loop           : 16

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . sentence
    (11) sentence -> . assignment
    (12) sentence -> . expression
    (13) sentence -> . print
    (14) sentence -> . input
    (15) sentence -> . condition
    (16) sentence -> . while_loop
    (17) sentence -> . for_loop
    (18) sentence -> . array
    (19) sentence -> . range_incl
    (20) sentence -> . range_excl
    (21) sentence -> . hash
    (22) sentence -> . function
    (23) sentence -> . class_def
    (24) sentence -> . RETURN factor
    (25) sentence -> . BREAK
    (26) assignment -> . ID ASSIGN expression
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) expression -> . term
    (9) print -> . PUTS factor
    (27) input -> . PUTS STRING
    (28) input -> . ID ASSIGN GETS DOT ID
    (56) condition -> . IF logic_expression body END
    (57) condition -> . IF logic_expression body ELSE body END
    (53) while_loop -> . WHILE logic_expression body END
    (49) for_loop -> . FOR ID IN range_incl body END
    (46) array -> . ID ASSIGN LCORCH elements RCORCH
    (54) range_incl -> . LPAREN INTEGER RANGE_INCL INTEGER RPAREN
    (55) range_excl -> . LPAREN INTEGER RANGE_EXCL INTEGER RPAREN
    (50) hash -> . ID ASSIGN LBRACE hash_pairs RBRACE
    (2) function -> . DEF ID body END
    (3) function -> . DEF ID LPAREN args_multiple RPAREN body END
    (4) function -> . DEF ID LPAREN args RPAREN body END
    (10) class_def -> . CLASS ID body END
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term EXPONENT factor
    (35) term -> . term MODULE factor
    (36) term -> . factor
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    RETURN          shift and go to state 16
    BREAK           shift and go to state 18
    ID              shift and go to state 19
    PUTS            shift and go to state 21
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LPAREN          shift and go to state 26
    DEF             shift and go to state 28
    CLASS           shift and go to state 29
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    start                          shift and go to state 1
    sentence                       shift and go to state 2
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    while_loop                     shift and go to state 8
    for_loop                       shift and go to state 9
    array                          shift and go to state 10
    range_incl                     shift and go to state 11
    range_excl                     shift and go to state 12
    hash                           shift and go to state 13
    function                       shift and go to state 14
    class_def                      shift and go to state 15
    factor                         shift and go to state 17
    term                           shift and go to state 20

state 1

    (0) S' -> start .



state 2

    (1) start -> sentence .

    $end            reduce using rule 1 (start -> sentence .)


state 3

    (11) sentence -> assignment .

    $end            reduce using rule 11 (sentence -> assignment .)
    RETURN          reduce using rule 11 (sentence -> assignment .)
    BREAK           reduce using rule 11 (sentence -> assignment .)
    ID              reduce using rule 11 (sentence -> assignment .)
    PUTS            reduce using rule 11 (sentence -> assignment .)
    IF              reduce using rule 11 (sentence -> assignment .)
    WHILE           reduce using rule 11 (sentence -> assignment .)
    FOR             reduce using rule 11 (sentence -> assignment .)
    LPAREN          reduce using rule 11 (sentence -> assignment .)
    DEF             reduce using rule 11 (sentence -> assignment .)
    CLASS           reduce using rule 11 (sentence -> assignment .)
    INTEGER         reduce using rule 11 (sentence -> assignment .)
    FLOAT           reduce using rule 11 (sentence -> assignment .)
    STRING          reduce using rule 11 (sentence -> assignment .)
    BOOLEAN         reduce using rule 11 (sentence -> assignment .)
    VAR_INST        reduce using rule 11 (sentence -> assignment .)
    TRUE            reduce using rule 11 (sentence -> assignment .)
    FALSE           reduce using rule 11 (sentence -> assignment .)
    NIL             reduce using rule 11 (sentence -> assignment .)
    END             reduce using rule 11 (sentence -> assignment .)
    ELSE            reduce using rule 11 (sentence -> assignment .)


state 4

    (12) sentence -> expression .
    (29) expression -> expression . PLUS term
    (30) expression -> expression . MINUS term

    $end            reduce using rule 12 (sentence -> expression .)
    RETURN          reduce using rule 12 (sentence -> expression .)
    BREAK           reduce using rule 12 (sentence -> expression .)
    ID              reduce using rule 12 (sentence -> expression .)
    PUTS            reduce using rule 12 (sentence -> expression .)
    IF              reduce using rule 12 (sentence -> expression .)
    WHILE           reduce using rule 12 (sentence -> expression .)
    FOR             reduce using rule 12 (sentence -> expression .)
    LPAREN          reduce using rule 12 (sentence -> expression .)
    DEF             reduce using rule 12 (sentence -> expression .)
    CLASS           reduce using rule 12 (sentence -> expression .)
    INTEGER         reduce using rule 12 (sentence -> expression .)
    FLOAT           reduce using rule 12 (sentence -> expression .)
    STRING          reduce using rule 12 (sentence -> expression .)
    BOOLEAN         reduce using rule 12 (sentence -> expression .)
    VAR_INST        reduce using rule 12 (sentence -> expression .)
    TRUE            reduce using rule 12 (sentence -> expression .)
    FALSE           reduce using rule 12 (sentence -> expression .)
    NIL             reduce using rule 12 (sentence -> expression .)
    END             reduce using rule 12 (sentence -> expression .)
    ELSE            reduce using rule 12 (sentence -> expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 5

    (13) sentence -> print .

    $end            reduce using rule 13 (sentence -> print .)
    RETURN          reduce using rule 13 (sentence -> print .)
    BREAK           reduce using rule 13 (sentence -> print .)
    ID              reduce using rule 13 (sentence -> print .)
    PUTS            reduce using rule 13 (sentence -> print .)
    IF              reduce using rule 13 (sentence -> print .)
    WHILE           reduce using rule 13 (sentence -> print .)
    FOR             reduce using rule 13 (sentence -> print .)
    LPAREN          reduce using rule 13 (sentence -> print .)
    DEF             reduce using rule 13 (sentence -> print .)
    CLASS           reduce using rule 13 (sentence -> print .)
    INTEGER         reduce using rule 13 (sentence -> print .)
    FLOAT           reduce using rule 13 (sentence -> print .)
    STRING          reduce using rule 13 (sentence -> print .)
    BOOLEAN         reduce using rule 13 (sentence -> print .)
    VAR_INST        reduce using rule 13 (sentence -> print .)
    TRUE            reduce using rule 13 (sentence -> print .)
    FALSE           reduce using rule 13 (sentence -> print .)
    NIL             reduce using rule 13 (sentence -> print .)
    END             reduce using rule 13 (sentence -> print .)
    ELSE            reduce using rule 13 (sentence -> print .)


state 6

    (14) sentence -> input .

    $end            reduce using rule 14 (sentence -> input .)
    RETURN          reduce using rule 14 (sentence -> input .)
    BREAK           reduce using rule 14 (sentence -> input .)
    ID              reduce using rule 14 (sentence -> input .)
    PUTS            reduce using rule 14 (sentence -> input .)
    IF              reduce using rule 14 (sentence -> input .)
    WHILE           reduce using rule 14 (sentence -> input .)
    FOR             reduce using rule 14 (sentence -> input .)
    LPAREN          reduce using rule 14 (sentence -> input .)
    DEF             reduce using rule 14 (sentence -> input .)
    CLASS           reduce using rule 14 (sentence -> input .)
    INTEGER         reduce using rule 14 (sentence -> input .)
    FLOAT           reduce using rule 14 (sentence -> input .)
    STRING          reduce using rule 14 (sentence -> input .)
    BOOLEAN         reduce using rule 14 (sentence -> input .)
    VAR_INST        reduce using rule 14 (sentence -> input .)
    TRUE            reduce using rule 14 (sentence -> input .)
    FALSE           reduce using rule 14 (sentence -> input .)
    NIL             reduce using rule 14 (sentence -> input .)
    END             reduce using rule 14 (sentence -> input .)
    ELSE            reduce using rule 14 (sentence -> input .)


state 7

    (15) sentence -> condition .

    $end            reduce using rule 15 (sentence -> condition .)
    RETURN          reduce using rule 15 (sentence -> condition .)
    BREAK           reduce using rule 15 (sentence -> condition .)
    ID              reduce using rule 15 (sentence -> condition .)
    PUTS            reduce using rule 15 (sentence -> condition .)
    IF              reduce using rule 15 (sentence -> condition .)
    WHILE           reduce using rule 15 (sentence -> condition .)
    FOR             reduce using rule 15 (sentence -> condition .)
    LPAREN          reduce using rule 15 (sentence -> condition .)
    DEF             reduce using rule 15 (sentence -> condition .)
    CLASS           reduce using rule 15 (sentence -> condition .)
    INTEGER         reduce using rule 15 (sentence -> condition .)
    FLOAT           reduce using rule 15 (sentence -> condition .)
    STRING          reduce using rule 15 (sentence -> condition .)
    BOOLEAN         reduce using rule 15 (sentence -> condition .)
    VAR_INST        reduce using rule 15 (sentence -> condition .)
    TRUE            reduce using rule 15 (sentence -> condition .)
    FALSE           reduce using rule 15 (sentence -> condition .)
    NIL             reduce using rule 15 (sentence -> condition .)
    END             reduce using rule 15 (sentence -> condition .)
    ELSE            reduce using rule 15 (sentence -> condition .)


state 8

    (16) sentence -> while_loop .

    $end            reduce using rule 16 (sentence -> while_loop .)
    RETURN          reduce using rule 16 (sentence -> while_loop .)
    BREAK           reduce using rule 16 (sentence -> while_loop .)
    ID              reduce using rule 16 (sentence -> while_loop .)
    PUTS            reduce using rule 16 (sentence -> while_loop .)
    IF              reduce using rule 16 (sentence -> while_loop .)
    WHILE           reduce using rule 16 (sentence -> while_loop .)
    FOR             reduce using rule 16 (sentence -> while_loop .)
    LPAREN          reduce using rule 16 (sentence -> while_loop .)
    DEF             reduce using rule 16 (sentence -> while_loop .)
    CLASS           reduce using rule 16 (sentence -> while_loop .)
    INTEGER         reduce using rule 16 (sentence -> while_loop .)
    FLOAT           reduce using rule 16 (sentence -> while_loop .)
    STRING          reduce using rule 16 (sentence -> while_loop .)
    BOOLEAN         reduce using rule 16 (sentence -> while_loop .)
    VAR_INST        reduce using rule 16 (sentence -> while_loop .)
    TRUE            reduce using rule 16 (sentence -> while_loop .)
    FALSE           reduce using rule 16 (sentence -> while_loop .)
    NIL             reduce using rule 16 (sentence -> while_loop .)
    END             reduce using rule 16 (sentence -> while_loop .)
    ELSE            reduce using rule 16 (sentence -> while_loop .)


state 9

    (17) sentence -> for_loop .

    $end            reduce using rule 17 (sentence -> for_loop .)
    RETURN          reduce using rule 17 (sentence -> for_loop .)
    BREAK           reduce using rule 17 (sentence -> for_loop .)
    ID              reduce using rule 17 (sentence -> for_loop .)
    PUTS            reduce using rule 17 (sentence -> for_loop .)
    IF              reduce using rule 17 (sentence -> for_loop .)
    WHILE           reduce using rule 17 (sentence -> for_loop .)
    FOR             reduce using rule 17 (sentence -> for_loop .)
    LPAREN          reduce using rule 17 (sentence -> for_loop .)
    DEF             reduce using rule 17 (sentence -> for_loop .)
    CLASS           reduce using rule 17 (sentence -> for_loop .)
    INTEGER         reduce using rule 17 (sentence -> for_loop .)
    FLOAT           reduce using rule 17 (sentence -> for_loop .)
    STRING          reduce using rule 17 (sentence -> for_loop .)
    BOOLEAN         reduce using rule 17 (sentence -> for_loop .)
    VAR_INST        reduce using rule 17 (sentence -> for_loop .)
    TRUE            reduce using rule 17 (sentence -> for_loop .)
    FALSE           reduce using rule 17 (sentence -> for_loop .)
    NIL             reduce using rule 17 (sentence -> for_loop .)
    END             reduce using rule 17 (sentence -> for_loop .)
    ELSE            reduce using rule 17 (sentence -> for_loop .)


state 10

    (18) sentence -> array .

    $end            reduce using rule 18 (sentence -> array .)
    RETURN          reduce using rule 18 (sentence -> array .)
    BREAK           reduce using rule 18 (sentence -> array .)
    ID              reduce using rule 18 (sentence -> array .)
    PUTS            reduce using rule 18 (sentence -> array .)
    IF              reduce using rule 18 (sentence -> array .)
    WHILE           reduce using rule 18 (sentence -> array .)
    FOR             reduce using rule 18 (sentence -> array .)
    LPAREN          reduce using rule 18 (sentence -> array .)
    DEF             reduce using rule 18 (sentence -> array .)
    CLASS           reduce using rule 18 (sentence -> array .)
    INTEGER         reduce using rule 18 (sentence -> array .)
    FLOAT           reduce using rule 18 (sentence -> array .)
    STRING          reduce using rule 18 (sentence -> array .)
    BOOLEAN         reduce using rule 18 (sentence -> array .)
    VAR_INST        reduce using rule 18 (sentence -> array .)
    TRUE            reduce using rule 18 (sentence -> array .)
    FALSE           reduce using rule 18 (sentence -> array .)
    NIL             reduce using rule 18 (sentence -> array .)
    END             reduce using rule 18 (sentence -> array .)
    ELSE            reduce using rule 18 (sentence -> array .)


state 11

    (19) sentence -> range_incl .

    $end            reduce using rule 19 (sentence -> range_incl .)
    RETURN          reduce using rule 19 (sentence -> range_incl .)
    BREAK           reduce using rule 19 (sentence -> range_incl .)
    ID              reduce using rule 19 (sentence -> range_incl .)
    PUTS            reduce using rule 19 (sentence -> range_incl .)
    IF              reduce using rule 19 (sentence -> range_incl .)
    WHILE           reduce using rule 19 (sentence -> range_incl .)
    FOR             reduce using rule 19 (sentence -> range_incl .)
    LPAREN          reduce using rule 19 (sentence -> range_incl .)
    DEF             reduce using rule 19 (sentence -> range_incl .)
    CLASS           reduce using rule 19 (sentence -> range_incl .)
    INTEGER         reduce using rule 19 (sentence -> range_incl .)
    FLOAT           reduce using rule 19 (sentence -> range_incl .)
    STRING          reduce using rule 19 (sentence -> range_incl .)
    BOOLEAN         reduce using rule 19 (sentence -> range_incl .)
    VAR_INST        reduce using rule 19 (sentence -> range_incl .)
    TRUE            reduce using rule 19 (sentence -> range_incl .)
    FALSE           reduce using rule 19 (sentence -> range_incl .)
    NIL             reduce using rule 19 (sentence -> range_incl .)
    END             reduce using rule 19 (sentence -> range_incl .)
    ELSE            reduce using rule 19 (sentence -> range_incl .)


state 12

    (20) sentence -> range_excl .

    $end            reduce using rule 20 (sentence -> range_excl .)
    RETURN          reduce using rule 20 (sentence -> range_excl .)
    BREAK           reduce using rule 20 (sentence -> range_excl .)
    ID              reduce using rule 20 (sentence -> range_excl .)
    PUTS            reduce using rule 20 (sentence -> range_excl .)
    IF              reduce using rule 20 (sentence -> range_excl .)
    WHILE           reduce using rule 20 (sentence -> range_excl .)
    FOR             reduce using rule 20 (sentence -> range_excl .)
    LPAREN          reduce using rule 20 (sentence -> range_excl .)
    DEF             reduce using rule 20 (sentence -> range_excl .)
    CLASS           reduce using rule 20 (sentence -> range_excl .)
    INTEGER         reduce using rule 20 (sentence -> range_excl .)
    FLOAT           reduce using rule 20 (sentence -> range_excl .)
    STRING          reduce using rule 20 (sentence -> range_excl .)
    BOOLEAN         reduce using rule 20 (sentence -> range_excl .)
    VAR_INST        reduce using rule 20 (sentence -> range_excl .)
    TRUE            reduce using rule 20 (sentence -> range_excl .)
    FALSE           reduce using rule 20 (sentence -> range_excl .)
    NIL             reduce using rule 20 (sentence -> range_excl .)
    END             reduce using rule 20 (sentence -> range_excl .)
    ELSE            reduce using rule 20 (sentence -> range_excl .)


state 13

    (21) sentence -> hash .

    $end            reduce using rule 21 (sentence -> hash .)
    RETURN          reduce using rule 21 (sentence -> hash .)
    BREAK           reduce using rule 21 (sentence -> hash .)
    ID              reduce using rule 21 (sentence -> hash .)
    PUTS            reduce using rule 21 (sentence -> hash .)
    IF              reduce using rule 21 (sentence -> hash .)
    WHILE           reduce using rule 21 (sentence -> hash .)
    FOR             reduce using rule 21 (sentence -> hash .)
    LPAREN          reduce using rule 21 (sentence -> hash .)
    DEF             reduce using rule 21 (sentence -> hash .)
    CLASS           reduce using rule 21 (sentence -> hash .)
    INTEGER         reduce using rule 21 (sentence -> hash .)
    FLOAT           reduce using rule 21 (sentence -> hash .)
    STRING          reduce using rule 21 (sentence -> hash .)
    BOOLEAN         reduce using rule 21 (sentence -> hash .)
    VAR_INST        reduce using rule 21 (sentence -> hash .)
    TRUE            reduce using rule 21 (sentence -> hash .)
    FALSE           reduce using rule 21 (sentence -> hash .)
    NIL             reduce using rule 21 (sentence -> hash .)
    END             reduce using rule 21 (sentence -> hash .)
    ELSE            reduce using rule 21 (sentence -> hash .)


state 14

    (22) sentence -> function .

    $end            reduce using rule 22 (sentence -> function .)
    RETURN          reduce using rule 22 (sentence -> function .)
    BREAK           reduce using rule 22 (sentence -> function .)
    ID              reduce using rule 22 (sentence -> function .)
    PUTS            reduce using rule 22 (sentence -> function .)
    IF              reduce using rule 22 (sentence -> function .)
    WHILE           reduce using rule 22 (sentence -> function .)
    FOR             reduce using rule 22 (sentence -> function .)
    LPAREN          reduce using rule 22 (sentence -> function .)
    DEF             reduce using rule 22 (sentence -> function .)
    CLASS           reduce using rule 22 (sentence -> function .)
    INTEGER         reduce using rule 22 (sentence -> function .)
    FLOAT           reduce using rule 22 (sentence -> function .)
    STRING          reduce using rule 22 (sentence -> function .)
    BOOLEAN         reduce using rule 22 (sentence -> function .)
    VAR_INST        reduce using rule 22 (sentence -> function .)
    TRUE            reduce using rule 22 (sentence -> function .)
    FALSE           reduce using rule 22 (sentence -> function .)
    NIL             reduce using rule 22 (sentence -> function .)
    END             reduce using rule 22 (sentence -> function .)
    ELSE            reduce using rule 22 (sentence -> function .)


state 15

    (23) sentence -> class_def .

    $end            reduce using rule 23 (sentence -> class_def .)
    RETURN          reduce using rule 23 (sentence -> class_def .)
    BREAK           reduce using rule 23 (sentence -> class_def .)
    ID              reduce using rule 23 (sentence -> class_def .)
    PUTS            reduce using rule 23 (sentence -> class_def .)
    IF              reduce using rule 23 (sentence -> class_def .)
    WHILE           reduce using rule 23 (sentence -> class_def .)
    FOR             reduce using rule 23 (sentence -> class_def .)
    LPAREN          reduce using rule 23 (sentence -> class_def .)
    DEF             reduce using rule 23 (sentence -> class_def .)
    CLASS           reduce using rule 23 (sentence -> class_def .)
    INTEGER         reduce using rule 23 (sentence -> class_def .)
    FLOAT           reduce using rule 23 (sentence -> class_def .)
    STRING          reduce using rule 23 (sentence -> class_def .)
    BOOLEAN         reduce using rule 23 (sentence -> class_def .)
    VAR_INST        reduce using rule 23 (sentence -> class_def .)
    TRUE            reduce using rule 23 (sentence -> class_def .)
    FALSE           reduce using rule 23 (sentence -> class_def .)
    NIL             reduce using rule 23 (sentence -> class_def .)
    END             reduce using rule 23 (sentence -> class_def .)
    ELSE            reduce using rule 23 (sentence -> class_def .)


state 16

    (24) sentence -> RETURN . factor
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    ID              shift and go to state 39
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    factor                         shift and go to state 38

state 17

    (36) term -> factor .

    TIMES           reduce using rule 36 (term -> factor .)
    DIVIDE          reduce using rule 36 (term -> factor .)
    EXPONENT        reduce using rule 36 (term -> factor .)
    MODULE          reduce using rule 36 (term -> factor .)
    PLUS            reduce using rule 36 (term -> factor .)
    MINUS           reduce using rule 36 (term -> factor .)
    $end            reduce using rule 36 (term -> factor .)
    RETURN          reduce using rule 36 (term -> factor .)
    BREAK           reduce using rule 36 (term -> factor .)
    ID              reduce using rule 36 (term -> factor .)
    PUTS            reduce using rule 36 (term -> factor .)
    IF              reduce using rule 36 (term -> factor .)
    WHILE           reduce using rule 36 (term -> factor .)
    FOR             reduce using rule 36 (term -> factor .)
    LPAREN          reduce using rule 36 (term -> factor .)
    DEF             reduce using rule 36 (term -> factor .)
    CLASS           reduce using rule 36 (term -> factor .)
    INTEGER         reduce using rule 36 (term -> factor .)
    FLOAT           reduce using rule 36 (term -> factor .)
    STRING          reduce using rule 36 (term -> factor .)
    BOOLEAN         reduce using rule 36 (term -> factor .)
    VAR_INST        reduce using rule 36 (term -> factor .)
    TRUE            reduce using rule 36 (term -> factor .)
    FALSE           reduce using rule 36 (term -> factor .)
    NIL             reduce using rule 36 (term -> factor .)
    END             reduce using rule 36 (term -> factor .)
    ELSE            reduce using rule 36 (term -> factor .)


state 18

    (25) sentence -> BREAK .

    $end            reduce using rule 25 (sentence -> BREAK .)
    RETURN          reduce using rule 25 (sentence -> BREAK .)
    BREAK           reduce using rule 25 (sentence -> BREAK .)
    ID              reduce using rule 25 (sentence -> BREAK .)
    PUTS            reduce using rule 25 (sentence -> BREAK .)
    IF              reduce using rule 25 (sentence -> BREAK .)
    WHILE           reduce using rule 25 (sentence -> BREAK .)
    FOR             reduce using rule 25 (sentence -> BREAK .)
    LPAREN          reduce using rule 25 (sentence -> BREAK .)
    DEF             reduce using rule 25 (sentence -> BREAK .)
    CLASS           reduce using rule 25 (sentence -> BREAK .)
    INTEGER         reduce using rule 25 (sentence -> BREAK .)
    FLOAT           reduce using rule 25 (sentence -> BREAK .)
    STRING          reduce using rule 25 (sentence -> BREAK .)
    BOOLEAN         reduce using rule 25 (sentence -> BREAK .)
    VAR_INST        reduce using rule 25 (sentence -> BREAK .)
    TRUE            reduce using rule 25 (sentence -> BREAK .)
    FALSE           reduce using rule 25 (sentence -> BREAK .)
    NIL             reduce using rule 25 (sentence -> BREAK .)
    END             reduce using rule 25 (sentence -> BREAK .)
    ELSE            reduce using rule 25 (sentence -> BREAK .)


state 19

    (26) assignment -> ID . ASSIGN expression
    (28) input -> ID . ASSIGN GETS DOT ID
    (46) array -> ID . ASSIGN LCORCH elements RCORCH
    (50) hash -> ID . ASSIGN LBRACE hash_pairs RBRACE
    (41) factor -> ID .

    ASSIGN          shift and go to state 40
    TIMES           reduce using rule 41 (factor -> ID .)
    DIVIDE          reduce using rule 41 (factor -> ID .)
    EXPONENT        reduce using rule 41 (factor -> ID .)
    MODULE          reduce using rule 41 (factor -> ID .)
    PLUS            reduce using rule 41 (factor -> ID .)
    MINUS           reduce using rule 41 (factor -> ID .)
    $end            reduce using rule 41 (factor -> ID .)
    RETURN          reduce using rule 41 (factor -> ID .)
    BREAK           reduce using rule 41 (factor -> ID .)
    ID              reduce using rule 41 (factor -> ID .)
    PUTS            reduce using rule 41 (factor -> ID .)
    IF              reduce using rule 41 (factor -> ID .)
    WHILE           reduce using rule 41 (factor -> ID .)
    FOR             reduce using rule 41 (factor -> ID .)
    LPAREN          reduce using rule 41 (factor -> ID .)
    DEF             reduce using rule 41 (factor -> ID .)
    CLASS           reduce using rule 41 (factor -> ID .)
    INTEGER         reduce using rule 41 (factor -> ID .)
    FLOAT           reduce using rule 41 (factor -> ID .)
    STRING          reduce using rule 41 (factor -> ID .)
    BOOLEAN         reduce using rule 41 (factor -> ID .)
    VAR_INST        reduce using rule 41 (factor -> ID .)
    TRUE            reduce using rule 41 (factor -> ID .)
    FALSE           reduce using rule 41 (factor -> ID .)
    NIL             reduce using rule 41 (factor -> ID .)
    END             reduce using rule 41 (factor -> ID .)
    ELSE            reduce using rule 41 (factor -> ID .)


state 20

    (31) expression -> term .
    (32) term -> term . TIMES factor
    (33) term -> term . DIVIDE factor
    (34) term -> term . EXPONENT factor
    (35) term -> term . MODULE factor

    PLUS            reduce using rule 31 (expression -> term .)
    MINUS           reduce using rule 31 (expression -> term .)
    $end            reduce using rule 31 (expression -> term .)
    RETURN          reduce using rule 31 (expression -> term .)
    BREAK           reduce using rule 31 (expression -> term .)
    ID              reduce using rule 31 (expression -> term .)
    PUTS            reduce using rule 31 (expression -> term .)
    IF              reduce using rule 31 (expression -> term .)
    WHILE           reduce using rule 31 (expression -> term .)
    FOR             reduce using rule 31 (expression -> term .)
    LPAREN          reduce using rule 31 (expression -> term .)
    DEF             reduce using rule 31 (expression -> term .)
    CLASS           reduce using rule 31 (expression -> term .)
    INTEGER         reduce using rule 31 (expression -> term .)
    FLOAT           reduce using rule 31 (expression -> term .)
    STRING          reduce using rule 31 (expression -> term .)
    BOOLEAN         reduce using rule 31 (expression -> term .)
    VAR_INST        reduce using rule 31 (expression -> term .)
    TRUE            reduce using rule 31 (expression -> term .)
    FALSE           reduce using rule 31 (expression -> term .)
    NIL             reduce using rule 31 (expression -> term .)
    END             reduce using rule 31 (expression -> term .)
    ELSE            reduce using rule 31 (expression -> term .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    EXPONENT        shift and go to state 43
    MODULE          shift and go to state 44


state 21

    (9) print -> PUTS . factor
    (27) input -> PUTS . STRING
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    STRING          shift and go to state 46
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    BOOLEAN         shift and go to state 31
    ID              shift and go to state 39
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    factor                         shift and go to state 45

state 22

    (39) factor -> STRING .

    TIMES           reduce using rule 39 (factor -> STRING .)
    DIVIDE          reduce using rule 39 (factor -> STRING .)
    EXPONENT        reduce using rule 39 (factor -> STRING .)
    MODULE          reduce using rule 39 (factor -> STRING .)
    PLUS            reduce using rule 39 (factor -> STRING .)
    MINUS           reduce using rule 39 (factor -> STRING .)
    $end            reduce using rule 39 (factor -> STRING .)
    RETURN          reduce using rule 39 (factor -> STRING .)
    BREAK           reduce using rule 39 (factor -> STRING .)
    ID              reduce using rule 39 (factor -> STRING .)
    PUTS            reduce using rule 39 (factor -> STRING .)
    IF              reduce using rule 39 (factor -> STRING .)
    WHILE           reduce using rule 39 (factor -> STRING .)
    FOR             reduce using rule 39 (factor -> STRING .)
    LPAREN          reduce using rule 39 (factor -> STRING .)
    DEF             reduce using rule 39 (factor -> STRING .)
    CLASS           reduce using rule 39 (factor -> STRING .)
    INTEGER         reduce using rule 39 (factor -> STRING .)
    FLOAT           reduce using rule 39 (factor -> STRING .)
    STRING          reduce using rule 39 (factor -> STRING .)
    BOOLEAN         reduce using rule 39 (factor -> STRING .)
    VAR_INST        reduce using rule 39 (factor -> STRING .)
    TRUE            reduce using rule 39 (factor -> STRING .)
    FALSE           reduce using rule 39 (factor -> STRING .)
    NIL             reduce using rule 39 (factor -> STRING .)
    END             reduce using rule 39 (factor -> STRING .)
    ELSE            reduce using rule 39 (factor -> STRING .)
    EQUALS          reduce using rule 39 (factor -> STRING .)
    NEQUALS         reduce using rule 39 (factor -> STRING .)
    GREATEREQ       reduce using rule 39 (factor -> STRING .)
    LESSEQ          reduce using rule 39 (factor -> STRING .)
    GREATERT        reduce using rule 39 (factor -> STRING .)
    LESST           reduce using rule 39 (factor -> STRING .)
    COMMA           reduce using rule 39 (factor -> STRING .)
    RCORCH          reduce using rule 39 (factor -> STRING .)
    AND             reduce using rule 39 (factor -> STRING .)
    OR              reduce using rule 39 (factor -> STRING .)
    RBRACE          reduce using rule 39 (factor -> STRING .)


state 23

    (56) condition -> IF . logic_expression body END
    (57) condition -> IF . logic_expression body ELSE body END
    (58) logic_expression -> . factor logic_op factor
    (59) logic_expression -> . factor logic_op factor logic_connector logic_expression
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    ID              shift and go to state 39
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    logic_expression               shift and go to state 47
    factor                         shift and go to state 48

state 24

    (53) while_loop -> WHILE . logic_expression body END
    (58) logic_expression -> . factor logic_op factor
    (59) logic_expression -> . factor logic_op factor logic_connector logic_expression
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    ID              shift and go to state 39
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    logic_expression               shift and go to state 49
    factor                         shift and go to state 48

state 25

    (49) for_loop -> FOR . ID IN range_incl body END

    ID              shift and go to state 50


state 26

    (54) range_incl -> LPAREN . INTEGER RANGE_INCL INTEGER RPAREN
    (55) range_excl -> LPAREN . INTEGER RANGE_EXCL INTEGER RPAREN

    INTEGER         shift and go to state 51


state 27

    (37) factor -> INTEGER .

    TIMES           reduce using rule 37 (factor -> INTEGER .)
    DIVIDE          reduce using rule 37 (factor -> INTEGER .)
    EXPONENT        reduce using rule 37 (factor -> INTEGER .)
    MODULE          reduce using rule 37 (factor -> INTEGER .)
    PLUS            reduce using rule 37 (factor -> INTEGER .)
    MINUS           reduce using rule 37 (factor -> INTEGER .)
    $end            reduce using rule 37 (factor -> INTEGER .)
    RETURN          reduce using rule 37 (factor -> INTEGER .)
    BREAK           reduce using rule 37 (factor -> INTEGER .)
    ID              reduce using rule 37 (factor -> INTEGER .)
    PUTS            reduce using rule 37 (factor -> INTEGER .)
    IF              reduce using rule 37 (factor -> INTEGER .)
    WHILE           reduce using rule 37 (factor -> INTEGER .)
    FOR             reduce using rule 37 (factor -> INTEGER .)
    LPAREN          reduce using rule 37 (factor -> INTEGER .)
    DEF             reduce using rule 37 (factor -> INTEGER .)
    CLASS           reduce using rule 37 (factor -> INTEGER .)
    INTEGER         reduce using rule 37 (factor -> INTEGER .)
    FLOAT           reduce using rule 37 (factor -> INTEGER .)
    STRING          reduce using rule 37 (factor -> INTEGER .)
    BOOLEAN         reduce using rule 37 (factor -> INTEGER .)
    VAR_INST        reduce using rule 37 (factor -> INTEGER .)
    TRUE            reduce using rule 37 (factor -> INTEGER .)
    FALSE           reduce using rule 37 (factor -> INTEGER .)
    NIL             reduce using rule 37 (factor -> INTEGER .)
    END             reduce using rule 37 (factor -> INTEGER .)
    ELSE            reduce using rule 37 (factor -> INTEGER .)
    EQUALS          reduce using rule 37 (factor -> INTEGER .)
    NEQUALS         reduce using rule 37 (factor -> INTEGER .)
    GREATEREQ       reduce using rule 37 (factor -> INTEGER .)
    LESSEQ          reduce using rule 37 (factor -> INTEGER .)
    GREATERT        reduce using rule 37 (factor -> INTEGER .)
    LESST           reduce using rule 37 (factor -> INTEGER .)
    COMMA           reduce using rule 37 (factor -> INTEGER .)
    RCORCH          reduce using rule 37 (factor -> INTEGER .)
    AND             reduce using rule 37 (factor -> INTEGER .)
    OR              reduce using rule 37 (factor -> INTEGER .)
    RBRACE          reduce using rule 37 (factor -> INTEGER .)


state 28

    (2) function -> DEF . ID body END
    (3) function -> DEF . ID LPAREN args_multiple RPAREN body END
    (4) function -> DEF . ID LPAREN args RPAREN body END

    ID              shift and go to state 52


state 29

    (10) class_def -> CLASS . ID body END

    ID              shift and go to state 53


state 30

    (38) factor -> FLOAT .

    TIMES           reduce using rule 38 (factor -> FLOAT .)
    DIVIDE          reduce using rule 38 (factor -> FLOAT .)
    EXPONENT        reduce using rule 38 (factor -> FLOAT .)
    MODULE          reduce using rule 38 (factor -> FLOAT .)
    PLUS            reduce using rule 38 (factor -> FLOAT .)
    MINUS           reduce using rule 38 (factor -> FLOAT .)
    $end            reduce using rule 38 (factor -> FLOAT .)
    RETURN          reduce using rule 38 (factor -> FLOAT .)
    BREAK           reduce using rule 38 (factor -> FLOAT .)
    ID              reduce using rule 38 (factor -> FLOAT .)
    PUTS            reduce using rule 38 (factor -> FLOAT .)
    IF              reduce using rule 38 (factor -> FLOAT .)
    WHILE           reduce using rule 38 (factor -> FLOAT .)
    FOR             reduce using rule 38 (factor -> FLOAT .)
    LPAREN          reduce using rule 38 (factor -> FLOAT .)
    DEF             reduce using rule 38 (factor -> FLOAT .)
    CLASS           reduce using rule 38 (factor -> FLOAT .)
    INTEGER         reduce using rule 38 (factor -> FLOAT .)
    FLOAT           reduce using rule 38 (factor -> FLOAT .)
    STRING          reduce using rule 38 (factor -> FLOAT .)
    BOOLEAN         reduce using rule 38 (factor -> FLOAT .)
    VAR_INST        reduce using rule 38 (factor -> FLOAT .)
    TRUE            reduce using rule 38 (factor -> FLOAT .)
    FALSE           reduce using rule 38 (factor -> FLOAT .)
    NIL             reduce using rule 38 (factor -> FLOAT .)
    END             reduce using rule 38 (factor -> FLOAT .)
    ELSE            reduce using rule 38 (factor -> FLOAT .)
    EQUALS          reduce using rule 38 (factor -> FLOAT .)
    NEQUALS         reduce using rule 38 (factor -> FLOAT .)
    GREATEREQ       reduce using rule 38 (factor -> FLOAT .)
    LESSEQ          reduce using rule 38 (factor -> FLOAT .)
    GREATERT        reduce using rule 38 (factor -> FLOAT .)
    LESST           reduce using rule 38 (factor -> FLOAT .)
    COMMA           reduce using rule 38 (factor -> FLOAT .)
    RCORCH          reduce using rule 38 (factor -> FLOAT .)
    AND             reduce using rule 38 (factor -> FLOAT .)
    OR              reduce using rule 38 (factor -> FLOAT .)
    RBRACE          reduce using rule 38 (factor -> FLOAT .)


state 31

    (40) factor -> BOOLEAN .

    TIMES           reduce using rule 40 (factor -> BOOLEAN .)
    DIVIDE          reduce using rule 40 (factor -> BOOLEAN .)
    EXPONENT        reduce using rule 40 (factor -> BOOLEAN .)
    MODULE          reduce using rule 40 (factor -> BOOLEAN .)
    PLUS            reduce using rule 40 (factor -> BOOLEAN .)
    MINUS           reduce using rule 40 (factor -> BOOLEAN .)
    $end            reduce using rule 40 (factor -> BOOLEAN .)
    RETURN          reduce using rule 40 (factor -> BOOLEAN .)
    BREAK           reduce using rule 40 (factor -> BOOLEAN .)
    ID              reduce using rule 40 (factor -> BOOLEAN .)
    PUTS            reduce using rule 40 (factor -> BOOLEAN .)
    IF              reduce using rule 40 (factor -> BOOLEAN .)
    WHILE           reduce using rule 40 (factor -> BOOLEAN .)
    FOR             reduce using rule 40 (factor -> BOOLEAN .)
    LPAREN          reduce using rule 40 (factor -> BOOLEAN .)
    DEF             reduce using rule 40 (factor -> BOOLEAN .)
    CLASS           reduce using rule 40 (factor -> BOOLEAN .)
    INTEGER         reduce using rule 40 (factor -> BOOLEAN .)
    FLOAT           reduce using rule 40 (factor -> BOOLEAN .)
    STRING          reduce using rule 40 (factor -> BOOLEAN .)
    BOOLEAN         reduce using rule 40 (factor -> BOOLEAN .)
    VAR_INST        reduce using rule 40 (factor -> BOOLEAN .)
    TRUE            reduce using rule 40 (factor -> BOOLEAN .)
    FALSE           reduce using rule 40 (factor -> BOOLEAN .)
    NIL             reduce using rule 40 (factor -> BOOLEAN .)
    END             reduce using rule 40 (factor -> BOOLEAN .)
    ELSE            reduce using rule 40 (factor -> BOOLEAN .)
    EQUALS          reduce using rule 40 (factor -> BOOLEAN .)
    NEQUALS         reduce using rule 40 (factor -> BOOLEAN .)
    GREATEREQ       reduce using rule 40 (factor -> BOOLEAN .)
    LESSEQ          reduce using rule 40 (factor -> BOOLEAN .)
    GREATERT        reduce using rule 40 (factor -> BOOLEAN .)
    LESST           reduce using rule 40 (factor -> BOOLEAN .)
    COMMA           reduce using rule 40 (factor -> BOOLEAN .)
    RCORCH          reduce using rule 40 (factor -> BOOLEAN .)
    AND             reduce using rule 40 (factor -> BOOLEAN .)
    OR              reduce using rule 40 (factor -> BOOLEAN .)
    RBRACE          reduce using rule 40 (factor -> BOOLEAN .)


state 32

    (42) factor -> VAR_INST .

    TIMES           reduce using rule 42 (factor -> VAR_INST .)
    DIVIDE          reduce using rule 42 (factor -> VAR_INST .)
    EXPONENT        reduce using rule 42 (factor -> VAR_INST .)
    MODULE          reduce using rule 42 (factor -> VAR_INST .)
    PLUS            reduce using rule 42 (factor -> VAR_INST .)
    MINUS           reduce using rule 42 (factor -> VAR_INST .)
    $end            reduce using rule 42 (factor -> VAR_INST .)
    RETURN          reduce using rule 42 (factor -> VAR_INST .)
    BREAK           reduce using rule 42 (factor -> VAR_INST .)
    ID              reduce using rule 42 (factor -> VAR_INST .)
    PUTS            reduce using rule 42 (factor -> VAR_INST .)
    IF              reduce using rule 42 (factor -> VAR_INST .)
    WHILE           reduce using rule 42 (factor -> VAR_INST .)
    FOR             reduce using rule 42 (factor -> VAR_INST .)
    LPAREN          reduce using rule 42 (factor -> VAR_INST .)
    DEF             reduce using rule 42 (factor -> VAR_INST .)
    CLASS           reduce using rule 42 (factor -> VAR_INST .)
    INTEGER         reduce using rule 42 (factor -> VAR_INST .)
    FLOAT           reduce using rule 42 (factor -> VAR_INST .)
    STRING          reduce using rule 42 (factor -> VAR_INST .)
    BOOLEAN         reduce using rule 42 (factor -> VAR_INST .)
    VAR_INST        reduce using rule 42 (factor -> VAR_INST .)
    TRUE            reduce using rule 42 (factor -> VAR_INST .)
    FALSE           reduce using rule 42 (factor -> VAR_INST .)
    NIL             reduce using rule 42 (factor -> VAR_INST .)
    END             reduce using rule 42 (factor -> VAR_INST .)
    ELSE            reduce using rule 42 (factor -> VAR_INST .)
    EQUALS          reduce using rule 42 (factor -> VAR_INST .)
    NEQUALS         reduce using rule 42 (factor -> VAR_INST .)
    GREATEREQ       reduce using rule 42 (factor -> VAR_INST .)
    LESSEQ          reduce using rule 42 (factor -> VAR_INST .)
    GREATERT        reduce using rule 42 (factor -> VAR_INST .)
    LESST           reduce using rule 42 (factor -> VAR_INST .)
    COMMA           reduce using rule 42 (factor -> VAR_INST .)
    RCORCH          reduce using rule 42 (factor -> VAR_INST .)
    AND             reduce using rule 42 (factor -> VAR_INST .)
    OR              reduce using rule 42 (factor -> VAR_INST .)
    RBRACE          reduce using rule 42 (factor -> VAR_INST .)


state 33

    (43) factor -> TRUE .

    TIMES           reduce using rule 43 (factor -> TRUE .)
    DIVIDE          reduce using rule 43 (factor -> TRUE .)
    EXPONENT        reduce using rule 43 (factor -> TRUE .)
    MODULE          reduce using rule 43 (factor -> TRUE .)
    PLUS            reduce using rule 43 (factor -> TRUE .)
    MINUS           reduce using rule 43 (factor -> TRUE .)
    $end            reduce using rule 43 (factor -> TRUE .)
    RETURN          reduce using rule 43 (factor -> TRUE .)
    BREAK           reduce using rule 43 (factor -> TRUE .)
    ID              reduce using rule 43 (factor -> TRUE .)
    PUTS            reduce using rule 43 (factor -> TRUE .)
    IF              reduce using rule 43 (factor -> TRUE .)
    WHILE           reduce using rule 43 (factor -> TRUE .)
    FOR             reduce using rule 43 (factor -> TRUE .)
    LPAREN          reduce using rule 43 (factor -> TRUE .)
    DEF             reduce using rule 43 (factor -> TRUE .)
    CLASS           reduce using rule 43 (factor -> TRUE .)
    INTEGER         reduce using rule 43 (factor -> TRUE .)
    FLOAT           reduce using rule 43 (factor -> TRUE .)
    STRING          reduce using rule 43 (factor -> TRUE .)
    BOOLEAN         reduce using rule 43 (factor -> TRUE .)
    VAR_INST        reduce using rule 43 (factor -> TRUE .)
    TRUE            reduce using rule 43 (factor -> TRUE .)
    FALSE           reduce using rule 43 (factor -> TRUE .)
    NIL             reduce using rule 43 (factor -> TRUE .)
    END             reduce using rule 43 (factor -> TRUE .)
    ELSE            reduce using rule 43 (factor -> TRUE .)
    EQUALS          reduce using rule 43 (factor -> TRUE .)
    NEQUALS         reduce using rule 43 (factor -> TRUE .)
    GREATEREQ       reduce using rule 43 (factor -> TRUE .)
    LESSEQ          reduce using rule 43 (factor -> TRUE .)
    GREATERT        reduce using rule 43 (factor -> TRUE .)
    LESST           reduce using rule 43 (factor -> TRUE .)
    COMMA           reduce using rule 43 (factor -> TRUE .)
    RCORCH          reduce using rule 43 (factor -> TRUE .)
    AND             reduce using rule 43 (factor -> TRUE .)
    OR              reduce using rule 43 (factor -> TRUE .)
    RBRACE          reduce using rule 43 (factor -> TRUE .)


state 34

    (44) factor -> FALSE .

    TIMES           reduce using rule 44 (factor -> FALSE .)
    DIVIDE          reduce using rule 44 (factor -> FALSE .)
    EXPONENT        reduce using rule 44 (factor -> FALSE .)
    MODULE          reduce using rule 44 (factor -> FALSE .)
    PLUS            reduce using rule 44 (factor -> FALSE .)
    MINUS           reduce using rule 44 (factor -> FALSE .)
    $end            reduce using rule 44 (factor -> FALSE .)
    RETURN          reduce using rule 44 (factor -> FALSE .)
    BREAK           reduce using rule 44 (factor -> FALSE .)
    ID              reduce using rule 44 (factor -> FALSE .)
    PUTS            reduce using rule 44 (factor -> FALSE .)
    IF              reduce using rule 44 (factor -> FALSE .)
    WHILE           reduce using rule 44 (factor -> FALSE .)
    FOR             reduce using rule 44 (factor -> FALSE .)
    LPAREN          reduce using rule 44 (factor -> FALSE .)
    DEF             reduce using rule 44 (factor -> FALSE .)
    CLASS           reduce using rule 44 (factor -> FALSE .)
    INTEGER         reduce using rule 44 (factor -> FALSE .)
    FLOAT           reduce using rule 44 (factor -> FALSE .)
    STRING          reduce using rule 44 (factor -> FALSE .)
    BOOLEAN         reduce using rule 44 (factor -> FALSE .)
    VAR_INST        reduce using rule 44 (factor -> FALSE .)
    TRUE            reduce using rule 44 (factor -> FALSE .)
    FALSE           reduce using rule 44 (factor -> FALSE .)
    NIL             reduce using rule 44 (factor -> FALSE .)
    END             reduce using rule 44 (factor -> FALSE .)
    ELSE            reduce using rule 44 (factor -> FALSE .)
    EQUALS          reduce using rule 44 (factor -> FALSE .)
    NEQUALS         reduce using rule 44 (factor -> FALSE .)
    GREATEREQ       reduce using rule 44 (factor -> FALSE .)
    LESSEQ          reduce using rule 44 (factor -> FALSE .)
    GREATERT        reduce using rule 44 (factor -> FALSE .)
    LESST           reduce using rule 44 (factor -> FALSE .)
    COMMA           reduce using rule 44 (factor -> FALSE .)
    RCORCH          reduce using rule 44 (factor -> FALSE .)
    AND             reduce using rule 44 (factor -> FALSE .)
    OR              reduce using rule 44 (factor -> FALSE .)
    RBRACE          reduce using rule 44 (factor -> FALSE .)


state 35

    (45) factor -> NIL .

    TIMES           reduce using rule 45 (factor -> NIL .)
    DIVIDE          reduce using rule 45 (factor -> NIL .)
    EXPONENT        reduce using rule 45 (factor -> NIL .)
    MODULE          reduce using rule 45 (factor -> NIL .)
    PLUS            reduce using rule 45 (factor -> NIL .)
    MINUS           reduce using rule 45 (factor -> NIL .)
    $end            reduce using rule 45 (factor -> NIL .)
    RETURN          reduce using rule 45 (factor -> NIL .)
    BREAK           reduce using rule 45 (factor -> NIL .)
    ID              reduce using rule 45 (factor -> NIL .)
    PUTS            reduce using rule 45 (factor -> NIL .)
    IF              reduce using rule 45 (factor -> NIL .)
    WHILE           reduce using rule 45 (factor -> NIL .)
    FOR             reduce using rule 45 (factor -> NIL .)
    LPAREN          reduce using rule 45 (factor -> NIL .)
    DEF             reduce using rule 45 (factor -> NIL .)
    CLASS           reduce using rule 45 (factor -> NIL .)
    INTEGER         reduce using rule 45 (factor -> NIL .)
    FLOAT           reduce using rule 45 (factor -> NIL .)
    STRING          reduce using rule 45 (factor -> NIL .)
    BOOLEAN         reduce using rule 45 (factor -> NIL .)
    VAR_INST        reduce using rule 45 (factor -> NIL .)
    TRUE            reduce using rule 45 (factor -> NIL .)
    FALSE           reduce using rule 45 (factor -> NIL .)
    NIL             reduce using rule 45 (factor -> NIL .)
    END             reduce using rule 45 (factor -> NIL .)
    ELSE            reduce using rule 45 (factor -> NIL .)
    EQUALS          reduce using rule 45 (factor -> NIL .)
    NEQUALS         reduce using rule 45 (factor -> NIL .)
    GREATEREQ       reduce using rule 45 (factor -> NIL .)
    LESSEQ          reduce using rule 45 (factor -> NIL .)
    GREATERT        reduce using rule 45 (factor -> NIL .)
    LESST           reduce using rule 45 (factor -> NIL .)
    COMMA           reduce using rule 45 (factor -> NIL .)
    RCORCH          reduce using rule 45 (factor -> NIL .)
    AND             reduce using rule 45 (factor -> NIL .)
    OR              reduce using rule 45 (factor -> NIL .)
    RBRACE          reduce using rule 45 (factor -> NIL .)


state 36

    (29) expression -> expression PLUS . term
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term EXPONENT factor
    (35) term -> . term MODULE factor
    (36) term -> . factor
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    ID              shift and go to state 39
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    term                           shift and go to state 54
    factor                         shift and go to state 17

state 37

    (30) expression -> expression MINUS . term
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term EXPONENT factor
    (35) term -> . term MODULE factor
    (36) term -> . factor
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    ID              shift and go to state 39
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    term                           shift and go to state 55
    factor                         shift and go to state 17

state 38

    (24) sentence -> RETURN factor .

    $end            reduce using rule 24 (sentence -> RETURN factor .)
    RETURN          reduce using rule 24 (sentence -> RETURN factor .)
    BREAK           reduce using rule 24 (sentence -> RETURN factor .)
    ID              reduce using rule 24 (sentence -> RETURN factor .)
    PUTS            reduce using rule 24 (sentence -> RETURN factor .)
    IF              reduce using rule 24 (sentence -> RETURN factor .)
    WHILE           reduce using rule 24 (sentence -> RETURN factor .)
    FOR             reduce using rule 24 (sentence -> RETURN factor .)
    LPAREN          reduce using rule 24 (sentence -> RETURN factor .)
    DEF             reduce using rule 24 (sentence -> RETURN factor .)
    CLASS           reduce using rule 24 (sentence -> RETURN factor .)
    INTEGER         reduce using rule 24 (sentence -> RETURN factor .)
    FLOAT           reduce using rule 24 (sentence -> RETURN factor .)
    STRING          reduce using rule 24 (sentence -> RETURN factor .)
    BOOLEAN         reduce using rule 24 (sentence -> RETURN factor .)
    VAR_INST        reduce using rule 24 (sentence -> RETURN factor .)
    TRUE            reduce using rule 24 (sentence -> RETURN factor .)
    FALSE           reduce using rule 24 (sentence -> RETURN factor .)
    NIL             reduce using rule 24 (sentence -> RETURN factor .)
    END             reduce using rule 24 (sentence -> RETURN factor .)
    ELSE            reduce using rule 24 (sentence -> RETURN factor .)


state 39

    (41) factor -> ID .

    $end            reduce using rule 41 (factor -> ID .)
    RETURN          reduce using rule 41 (factor -> ID .)
    BREAK           reduce using rule 41 (factor -> ID .)
    ID              reduce using rule 41 (factor -> ID .)
    PUTS            reduce using rule 41 (factor -> ID .)
    IF              reduce using rule 41 (factor -> ID .)
    WHILE           reduce using rule 41 (factor -> ID .)
    FOR             reduce using rule 41 (factor -> ID .)
    LPAREN          reduce using rule 41 (factor -> ID .)
    DEF             reduce using rule 41 (factor -> ID .)
    CLASS           reduce using rule 41 (factor -> ID .)
    INTEGER         reduce using rule 41 (factor -> ID .)
    FLOAT           reduce using rule 41 (factor -> ID .)
    STRING          reduce using rule 41 (factor -> ID .)
    BOOLEAN         reduce using rule 41 (factor -> ID .)
    VAR_INST        reduce using rule 41 (factor -> ID .)
    TRUE            reduce using rule 41 (factor -> ID .)
    FALSE           reduce using rule 41 (factor -> ID .)
    NIL             reduce using rule 41 (factor -> ID .)
    END             reduce using rule 41 (factor -> ID .)
    ELSE            reduce using rule 41 (factor -> ID .)
    EQUALS          reduce using rule 41 (factor -> ID .)
    NEQUALS         reduce using rule 41 (factor -> ID .)
    GREATEREQ       reduce using rule 41 (factor -> ID .)
    LESSEQ          reduce using rule 41 (factor -> ID .)
    GREATERT        reduce using rule 41 (factor -> ID .)
    LESST           reduce using rule 41 (factor -> ID .)
    TIMES           reduce using rule 41 (factor -> ID .)
    DIVIDE          reduce using rule 41 (factor -> ID .)
    EXPONENT        reduce using rule 41 (factor -> ID .)
    MODULE          reduce using rule 41 (factor -> ID .)
    PLUS            reduce using rule 41 (factor -> ID .)
    MINUS           reduce using rule 41 (factor -> ID .)
    COMMA           reduce using rule 41 (factor -> ID .)
    RCORCH          reduce using rule 41 (factor -> ID .)
    AND             reduce using rule 41 (factor -> ID .)
    OR              reduce using rule 41 (factor -> ID .)
    RBRACE          reduce using rule 41 (factor -> ID .)


state 40

    (26) assignment -> ID ASSIGN . expression
    (28) input -> ID ASSIGN . GETS DOT ID
    (46) array -> ID ASSIGN . LCORCH elements RCORCH
    (50) hash -> ID ASSIGN . LBRACE hash_pairs RBRACE
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) expression -> . term
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term EXPONENT factor
    (35) term -> . term MODULE factor
    (36) term -> . factor
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    GETS            shift and go to state 57
    LCORCH          shift and go to state 58
    LBRACE          shift and go to state 59
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    ID              shift and go to state 39
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    expression                     shift and go to state 56
    term                           shift and go to state 20
    factor                         shift and go to state 17

state 41

    (32) term -> term TIMES . factor
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    ID              shift and go to state 39
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    factor                         shift and go to state 60

state 42

    (33) term -> term DIVIDE . factor
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    ID              shift and go to state 39
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    factor                         shift and go to state 61

state 43

    (34) term -> term EXPONENT . factor
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    ID              shift and go to state 39
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    factor                         shift and go to state 62

state 44

    (35) term -> term MODULE . factor
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    ID              shift and go to state 39
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    factor                         shift and go to state 63

state 45

    (9) print -> PUTS factor .

    $end            reduce using rule 9 (print -> PUTS factor .)
    RETURN          reduce using rule 9 (print -> PUTS factor .)
    BREAK           reduce using rule 9 (print -> PUTS factor .)
    ID              reduce using rule 9 (print -> PUTS factor .)
    PUTS            reduce using rule 9 (print -> PUTS factor .)
    IF              reduce using rule 9 (print -> PUTS factor .)
    WHILE           reduce using rule 9 (print -> PUTS factor .)
    FOR             reduce using rule 9 (print -> PUTS factor .)
    LPAREN          reduce using rule 9 (print -> PUTS factor .)
    DEF             reduce using rule 9 (print -> PUTS factor .)
    CLASS           reduce using rule 9 (print -> PUTS factor .)
    INTEGER         reduce using rule 9 (print -> PUTS factor .)
    FLOAT           reduce using rule 9 (print -> PUTS factor .)
    STRING          reduce using rule 9 (print -> PUTS factor .)
    BOOLEAN         reduce using rule 9 (print -> PUTS factor .)
    VAR_INST        reduce using rule 9 (print -> PUTS factor .)
    TRUE            reduce using rule 9 (print -> PUTS factor .)
    FALSE           reduce using rule 9 (print -> PUTS factor .)
    NIL             reduce using rule 9 (print -> PUTS factor .)
    END             reduce using rule 9 (print -> PUTS factor .)
    ELSE            reduce using rule 9 (print -> PUTS factor .)


state 46

    (27) input -> PUTS STRING .
    (39) factor -> STRING .

  ! reduce/reduce conflict for $end resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for RETURN resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for BREAK resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for ID resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for PUTS resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for IF resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for FOR resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for LPAREN resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for DEF resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for CLASS resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for INTEGER resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for FLOAT resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for VAR_INST resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for TRUE resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for FALSE resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for NIL resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for END resolved using rule 27 (input -> PUTS STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 27 (input -> PUTS STRING .)
    $end            reduce using rule 27 (input -> PUTS STRING .)
    RETURN          reduce using rule 27 (input -> PUTS STRING .)
    BREAK           reduce using rule 27 (input -> PUTS STRING .)
    ID              reduce using rule 27 (input -> PUTS STRING .)
    PUTS            reduce using rule 27 (input -> PUTS STRING .)
    IF              reduce using rule 27 (input -> PUTS STRING .)
    WHILE           reduce using rule 27 (input -> PUTS STRING .)
    FOR             reduce using rule 27 (input -> PUTS STRING .)
    LPAREN          reduce using rule 27 (input -> PUTS STRING .)
    DEF             reduce using rule 27 (input -> PUTS STRING .)
    CLASS           reduce using rule 27 (input -> PUTS STRING .)
    INTEGER         reduce using rule 27 (input -> PUTS STRING .)
    FLOAT           reduce using rule 27 (input -> PUTS STRING .)
    STRING          reduce using rule 27 (input -> PUTS STRING .)
    BOOLEAN         reduce using rule 27 (input -> PUTS STRING .)
    VAR_INST        reduce using rule 27 (input -> PUTS STRING .)
    TRUE            reduce using rule 27 (input -> PUTS STRING .)
    FALSE           reduce using rule 27 (input -> PUTS STRING .)
    NIL             reduce using rule 27 (input -> PUTS STRING .)
    END             reduce using rule 27 (input -> PUTS STRING .)
    ELSE            reduce using rule 27 (input -> PUTS STRING .)

  ! $end            [ reduce using rule 39 (factor -> STRING .) ]
  ! RETURN          [ reduce using rule 39 (factor -> STRING .) ]
  ! BREAK           [ reduce using rule 39 (factor -> STRING .) ]
  ! ID              [ reduce using rule 39 (factor -> STRING .) ]
  ! PUTS            [ reduce using rule 39 (factor -> STRING .) ]
  ! IF              [ reduce using rule 39 (factor -> STRING .) ]
  ! WHILE           [ reduce using rule 39 (factor -> STRING .) ]
  ! FOR             [ reduce using rule 39 (factor -> STRING .) ]
  ! LPAREN          [ reduce using rule 39 (factor -> STRING .) ]
  ! DEF             [ reduce using rule 39 (factor -> STRING .) ]
  ! CLASS           [ reduce using rule 39 (factor -> STRING .) ]
  ! INTEGER         [ reduce using rule 39 (factor -> STRING .) ]
  ! FLOAT           [ reduce using rule 39 (factor -> STRING .) ]
  ! STRING          [ reduce using rule 39 (factor -> STRING .) ]
  ! BOOLEAN         [ reduce using rule 39 (factor -> STRING .) ]
  ! VAR_INST        [ reduce using rule 39 (factor -> STRING .) ]
  ! TRUE            [ reduce using rule 39 (factor -> STRING .) ]
  ! FALSE           [ reduce using rule 39 (factor -> STRING .) ]
  ! NIL             [ reduce using rule 39 (factor -> STRING .) ]
  ! END             [ reduce using rule 39 (factor -> STRING .) ]
  ! ELSE            [ reduce using rule 39 (factor -> STRING .) ]


state 47

    (56) condition -> IF logic_expression . body END
    (57) condition -> IF logic_expression . body ELSE body END
    (7) body -> . sentence
    (8) body -> . sentence body
    (11) sentence -> . assignment
    (12) sentence -> . expression
    (13) sentence -> . print
    (14) sentence -> . input
    (15) sentence -> . condition
    (16) sentence -> . while_loop
    (17) sentence -> . for_loop
    (18) sentence -> . array
    (19) sentence -> . range_incl
    (20) sentence -> . range_excl
    (21) sentence -> . hash
    (22) sentence -> . function
    (23) sentence -> . class_def
    (24) sentence -> . RETURN factor
    (25) sentence -> . BREAK
    (26) assignment -> . ID ASSIGN expression
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) expression -> . term
    (9) print -> . PUTS factor
    (27) input -> . PUTS STRING
    (28) input -> . ID ASSIGN GETS DOT ID
    (56) condition -> . IF logic_expression body END
    (57) condition -> . IF logic_expression body ELSE body END
    (53) while_loop -> . WHILE logic_expression body END
    (49) for_loop -> . FOR ID IN range_incl body END
    (46) array -> . ID ASSIGN LCORCH elements RCORCH
    (54) range_incl -> . LPAREN INTEGER RANGE_INCL INTEGER RPAREN
    (55) range_excl -> . LPAREN INTEGER RANGE_EXCL INTEGER RPAREN
    (50) hash -> . ID ASSIGN LBRACE hash_pairs RBRACE
    (2) function -> . DEF ID body END
    (3) function -> . DEF ID LPAREN args_multiple RPAREN body END
    (4) function -> . DEF ID LPAREN args RPAREN body END
    (10) class_def -> . CLASS ID body END
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term EXPONENT factor
    (35) term -> . term MODULE factor
    (36) term -> . factor
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    RETURN          shift and go to state 16
    BREAK           shift and go to state 18
    ID              shift and go to state 19
    PUTS            shift and go to state 21
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LPAREN          shift and go to state 26
    DEF             shift and go to state 28
    CLASS           shift and go to state 29
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    body                           shift and go to state 64
    sentence                       shift and go to state 65
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    while_loop                     shift and go to state 8
    for_loop                       shift and go to state 9
    array                          shift and go to state 10
    range_incl                     shift and go to state 11
    range_excl                     shift and go to state 12
    hash                           shift and go to state 13
    function                       shift and go to state 14
    class_def                      shift and go to state 15
    factor                         shift and go to state 17
    term                           shift and go to state 20

state 48

    (58) logic_expression -> factor . logic_op factor
    (59) logic_expression -> factor . logic_op factor logic_connector logic_expression
    (60) logic_op -> . EQUALS
    (61) logic_op -> . NEQUALS
    (62) logic_op -> . GREATEREQ
    (63) logic_op -> . LESSEQ
    (64) logic_op -> . GREATERT
    (65) logic_op -> . LESST

    EQUALS          shift and go to state 67
    NEQUALS         shift and go to state 68
    GREATEREQ       shift and go to state 69
    LESSEQ          shift and go to state 70
    GREATERT        shift and go to state 71
    LESST           shift and go to state 72

    logic_op                       shift and go to state 66

state 49

    (53) while_loop -> WHILE logic_expression . body END
    (7) body -> . sentence
    (8) body -> . sentence body
    (11) sentence -> . assignment
    (12) sentence -> . expression
    (13) sentence -> . print
    (14) sentence -> . input
    (15) sentence -> . condition
    (16) sentence -> . while_loop
    (17) sentence -> . for_loop
    (18) sentence -> . array
    (19) sentence -> . range_incl
    (20) sentence -> . range_excl
    (21) sentence -> . hash
    (22) sentence -> . function
    (23) sentence -> . class_def
    (24) sentence -> . RETURN factor
    (25) sentence -> . BREAK
    (26) assignment -> . ID ASSIGN expression
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) expression -> . term
    (9) print -> . PUTS factor
    (27) input -> . PUTS STRING
    (28) input -> . ID ASSIGN GETS DOT ID
    (56) condition -> . IF logic_expression body END
    (57) condition -> . IF logic_expression body ELSE body END
    (53) while_loop -> . WHILE logic_expression body END
    (49) for_loop -> . FOR ID IN range_incl body END
    (46) array -> . ID ASSIGN LCORCH elements RCORCH
    (54) range_incl -> . LPAREN INTEGER RANGE_INCL INTEGER RPAREN
    (55) range_excl -> . LPAREN INTEGER RANGE_EXCL INTEGER RPAREN
    (50) hash -> . ID ASSIGN LBRACE hash_pairs RBRACE
    (2) function -> . DEF ID body END
    (3) function -> . DEF ID LPAREN args_multiple RPAREN body END
    (4) function -> . DEF ID LPAREN args RPAREN body END
    (10) class_def -> . CLASS ID body END
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term EXPONENT factor
    (35) term -> . term MODULE factor
    (36) term -> . factor
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    RETURN          shift and go to state 16
    BREAK           shift and go to state 18
    ID              shift and go to state 19
    PUTS            shift and go to state 21
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LPAREN          shift and go to state 26
    DEF             shift and go to state 28
    CLASS           shift and go to state 29
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    body                           shift and go to state 73
    sentence                       shift and go to state 65
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    while_loop                     shift and go to state 8
    for_loop                       shift and go to state 9
    array                          shift and go to state 10
    range_incl                     shift and go to state 11
    range_excl                     shift and go to state 12
    hash                           shift and go to state 13
    function                       shift and go to state 14
    class_def                      shift and go to state 15
    factor                         shift and go to state 17
    term                           shift and go to state 20

state 50

    (49) for_loop -> FOR ID . IN range_incl body END

    IN              shift and go to state 74


state 51

    (54) range_incl -> LPAREN INTEGER . RANGE_INCL INTEGER RPAREN
    (55) range_excl -> LPAREN INTEGER . RANGE_EXCL INTEGER RPAREN

    RANGE_INCL      shift and go to state 75
    RANGE_EXCL      shift and go to state 76


state 52

    (2) function -> DEF ID . body END
    (3) function -> DEF ID . LPAREN args_multiple RPAREN body END
    (4) function -> DEF ID . LPAREN args RPAREN body END
    (7) body -> . sentence
    (8) body -> . sentence body
    (11) sentence -> . assignment
    (12) sentence -> . expression
    (13) sentence -> . print
    (14) sentence -> . input
    (15) sentence -> . condition
    (16) sentence -> . while_loop
    (17) sentence -> . for_loop
    (18) sentence -> . array
    (19) sentence -> . range_incl
    (20) sentence -> . range_excl
    (21) sentence -> . hash
    (22) sentence -> . function
    (23) sentence -> . class_def
    (24) sentence -> . RETURN factor
    (25) sentence -> . BREAK
    (26) assignment -> . ID ASSIGN expression
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) expression -> . term
    (9) print -> . PUTS factor
    (27) input -> . PUTS STRING
    (28) input -> . ID ASSIGN GETS DOT ID
    (56) condition -> . IF logic_expression body END
    (57) condition -> . IF logic_expression body ELSE body END
    (53) while_loop -> . WHILE logic_expression body END
    (49) for_loop -> . FOR ID IN range_incl body END
    (46) array -> . ID ASSIGN LCORCH elements RCORCH
    (54) range_incl -> . LPAREN INTEGER RANGE_INCL INTEGER RPAREN
    (55) range_excl -> . LPAREN INTEGER RANGE_EXCL INTEGER RPAREN
    (50) hash -> . ID ASSIGN LBRACE hash_pairs RBRACE
    (2) function -> . DEF ID body END
    (3) function -> . DEF ID LPAREN args_multiple RPAREN body END
    (4) function -> . DEF ID LPAREN args RPAREN body END
    (10) class_def -> . CLASS ID body END
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term EXPONENT factor
    (35) term -> . term MODULE factor
    (36) term -> . factor
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    LPAREN          shift and go to state 78
    RETURN          shift and go to state 16
    BREAK           shift and go to state 18
    ID              shift and go to state 19
    PUTS            shift and go to state 21
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    DEF             shift and go to state 28
    CLASS           shift and go to state 29
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    body                           shift and go to state 77
    sentence                       shift and go to state 65
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    while_loop                     shift and go to state 8
    for_loop                       shift and go to state 9
    array                          shift and go to state 10
    range_incl                     shift and go to state 11
    range_excl                     shift and go to state 12
    hash                           shift and go to state 13
    function                       shift and go to state 14
    class_def                      shift and go to state 15
    factor                         shift and go to state 17
    term                           shift and go to state 20

state 53

    (10) class_def -> CLASS ID . body END
    (7) body -> . sentence
    (8) body -> . sentence body
    (11) sentence -> . assignment
    (12) sentence -> . expression
    (13) sentence -> . print
    (14) sentence -> . input
    (15) sentence -> . condition
    (16) sentence -> . while_loop
    (17) sentence -> . for_loop
    (18) sentence -> . array
    (19) sentence -> . range_incl
    (20) sentence -> . range_excl
    (21) sentence -> . hash
    (22) sentence -> . function
    (23) sentence -> . class_def
    (24) sentence -> . RETURN factor
    (25) sentence -> . BREAK
    (26) assignment -> . ID ASSIGN expression
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) expression -> . term
    (9) print -> . PUTS factor
    (27) input -> . PUTS STRING
    (28) input -> . ID ASSIGN GETS DOT ID
    (56) condition -> . IF logic_expression body END
    (57) condition -> . IF logic_expression body ELSE body END
    (53) while_loop -> . WHILE logic_expression body END
    (49) for_loop -> . FOR ID IN range_incl body END
    (46) array -> . ID ASSIGN LCORCH elements RCORCH
    (54) range_incl -> . LPAREN INTEGER RANGE_INCL INTEGER RPAREN
    (55) range_excl -> . LPAREN INTEGER RANGE_EXCL INTEGER RPAREN
    (50) hash -> . ID ASSIGN LBRACE hash_pairs RBRACE
    (2) function -> . DEF ID body END
    (3) function -> . DEF ID LPAREN args_multiple RPAREN body END
    (4) function -> . DEF ID LPAREN args RPAREN body END
    (10) class_def -> . CLASS ID body END
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term EXPONENT factor
    (35) term -> . term MODULE factor
    (36) term -> . factor
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    RETURN          shift and go to state 16
    BREAK           shift and go to state 18
    ID              shift and go to state 19
    PUTS            shift and go to state 21
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LPAREN          shift and go to state 26
    DEF             shift and go to state 28
    CLASS           shift and go to state 29
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    body                           shift and go to state 79
    sentence                       shift and go to state 65
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    while_loop                     shift and go to state 8
    for_loop                       shift and go to state 9
    array                          shift and go to state 10
    range_incl                     shift and go to state 11
    range_excl                     shift and go to state 12
    hash                           shift and go to state 13
    function                       shift and go to state 14
    class_def                      shift and go to state 15
    factor                         shift and go to state 17
    term                           shift and go to state 20

state 54

    (29) expression -> expression PLUS term .
    (32) term -> term . TIMES factor
    (33) term -> term . DIVIDE factor
    (34) term -> term . EXPONENT factor
    (35) term -> term . MODULE factor

    PLUS            reduce using rule 29 (expression -> expression PLUS term .)
    MINUS           reduce using rule 29 (expression -> expression PLUS term .)
    $end            reduce using rule 29 (expression -> expression PLUS term .)
    RETURN          reduce using rule 29 (expression -> expression PLUS term .)
    BREAK           reduce using rule 29 (expression -> expression PLUS term .)
    ID              reduce using rule 29 (expression -> expression PLUS term .)
    PUTS            reduce using rule 29 (expression -> expression PLUS term .)
    IF              reduce using rule 29 (expression -> expression PLUS term .)
    WHILE           reduce using rule 29 (expression -> expression PLUS term .)
    FOR             reduce using rule 29 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 29 (expression -> expression PLUS term .)
    DEF             reduce using rule 29 (expression -> expression PLUS term .)
    CLASS           reduce using rule 29 (expression -> expression PLUS term .)
    INTEGER         reduce using rule 29 (expression -> expression PLUS term .)
    FLOAT           reduce using rule 29 (expression -> expression PLUS term .)
    STRING          reduce using rule 29 (expression -> expression PLUS term .)
    BOOLEAN         reduce using rule 29 (expression -> expression PLUS term .)
    VAR_INST        reduce using rule 29 (expression -> expression PLUS term .)
    TRUE            reduce using rule 29 (expression -> expression PLUS term .)
    FALSE           reduce using rule 29 (expression -> expression PLUS term .)
    NIL             reduce using rule 29 (expression -> expression PLUS term .)
    END             reduce using rule 29 (expression -> expression PLUS term .)
    ELSE            reduce using rule 29 (expression -> expression PLUS term .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    EXPONENT        shift and go to state 43
    MODULE          shift and go to state 44


state 55

    (30) expression -> expression MINUS term .
    (32) term -> term . TIMES factor
    (33) term -> term . DIVIDE factor
    (34) term -> term . EXPONENT factor
    (35) term -> term . MODULE factor

    PLUS            reduce using rule 30 (expression -> expression MINUS term .)
    MINUS           reduce using rule 30 (expression -> expression MINUS term .)
    $end            reduce using rule 30 (expression -> expression MINUS term .)
    RETURN          reduce using rule 30 (expression -> expression MINUS term .)
    BREAK           reduce using rule 30 (expression -> expression MINUS term .)
    ID              reduce using rule 30 (expression -> expression MINUS term .)
    PUTS            reduce using rule 30 (expression -> expression MINUS term .)
    IF              reduce using rule 30 (expression -> expression MINUS term .)
    WHILE           reduce using rule 30 (expression -> expression MINUS term .)
    FOR             reduce using rule 30 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 30 (expression -> expression MINUS term .)
    DEF             reduce using rule 30 (expression -> expression MINUS term .)
    CLASS           reduce using rule 30 (expression -> expression MINUS term .)
    INTEGER         reduce using rule 30 (expression -> expression MINUS term .)
    FLOAT           reduce using rule 30 (expression -> expression MINUS term .)
    STRING          reduce using rule 30 (expression -> expression MINUS term .)
    BOOLEAN         reduce using rule 30 (expression -> expression MINUS term .)
    VAR_INST        reduce using rule 30 (expression -> expression MINUS term .)
    TRUE            reduce using rule 30 (expression -> expression MINUS term .)
    FALSE           reduce using rule 30 (expression -> expression MINUS term .)
    NIL             reduce using rule 30 (expression -> expression MINUS term .)
    END             reduce using rule 30 (expression -> expression MINUS term .)
    ELSE            reduce using rule 30 (expression -> expression MINUS term .)
    TIMES           shift and go to state 41
    DIVIDE          shift and go to state 42
    EXPONENT        shift and go to state 43
    MODULE          shift and go to state 44


state 56

    (26) assignment -> ID ASSIGN expression .
    (29) expression -> expression . PLUS term
    (30) expression -> expression . MINUS term

    $end            reduce using rule 26 (assignment -> ID ASSIGN expression .)
    RETURN          reduce using rule 26 (assignment -> ID ASSIGN expression .)
    BREAK           reduce using rule 26 (assignment -> ID ASSIGN expression .)
    ID              reduce using rule 26 (assignment -> ID ASSIGN expression .)
    PUTS            reduce using rule 26 (assignment -> ID ASSIGN expression .)
    IF              reduce using rule 26 (assignment -> ID ASSIGN expression .)
    WHILE           reduce using rule 26 (assignment -> ID ASSIGN expression .)
    FOR             reduce using rule 26 (assignment -> ID ASSIGN expression .)
    LPAREN          reduce using rule 26 (assignment -> ID ASSIGN expression .)
    DEF             reduce using rule 26 (assignment -> ID ASSIGN expression .)
    CLASS           reduce using rule 26 (assignment -> ID ASSIGN expression .)
    INTEGER         reduce using rule 26 (assignment -> ID ASSIGN expression .)
    FLOAT           reduce using rule 26 (assignment -> ID ASSIGN expression .)
    STRING          reduce using rule 26 (assignment -> ID ASSIGN expression .)
    BOOLEAN         reduce using rule 26 (assignment -> ID ASSIGN expression .)
    VAR_INST        reduce using rule 26 (assignment -> ID ASSIGN expression .)
    TRUE            reduce using rule 26 (assignment -> ID ASSIGN expression .)
    FALSE           reduce using rule 26 (assignment -> ID ASSIGN expression .)
    NIL             reduce using rule 26 (assignment -> ID ASSIGN expression .)
    END             reduce using rule 26 (assignment -> ID ASSIGN expression .)
    ELSE            reduce using rule 26 (assignment -> ID ASSIGN expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37


state 57

    (28) input -> ID ASSIGN GETS . DOT ID

    DOT             shift and go to state 80


state 58

    (46) array -> ID ASSIGN LCORCH . elements RCORCH
    (47) elements -> . factor
    (48) elements -> . factor COMMA elements
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    ID              shift and go to state 39
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    elements                       shift and go to state 81
    factor                         shift and go to state 82

state 59

    (50) hash -> ID ASSIGN LBRACE . hash_pairs RBRACE
    (51) hash_pairs -> . STRING COLON factor
    (52) hash_pairs -> . STRING COLON factor COMMA hash_pairs

    STRING          shift and go to state 84

    hash_pairs                     shift and go to state 83

state 60

    (32) term -> term TIMES factor .

    TIMES           reduce using rule 32 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 32 (term -> term TIMES factor .)
    EXPONENT        reduce using rule 32 (term -> term TIMES factor .)
    MODULE          reduce using rule 32 (term -> term TIMES factor .)
    PLUS            reduce using rule 32 (term -> term TIMES factor .)
    MINUS           reduce using rule 32 (term -> term TIMES factor .)
    $end            reduce using rule 32 (term -> term TIMES factor .)
    RETURN          reduce using rule 32 (term -> term TIMES factor .)
    BREAK           reduce using rule 32 (term -> term TIMES factor .)
    ID              reduce using rule 32 (term -> term TIMES factor .)
    PUTS            reduce using rule 32 (term -> term TIMES factor .)
    IF              reduce using rule 32 (term -> term TIMES factor .)
    WHILE           reduce using rule 32 (term -> term TIMES factor .)
    FOR             reduce using rule 32 (term -> term TIMES factor .)
    LPAREN          reduce using rule 32 (term -> term TIMES factor .)
    DEF             reduce using rule 32 (term -> term TIMES factor .)
    CLASS           reduce using rule 32 (term -> term TIMES factor .)
    INTEGER         reduce using rule 32 (term -> term TIMES factor .)
    FLOAT           reduce using rule 32 (term -> term TIMES factor .)
    STRING          reduce using rule 32 (term -> term TIMES factor .)
    BOOLEAN         reduce using rule 32 (term -> term TIMES factor .)
    VAR_INST        reduce using rule 32 (term -> term TIMES factor .)
    TRUE            reduce using rule 32 (term -> term TIMES factor .)
    FALSE           reduce using rule 32 (term -> term TIMES factor .)
    NIL             reduce using rule 32 (term -> term TIMES factor .)
    END             reduce using rule 32 (term -> term TIMES factor .)
    ELSE            reduce using rule 32 (term -> term TIMES factor .)


state 61

    (33) term -> term DIVIDE factor .

    TIMES           reduce using rule 33 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 33 (term -> term DIVIDE factor .)
    EXPONENT        reduce using rule 33 (term -> term DIVIDE factor .)
    MODULE          reduce using rule 33 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 33 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 33 (term -> term DIVIDE factor .)
    $end            reduce using rule 33 (term -> term DIVIDE factor .)
    RETURN          reduce using rule 33 (term -> term DIVIDE factor .)
    BREAK           reduce using rule 33 (term -> term DIVIDE factor .)
    ID              reduce using rule 33 (term -> term DIVIDE factor .)
    PUTS            reduce using rule 33 (term -> term DIVIDE factor .)
    IF              reduce using rule 33 (term -> term DIVIDE factor .)
    WHILE           reduce using rule 33 (term -> term DIVIDE factor .)
    FOR             reduce using rule 33 (term -> term DIVIDE factor .)
    LPAREN          reduce using rule 33 (term -> term DIVIDE factor .)
    DEF             reduce using rule 33 (term -> term DIVIDE factor .)
    CLASS           reduce using rule 33 (term -> term DIVIDE factor .)
    INTEGER         reduce using rule 33 (term -> term DIVIDE factor .)
    FLOAT           reduce using rule 33 (term -> term DIVIDE factor .)
    STRING          reduce using rule 33 (term -> term DIVIDE factor .)
    BOOLEAN         reduce using rule 33 (term -> term DIVIDE factor .)
    VAR_INST        reduce using rule 33 (term -> term DIVIDE factor .)
    TRUE            reduce using rule 33 (term -> term DIVIDE factor .)
    FALSE           reduce using rule 33 (term -> term DIVIDE factor .)
    NIL             reduce using rule 33 (term -> term DIVIDE factor .)
    END             reduce using rule 33 (term -> term DIVIDE factor .)
    ELSE            reduce using rule 33 (term -> term DIVIDE factor .)


state 62

    (34) term -> term EXPONENT factor .

    TIMES           reduce using rule 34 (term -> term EXPONENT factor .)
    DIVIDE          reduce using rule 34 (term -> term EXPONENT factor .)
    EXPONENT        reduce using rule 34 (term -> term EXPONENT factor .)
    MODULE          reduce using rule 34 (term -> term EXPONENT factor .)
    PLUS            reduce using rule 34 (term -> term EXPONENT factor .)
    MINUS           reduce using rule 34 (term -> term EXPONENT factor .)
    $end            reduce using rule 34 (term -> term EXPONENT factor .)
    RETURN          reduce using rule 34 (term -> term EXPONENT factor .)
    BREAK           reduce using rule 34 (term -> term EXPONENT factor .)
    ID              reduce using rule 34 (term -> term EXPONENT factor .)
    PUTS            reduce using rule 34 (term -> term EXPONENT factor .)
    IF              reduce using rule 34 (term -> term EXPONENT factor .)
    WHILE           reduce using rule 34 (term -> term EXPONENT factor .)
    FOR             reduce using rule 34 (term -> term EXPONENT factor .)
    LPAREN          reduce using rule 34 (term -> term EXPONENT factor .)
    DEF             reduce using rule 34 (term -> term EXPONENT factor .)
    CLASS           reduce using rule 34 (term -> term EXPONENT factor .)
    INTEGER         reduce using rule 34 (term -> term EXPONENT factor .)
    FLOAT           reduce using rule 34 (term -> term EXPONENT factor .)
    STRING          reduce using rule 34 (term -> term EXPONENT factor .)
    BOOLEAN         reduce using rule 34 (term -> term EXPONENT factor .)
    VAR_INST        reduce using rule 34 (term -> term EXPONENT factor .)
    TRUE            reduce using rule 34 (term -> term EXPONENT factor .)
    FALSE           reduce using rule 34 (term -> term EXPONENT factor .)
    NIL             reduce using rule 34 (term -> term EXPONENT factor .)
    END             reduce using rule 34 (term -> term EXPONENT factor .)
    ELSE            reduce using rule 34 (term -> term EXPONENT factor .)


state 63

    (35) term -> term MODULE factor .

    TIMES           reduce using rule 35 (term -> term MODULE factor .)
    DIVIDE          reduce using rule 35 (term -> term MODULE factor .)
    EXPONENT        reduce using rule 35 (term -> term MODULE factor .)
    MODULE          reduce using rule 35 (term -> term MODULE factor .)
    PLUS            reduce using rule 35 (term -> term MODULE factor .)
    MINUS           reduce using rule 35 (term -> term MODULE factor .)
    $end            reduce using rule 35 (term -> term MODULE factor .)
    RETURN          reduce using rule 35 (term -> term MODULE factor .)
    BREAK           reduce using rule 35 (term -> term MODULE factor .)
    ID              reduce using rule 35 (term -> term MODULE factor .)
    PUTS            reduce using rule 35 (term -> term MODULE factor .)
    IF              reduce using rule 35 (term -> term MODULE factor .)
    WHILE           reduce using rule 35 (term -> term MODULE factor .)
    FOR             reduce using rule 35 (term -> term MODULE factor .)
    LPAREN          reduce using rule 35 (term -> term MODULE factor .)
    DEF             reduce using rule 35 (term -> term MODULE factor .)
    CLASS           reduce using rule 35 (term -> term MODULE factor .)
    INTEGER         reduce using rule 35 (term -> term MODULE factor .)
    FLOAT           reduce using rule 35 (term -> term MODULE factor .)
    STRING          reduce using rule 35 (term -> term MODULE factor .)
    BOOLEAN         reduce using rule 35 (term -> term MODULE factor .)
    VAR_INST        reduce using rule 35 (term -> term MODULE factor .)
    TRUE            reduce using rule 35 (term -> term MODULE factor .)
    FALSE           reduce using rule 35 (term -> term MODULE factor .)
    NIL             reduce using rule 35 (term -> term MODULE factor .)
    END             reduce using rule 35 (term -> term MODULE factor .)
    ELSE            reduce using rule 35 (term -> term MODULE factor .)


state 64

    (56) condition -> IF logic_expression body . END
    (57) condition -> IF logic_expression body . ELSE body END

    END             shift and go to state 85
    ELSE            shift and go to state 86


state 65

    (7) body -> sentence .
    (8) body -> sentence . body
    (7) body -> . sentence
    (8) body -> . sentence body
    (11) sentence -> . assignment
    (12) sentence -> . expression
    (13) sentence -> . print
    (14) sentence -> . input
    (15) sentence -> . condition
    (16) sentence -> . while_loop
    (17) sentence -> . for_loop
    (18) sentence -> . array
    (19) sentence -> . range_incl
    (20) sentence -> . range_excl
    (21) sentence -> . hash
    (22) sentence -> . function
    (23) sentence -> . class_def
    (24) sentence -> . RETURN factor
    (25) sentence -> . BREAK
    (26) assignment -> . ID ASSIGN expression
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) expression -> . term
    (9) print -> . PUTS factor
    (27) input -> . PUTS STRING
    (28) input -> . ID ASSIGN GETS DOT ID
    (56) condition -> . IF logic_expression body END
    (57) condition -> . IF logic_expression body ELSE body END
    (53) while_loop -> . WHILE logic_expression body END
    (49) for_loop -> . FOR ID IN range_incl body END
    (46) array -> . ID ASSIGN LCORCH elements RCORCH
    (54) range_incl -> . LPAREN INTEGER RANGE_INCL INTEGER RPAREN
    (55) range_excl -> . LPAREN INTEGER RANGE_EXCL INTEGER RPAREN
    (50) hash -> . ID ASSIGN LBRACE hash_pairs RBRACE
    (2) function -> . DEF ID body END
    (3) function -> . DEF ID LPAREN args_multiple RPAREN body END
    (4) function -> . DEF ID LPAREN args RPAREN body END
    (10) class_def -> . CLASS ID body END
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term EXPONENT factor
    (35) term -> . term MODULE factor
    (36) term -> . factor
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    END             reduce using rule 7 (body -> sentence .)
    ELSE            reduce using rule 7 (body -> sentence .)
    RETURN          shift and go to state 16
    BREAK           shift and go to state 18
    ID              shift and go to state 19
    PUTS            shift and go to state 21
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LPAREN          shift and go to state 26
    DEF             shift and go to state 28
    CLASS           shift and go to state 29
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    sentence                       shift and go to state 65
    body                           shift and go to state 87
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    while_loop                     shift and go to state 8
    for_loop                       shift and go to state 9
    array                          shift and go to state 10
    range_incl                     shift and go to state 11
    range_excl                     shift and go to state 12
    hash                           shift and go to state 13
    function                       shift and go to state 14
    class_def                      shift and go to state 15
    factor                         shift and go to state 17
    term                           shift and go to state 20

state 66

    (58) logic_expression -> factor logic_op . factor
    (59) logic_expression -> factor logic_op . factor logic_connector logic_expression
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    ID              shift and go to state 39
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    factor                         shift and go to state 88

state 67

    (60) logic_op -> EQUALS .

    INTEGER         reduce using rule 60 (logic_op -> EQUALS .)
    FLOAT           reduce using rule 60 (logic_op -> EQUALS .)
    STRING          reduce using rule 60 (logic_op -> EQUALS .)
    BOOLEAN         reduce using rule 60 (logic_op -> EQUALS .)
    ID              reduce using rule 60 (logic_op -> EQUALS .)
    VAR_INST        reduce using rule 60 (logic_op -> EQUALS .)
    TRUE            reduce using rule 60 (logic_op -> EQUALS .)
    FALSE           reduce using rule 60 (logic_op -> EQUALS .)
    NIL             reduce using rule 60 (logic_op -> EQUALS .)


state 68

    (61) logic_op -> NEQUALS .

    INTEGER         reduce using rule 61 (logic_op -> NEQUALS .)
    FLOAT           reduce using rule 61 (logic_op -> NEQUALS .)
    STRING          reduce using rule 61 (logic_op -> NEQUALS .)
    BOOLEAN         reduce using rule 61 (logic_op -> NEQUALS .)
    ID              reduce using rule 61 (logic_op -> NEQUALS .)
    VAR_INST        reduce using rule 61 (logic_op -> NEQUALS .)
    TRUE            reduce using rule 61 (logic_op -> NEQUALS .)
    FALSE           reduce using rule 61 (logic_op -> NEQUALS .)
    NIL             reduce using rule 61 (logic_op -> NEQUALS .)


state 69

    (62) logic_op -> GREATEREQ .

    INTEGER         reduce using rule 62 (logic_op -> GREATEREQ .)
    FLOAT           reduce using rule 62 (logic_op -> GREATEREQ .)
    STRING          reduce using rule 62 (logic_op -> GREATEREQ .)
    BOOLEAN         reduce using rule 62 (logic_op -> GREATEREQ .)
    ID              reduce using rule 62 (logic_op -> GREATEREQ .)
    VAR_INST        reduce using rule 62 (logic_op -> GREATEREQ .)
    TRUE            reduce using rule 62 (logic_op -> GREATEREQ .)
    FALSE           reduce using rule 62 (logic_op -> GREATEREQ .)
    NIL             reduce using rule 62 (logic_op -> GREATEREQ .)


state 70

    (63) logic_op -> LESSEQ .

    INTEGER         reduce using rule 63 (logic_op -> LESSEQ .)
    FLOAT           reduce using rule 63 (logic_op -> LESSEQ .)
    STRING          reduce using rule 63 (logic_op -> LESSEQ .)
    BOOLEAN         reduce using rule 63 (logic_op -> LESSEQ .)
    ID              reduce using rule 63 (logic_op -> LESSEQ .)
    VAR_INST        reduce using rule 63 (logic_op -> LESSEQ .)
    TRUE            reduce using rule 63 (logic_op -> LESSEQ .)
    FALSE           reduce using rule 63 (logic_op -> LESSEQ .)
    NIL             reduce using rule 63 (logic_op -> LESSEQ .)


state 71

    (64) logic_op -> GREATERT .

    INTEGER         reduce using rule 64 (logic_op -> GREATERT .)
    FLOAT           reduce using rule 64 (logic_op -> GREATERT .)
    STRING          reduce using rule 64 (logic_op -> GREATERT .)
    BOOLEAN         reduce using rule 64 (logic_op -> GREATERT .)
    ID              reduce using rule 64 (logic_op -> GREATERT .)
    VAR_INST        reduce using rule 64 (logic_op -> GREATERT .)
    TRUE            reduce using rule 64 (logic_op -> GREATERT .)
    FALSE           reduce using rule 64 (logic_op -> GREATERT .)
    NIL             reduce using rule 64 (logic_op -> GREATERT .)


state 72

    (65) logic_op -> LESST .

    INTEGER         reduce using rule 65 (logic_op -> LESST .)
    FLOAT           reduce using rule 65 (logic_op -> LESST .)
    STRING          reduce using rule 65 (logic_op -> LESST .)
    BOOLEAN         reduce using rule 65 (logic_op -> LESST .)
    ID              reduce using rule 65 (logic_op -> LESST .)
    VAR_INST        reduce using rule 65 (logic_op -> LESST .)
    TRUE            reduce using rule 65 (logic_op -> LESST .)
    FALSE           reduce using rule 65 (logic_op -> LESST .)
    NIL             reduce using rule 65 (logic_op -> LESST .)


state 73

    (53) while_loop -> WHILE logic_expression body . END

    END             shift and go to state 89


state 74

    (49) for_loop -> FOR ID IN . range_incl body END
    (54) range_incl -> . LPAREN INTEGER RANGE_INCL INTEGER RPAREN

    LPAREN          shift and go to state 91

    range_incl                     shift and go to state 90

state 75

    (54) range_incl -> LPAREN INTEGER RANGE_INCL . INTEGER RPAREN

    INTEGER         shift and go to state 92


state 76

    (55) range_excl -> LPAREN INTEGER RANGE_EXCL . INTEGER RPAREN

    INTEGER         shift and go to state 93


state 77

    (2) function -> DEF ID body . END

    END             shift and go to state 94


state 78

    (3) function -> DEF ID LPAREN . args_multiple RPAREN body END
    (4) function -> DEF ID LPAREN . args RPAREN body END
    (54) range_incl -> LPAREN . INTEGER RANGE_INCL INTEGER RPAREN
    (55) range_excl -> LPAREN . INTEGER RANGE_EXCL INTEGER RPAREN
    (5) args_multiple -> . ID COMMA args
    (6) args -> . ID

    INTEGER         shift and go to state 51
    ID              shift and go to state 95

    args_multiple                  shift and go to state 96
    args                           shift and go to state 97

state 79

    (10) class_def -> CLASS ID body . END

    END             shift and go to state 98


state 80

    (28) input -> ID ASSIGN GETS DOT . ID

    ID              shift and go to state 99


state 81

    (46) array -> ID ASSIGN LCORCH elements . RCORCH

    RCORCH          shift and go to state 100


state 82

    (47) elements -> factor .
    (48) elements -> factor . COMMA elements

    RCORCH          reduce using rule 47 (elements -> factor .)
    COMMA           shift and go to state 101


state 83

    (50) hash -> ID ASSIGN LBRACE hash_pairs . RBRACE

    RBRACE          shift and go to state 102


state 84

    (51) hash_pairs -> STRING . COLON factor
    (52) hash_pairs -> STRING . COLON factor COMMA hash_pairs

    COLON           shift and go to state 103


state 85

    (56) condition -> IF logic_expression body END .

    $end            reduce using rule 56 (condition -> IF logic_expression body END .)
    RETURN          reduce using rule 56 (condition -> IF logic_expression body END .)
    BREAK           reduce using rule 56 (condition -> IF logic_expression body END .)
    ID              reduce using rule 56 (condition -> IF logic_expression body END .)
    PUTS            reduce using rule 56 (condition -> IF logic_expression body END .)
    IF              reduce using rule 56 (condition -> IF logic_expression body END .)
    WHILE           reduce using rule 56 (condition -> IF logic_expression body END .)
    FOR             reduce using rule 56 (condition -> IF logic_expression body END .)
    LPAREN          reduce using rule 56 (condition -> IF logic_expression body END .)
    DEF             reduce using rule 56 (condition -> IF logic_expression body END .)
    CLASS           reduce using rule 56 (condition -> IF logic_expression body END .)
    INTEGER         reduce using rule 56 (condition -> IF logic_expression body END .)
    FLOAT           reduce using rule 56 (condition -> IF logic_expression body END .)
    STRING          reduce using rule 56 (condition -> IF logic_expression body END .)
    BOOLEAN         reduce using rule 56 (condition -> IF logic_expression body END .)
    VAR_INST        reduce using rule 56 (condition -> IF logic_expression body END .)
    TRUE            reduce using rule 56 (condition -> IF logic_expression body END .)
    FALSE           reduce using rule 56 (condition -> IF logic_expression body END .)
    NIL             reduce using rule 56 (condition -> IF logic_expression body END .)
    END             reduce using rule 56 (condition -> IF logic_expression body END .)
    ELSE            reduce using rule 56 (condition -> IF logic_expression body END .)


state 86

    (57) condition -> IF logic_expression body ELSE . body END
    (7) body -> . sentence
    (8) body -> . sentence body
    (11) sentence -> . assignment
    (12) sentence -> . expression
    (13) sentence -> . print
    (14) sentence -> . input
    (15) sentence -> . condition
    (16) sentence -> . while_loop
    (17) sentence -> . for_loop
    (18) sentence -> . array
    (19) sentence -> . range_incl
    (20) sentence -> . range_excl
    (21) sentence -> . hash
    (22) sentence -> . function
    (23) sentence -> . class_def
    (24) sentence -> . RETURN factor
    (25) sentence -> . BREAK
    (26) assignment -> . ID ASSIGN expression
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) expression -> . term
    (9) print -> . PUTS factor
    (27) input -> . PUTS STRING
    (28) input -> . ID ASSIGN GETS DOT ID
    (56) condition -> . IF logic_expression body END
    (57) condition -> . IF logic_expression body ELSE body END
    (53) while_loop -> . WHILE logic_expression body END
    (49) for_loop -> . FOR ID IN range_incl body END
    (46) array -> . ID ASSIGN LCORCH elements RCORCH
    (54) range_incl -> . LPAREN INTEGER RANGE_INCL INTEGER RPAREN
    (55) range_excl -> . LPAREN INTEGER RANGE_EXCL INTEGER RPAREN
    (50) hash -> . ID ASSIGN LBRACE hash_pairs RBRACE
    (2) function -> . DEF ID body END
    (3) function -> . DEF ID LPAREN args_multiple RPAREN body END
    (4) function -> . DEF ID LPAREN args RPAREN body END
    (10) class_def -> . CLASS ID body END
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term EXPONENT factor
    (35) term -> . term MODULE factor
    (36) term -> . factor
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    RETURN          shift and go to state 16
    BREAK           shift and go to state 18
    ID              shift and go to state 19
    PUTS            shift and go to state 21
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LPAREN          shift and go to state 26
    DEF             shift and go to state 28
    CLASS           shift and go to state 29
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    body                           shift and go to state 104
    sentence                       shift and go to state 65
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    while_loop                     shift and go to state 8
    for_loop                       shift and go to state 9
    array                          shift and go to state 10
    range_incl                     shift and go to state 11
    range_excl                     shift and go to state 12
    hash                           shift and go to state 13
    function                       shift and go to state 14
    class_def                      shift and go to state 15
    factor                         shift and go to state 17
    term                           shift and go to state 20

state 87

    (8) body -> sentence body .

    END             reduce using rule 8 (body -> sentence body .)
    ELSE            reduce using rule 8 (body -> sentence body .)


state 88

    (58) logic_expression -> factor logic_op factor .
    (59) logic_expression -> factor logic_op factor . logic_connector logic_expression
    (66) logic_connector -> . AND
    (67) logic_connector -> . OR

    RETURN          reduce using rule 58 (logic_expression -> factor logic_op factor .)
    BREAK           reduce using rule 58 (logic_expression -> factor logic_op factor .)
    ID              reduce using rule 58 (logic_expression -> factor logic_op factor .)
    PUTS            reduce using rule 58 (logic_expression -> factor logic_op factor .)
    IF              reduce using rule 58 (logic_expression -> factor logic_op factor .)
    WHILE           reduce using rule 58 (logic_expression -> factor logic_op factor .)
    FOR             reduce using rule 58 (logic_expression -> factor logic_op factor .)
    LPAREN          reduce using rule 58 (logic_expression -> factor logic_op factor .)
    DEF             reduce using rule 58 (logic_expression -> factor logic_op factor .)
    CLASS           reduce using rule 58 (logic_expression -> factor logic_op factor .)
    INTEGER         reduce using rule 58 (logic_expression -> factor logic_op factor .)
    FLOAT           reduce using rule 58 (logic_expression -> factor logic_op factor .)
    STRING          reduce using rule 58 (logic_expression -> factor logic_op factor .)
    BOOLEAN         reduce using rule 58 (logic_expression -> factor logic_op factor .)
    VAR_INST        reduce using rule 58 (logic_expression -> factor logic_op factor .)
    TRUE            reduce using rule 58 (logic_expression -> factor logic_op factor .)
    FALSE           reduce using rule 58 (logic_expression -> factor logic_op factor .)
    NIL             reduce using rule 58 (logic_expression -> factor logic_op factor .)
    AND             shift and go to state 106
    OR              shift and go to state 107

    logic_connector                shift and go to state 105

state 89

    (53) while_loop -> WHILE logic_expression body END .

    $end            reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    RETURN          reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    BREAK           reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    ID              reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    PUTS            reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    IF              reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    WHILE           reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    FOR             reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    LPAREN          reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    DEF             reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    CLASS           reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    INTEGER         reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    FLOAT           reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    STRING          reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    BOOLEAN         reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    VAR_INST        reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    TRUE            reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    FALSE           reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    NIL             reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    END             reduce using rule 53 (while_loop -> WHILE logic_expression body END .)
    ELSE            reduce using rule 53 (while_loop -> WHILE logic_expression body END .)


state 90

    (49) for_loop -> FOR ID IN range_incl . body END
    (7) body -> . sentence
    (8) body -> . sentence body
    (11) sentence -> . assignment
    (12) sentence -> . expression
    (13) sentence -> . print
    (14) sentence -> . input
    (15) sentence -> . condition
    (16) sentence -> . while_loop
    (17) sentence -> . for_loop
    (18) sentence -> . array
    (19) sentence -> . range_incl
    (20) sentence -> . range_excl
    (21) sentence -> . hash
    (22) sentence -> . function
    (23) sentence -> . class_def
    (24) sentence -> . RETURN factor
    (25) sentence -> . BREAK
    (26) assignment -> . ID ASSIGN expression
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) expression -> . term
    (9) print -> . PUTS factor
    (27) input -> . PUTS STRING
    (28) input -> . ID ASSIGN GETS DOT ID
    (56) condition -> . IF logic_expression body END
    (57) condition -> . IF logic_expression body ELSE body END
    (53) while_loop -> . WHILE logic_expression body END
    (49) for_loop -> . FOR ID IN range_incl body END
    (46) array -> . ID ASSIGN LCORCH elements RCORCH
    (54) range_incl -> . LPAREN INTEGER RANGE_INCL INTEGER RPAREN
    (55) range_excl -> . LPAREN INTEGER RANGE_EXCL INTEGER RPAREN
    (50) hash -> . ID ASSIGN LBRACE hash_pairs RBRACE
    (2) function -> . DEF ID body END
    (3) function -> . DEF ID LPAREN args_multiple RPAREN body END
    (4) function -> . DEF ID LPAREN args RPAREN body END
    (10) class_def -> . CLASS ID body END
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term EXPONENT factor
    (35) term -> . term MODULE factor
    (36) term -> . factor
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    RETURN          shift and go to state 16
    BREAK           shift and go to state 18
    ID              shift and go to state 19
    PUTS            shift and go to state 21
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LPAREN          shift and go to state 26
    DEF             shift and go to state 28
    CLASS           shift and go to state 29
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    range_incl                     shift and go to state 11
    body                           shift and go to state 108
    sentence                       shift and go to state 65
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    while_loop                     shift and go to state 8
    for_loop                       shift and go to state 9
    array                          shift and go to state 10
    range_excl                     shift and go to state 12
    hash                           shift and go to state 13
    function                       shift and go to state 14
    class_def                      shift and go to state 15
    factor                         shift and go to state 17
    term                           shift and go to state 20

state 91

    (54) range_incl -> LPAREN . INTEGER RANGE_INCL INTEGER RPAREN

    INTEGER         shift and go to state 109


state 92

    (54) range_incl -> LPAREN INTEGER RANGE_INCL INTEGER . RPAREN

    RPAREN          shift and go to state 110


state 93

    (55) range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER . RPAREN

    RPAREN          shift and go to state 111


state 94

    (2) function -> DEF ID body END .

    $end            reduce using rule 2 (function -> DEF ID body END .)
    RETURN          reduce using rule 2 (function -> DEF ID body END .)
    BREAK           reduce using rule 2 (function -> DEF ID body END .)
    ID              reduce using rule 2 (function -> DEF ID body END .)
    PUTS            reduce using rule 2 (function -> DEF ID body END .)
    IF              reduce using rule 2 (function -> DEF ID body END .)
    WHILE           reduce using rule 2 (function -> DEF ID body END .)
    FOR             reduce using rule 2 (function -> DEF ID body END .)
    LPAREN          reduce using rule 2 (function -> DEF ID body END .)
    DEF             reduce using rule 2 (function -> DEF ID body END .)
    CLASS           reduce using rule 2 (function -> DEF ID body END .)
    INTEGER         reduce using rule 2 (function -> DEF ID body END .)
    FLOAT           reduce using rule 2 (function -> DEF ID body END .)
    STRING          reduce using rule 2 (function -> DEF ID body END .)
    BOOLEAN         reduce using rule 2 (function -> DEF ID body END .)
    VAR_INST        reduce using rule 2 (function -> DEF ID body END .)
    TRUE            reduce using rule 2 (function -> DEF ID body END .)
    FALSE           reduce using rule 2 (function -> DEF ID body END .)
    NIL             reduce using rule 2 (function -> DEF ID body END .)
    END             reduce using rule 2 (function -> DEF ID body END .)
    ELSE            reduce using rule 2 (function -> DEF ID body END .)


state 95

    (5) args_multiple -> ID . COMMA args
    (6) args -> ID .

    COMMA           shift and go to state 112
    RPAREN          reduce using rule 6 (args -> ID .)


state 96

    (3) function -> DEF ID LPAREN args_multiple . RPAREN body END

    RPAREN          shift and go to state 113


state 97

    (4) function -> DEF ID LPAREN args . RPAREN body END

    RPAREN          shift and go to state 114


state 98

    (10) class_def -> CLASS ID body END .

    $end            reduce using rule 10 (class_def -> CLASS ID body END .)
    RETURN          reduce using rule 10 (class_def -> CLASS ID body END .)
    BREAK           reduce using rule 10 (class_def -> CLASS ID body END .)
    ID              reduce using rule 10 (class_def -> CLASS ID body END .)
    PUTS            reduce using rule 10 (class_def -> CLASS ID body END .)
    IF              reduce using rule 10 (class_def -> CLASS ID body END .)
    WHILE           reduce using rule 10 (class_def -> CLASS ID body END .)
    FOR             reduce using rule 10 (class_def -> CLASS ID body END .)
    LPAREN          reduce using rule 10 (class_def -> CLASS ID body END .)
    DEF             reduce using rule 10 (class_def -> CLASS ID body END .)
    CLASS           reduce using rule 10 (class_def -> CLASS ID body END .)
    INTEGER         reduce using rule 10 (class_def -> CLASS ID body END .)
    FLOAT           reduce using rule 10 (class_def -> CLASS ID body END .)
    STRING          reduce using rule 10 (class_def -> CLASS ID body END .)
    BOOLEAN         reduce using rule 10 (class_def -> CLASS ID body END .)
    VAR_INST        reduce using rule 10 (class_def -> CLASS ID body END .)
    TRUE            reduce using rule 10 (class_def -> CLASS ID body END .)
    FALSE           reduce using rule 10 (class_def -> CLASS ID body END .)
    NIL             reduce using rule 10 (class_def -> CLASS ID body END .)
    END             reduce using rule 10 (class_def -> CLASS ID body END .)
    ELSE            reduce using rule 10 (class_def -> CLASS ID body END .)


state 99

    (28) input -> ID ASSIGN GETS DOT ID .

    $end            reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    RETURN          reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    BREAK           reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    ID              reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    PUTS            reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    IF              reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    WHILE           reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    FOR             reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    LPAREN          reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    DEF             reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    CLASS           reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    INTEGER         reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    FLOAT           reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    STRING          reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    BOOLEAN         reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    VAR_INST        reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    TRUE            reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    FALSE           reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    NIL             reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    END             reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)
    ELSE            reduce using rule 28 (input -> ID ASSIGN GETS DOT ID .)


state 100

    (46) array -> ID ASSIGN LCORCH elements RCORCH .

    $end            reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    RETURN          reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    BREAK           reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    ID              reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    PUTS            reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    IF              reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    WHILE           reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    FOR             reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    LPAREN          reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    DEF             reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    CLASS           reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    INTEGER         reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    FLOAT           reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    STRING          reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    BOOLEAN         reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    VAR_INST        reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    TRUE            reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    FALSE           reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    NIL             reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    END             reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)
    ELSE            reduce using rule 46 (array -> ID ASSIGN LCORCH elements RCORCH .)


state 101

    (48) elements -> factor COMMA . elements
    (47) elements -> . factor
    (48) elements -> . factor COMMA elements
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    ID              shift and go to state 39
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    factor                         shift and go to state 82
    elements                       shift and go to state 115

state 102

    (50) hash -> ID ASSIGN LBRACE hash_pairs RBRACE .

    $end            reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    RETURN          reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    BREAK           reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    ID              reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    PUTS            reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    IF              reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    WHILE           reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    FOR             reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    LPAREN          reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    DEF             reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    CLASS           reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    INTEGER         reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    FLOAT           reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    STRING          reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    BOOLEAN         reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    VAR_INST        reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    TRUE            reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    FALSE           reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    NIL             reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    END             reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)
    ELSE            reduce using rule 50 (hash -> ID ASSIGN LBRACE hash_pairs RBRACE .)


state 103

    (51) hash_pairs -> STRING COLON . factor
    (52) hash_pairs -> STRING COLON . factor COMMA hash_pairs
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    ID              shift and go to state 39
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    factor                         shift and go to state 116

state 104

    (57) condition -> IF logic_expression body ELSE body . END

    END             shift and go to state 117


state 105

    (59) logic_expression -> factor logic_op factor logic_connector . logic_expression
    (58) logic_expression -> . factor logic_op factor
    (59) logic_expression -> . factor logic_op factor logic_connector logic_expression
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    ID              shift and go to state 39
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    factor                         shift and go to state 48
    logic_expression               shift and go to state 118

state 106

    (66) logic_connector -> AND .

    INTEGER         reduce using rule 66 (logic_connector -> AND .)
    FLOAT           reduce using rule 66 (logic_connector -> AND .)
    STRING          reduce using rule 66 (logic_connector -> AND .)
    BOOLEAN         reduce using rule 66 (logic_connector -> AND .)
    ID              reduce using rule 66 (logic_connector -> AND .)
    VAR_INST        reduce using rule 66 (logic_connector -> AND .)
    TRUE            reduce using rule 66 (logic_connector -> AND .)
    FALSE           reduce using rule 66 (logic_connector -> AND .)
    NIL             reduce using rule 66 (logic_connector -> AND .)


state 107

    (67) logic_connector -> OR .

    INTEGER         reduce using rule 67 (logic_connector -> OR .)
    FLOAT           reduce using rule 67 (logic_connector -> OR .)
    STRING          reduce using rule 67 (logic_connector -> OR .)
    BOOLEAN         reduce using rule 67 (logic_connector -> OR .)
    ID              reduce using rule 67 (logic_connector -> OR .)
    VAR_INST        reduce using rule 67 (logic_connector -> OR .)
    TRUE            reduce using rule 67 (logic_connector -> OR .)
    FALSE           reduce using rule 67 (logic_connector -> OR .)
    NIL             reduce using rule 67 (logic_connector -> OR .)


state 108

    (49) for_loop -> FOR ID IN range_incl body . END

    END             shift and go to state 119


state 109

    (54) range_incl -> LPAREN INTEGER . RANGE_INCL INTEGER RPAREN

    RANGE_INCL      shift and go to state 75


state 110

    (54) range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .

    $end            reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    RETURN          reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    BREAK           reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    ID              reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    PUTS            reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    IF              reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    WHILE           reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    FOR             reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    LPAREN          reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    DEF             reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    CLASS           reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    INTEGER         reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    FLOAT           reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    STRING          reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    BOOLEAN         reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    VAR_INST        reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    TRUE            reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    FALSE           reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    NIL             reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    END             reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)
    ELSE            reduce using rule 54 (range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN .)


state 111

    (55) range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .

    $end            reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    RETURN          reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    BREAK           reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    ID              reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    PUTS            reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    IF              reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    WHILE           reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    FOR             reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    LPAREN          reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    DEF             reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    CLASS           reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    INTEGER         reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    FLOAT           reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    STRING          reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    BOOLEAN         reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    VAR_INST        reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    TRUE            reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    FALSE           reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    NIL             reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    END             reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)
    ELSE            reduce using rule 55 (range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN .)


state 112

    (5) args_multiple -> ID COMMA . args
    (6) args -> . ID

    ID              shift and go to state 120

    args                           shift and go to state 121

state 113

    (3) function -> DEF ID LPAREN args_multiple RPAREN . body END
    (7) body -> . sentence
    (8) body -> . sentence body
    (11) sentence -> . assignment
    (12) sentence -> . expression
    (13) sentence -> . print
    (14) sentence -> . input
    (15) sentence -> . condition
    (16) sentence -> . while_loop
    (17) sentence -> . for_loop
    (18) sentence -> . array
    (19) sentence -> . range_incl
    (20) sentence -> . range_excl
    (21) sentence -> . hash
    (22) sentence -> . function
    (23) sentence -> . class_def
    (24) sentence -> . RETURN factor
    (25) sentence -> . BREAK
    (26) assignment -> . ID ASSIGN expression
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) expression -> . term
    (9) print -> . PUTS factor
    (27) input -> . PUTS STRING
    (28) input -> . ID ASSIGN GETS DOT ID
    (56) condition -> . IF logic_expression body END
    (57) condition -> . IF logic_expression body ELSE body END
    (53) while_loop -> . WHILE logic_expression body END
    (49) for_loop -> . FOR ID IN range_incl body END
    (46) array -> . ID ASSIGN LCORCH elements RCORCH
    (54) range_incl -> . LPAREN INTEGER RANGE_INCL INTEGER RPAREN
    (55) range_excl -> . LPAREN INTEGER RANGE_EXCL INTEGER RPAREN
    (50) hash -> . ID ASSIGN LBRACE hash_pairs RBRACE
    (2) function -> . DEF ID body END
    (3) function -> . DEF ID LPAREN args_multiple RPAREN body END
    (4) function -> . DEF ID LPAREN args RPAREN body END
    (10) class_def -> . CLASS ID body END
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term EXPONENT factor
    (35) term -> . term MODULE factor
    (36) term -> . factor
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    RETURN          shift and go to state 16
    BREAK           shift and go to state 18
    ID              shift and go to state 19
    PUTS            shift and go to state 21
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LPAREN          shift and go to state 26
    DEF             shift and go to state 28
    CLASS           shift and go to state 29
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    body                           shift and go to state 122
    sentence                       shift and go to state 65
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    while_loop                     shift and go to state 8
    for_loop                       shift and go to state 9
    array                          shift and go to state 10
    range_incl                     shift and go to state 11
    range_excl                     shift and go to state 12
    hash                           shift and go to state 13
    function                       shift and go to state 14
    class_def                      shift and go to state 15
    factor                         shift and go to state 17
    term                           shift and go to state 20

state 114

    (4) function -> DEF ID LPAREN args RPAREN . body END
    (7) body -> . sentence
    (8) body -> . sentence body
    (11) sentence -> . assignment
    (12) sentence -> . expression
    (13) sentence -> . print
    (14) sentence -> . input
    (15) sentence -> . condition
    (16) sentence -> . while_loop
    (17) sentence -> . for_loop
    (18) sentence -> . array
    (19) sentence -> . range_incl
    (20) sentence -> . range_excl
    (21) sentence -> . hash
    (22) sentence -> . function
    (23) sentence -> . class_def
    (24) sentence -> . RETURN factor
    (25) sentence -> . BREAK
    (26) assignment -> . ID ASSIGN expression
    (29) expression -> . expression PLUS term
    (30) expression -> . expression MINUS term
    (31) expression -> . term
    (9) print -> . PUTS factor
    (27) input -> . PUTS STRING
    (28) input -> . ID ASSIGN GETS DOT ID
    (56) condition -> . IF logic_expression body END
    (57) condition -> . IF logic_expression body ELSE body END
    (53) while_loop -> . WHILE logic_expression body END
    (49) for_loop -> . FOR ID IN range_incl body END
    (46) array -> . ID ASSIGN LCORCH elements RCORCH
    (54) range_incl -> . LPAREN INTEGER RANGE_INCL INTEGER RPAREN
    (55) range_excl -> . LPAREN INTEGER RANGE_EXCL INTEGER RPAREN
    (50) hash -> . ID ASSIGN LBRACE hash_pairs RBRACE
    (2) function -> . DEF ID body END
    (3) function -> . DEF ID LPAREN args_multiple RPAREN body END
    (4) function -> . DEF ID LPAREN args RPAREN body END
    (10) class_def -> . CLASS ID body END
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term EXPONENT factor
    (35) term -> . term MODULE factor
    (36) term -> . factor
    (37) factor -> . INTEGER
    (38) factor -> . FLOAT
    (39) factor -> . STRING
    (40) factor -> . BOOLEAN
    (41) factor -> . ID
    (42) factor -> . VAR_INST
    (43) factor -> . TRUE
    (44) factor -> . FALSE
    (45) factor -> . NIL

    RETURN          shift and go to state 16
    BREAK           shift and go to state 18
    ID              shift and go to state 19
    PUTS            shift and go to state 21
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    LPAREN          shift and go to state 26
    DEF             shift and go to state 28
    CLASS           shift and go to state 29
    INTEGER         shift and go to state 27
    FLOAT           shift and go to state 30
    STRING          shift and go to state 22
    BOOLEAN         shift and go to state 31
    VAR_INST        shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34
    NIL             shift and go to state 35

    body                           shift and go to state 123
    sentence                       shift and go to state 65
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    print                          shift and go to state 5
    input                          shift and go to state 6
    condition                      shift and go to state 7
    while_loop                     shift and go to state 8
    for_loop                       shift and go to state 9
    array                          shift and go to state 10
    range_incl                     shift and go to state 11
    range_excl                     shift and go to state 12
    hash                           shift and go to state 13
    function                       shift and go to state 14
    class_def                      shift and go to state 15
    factor                         shift and go to state 17
    term                           shift and go to state 20

state 115

    (48) elements -> factor COMMA elements .

    RCORCH          reduce using rule 48 (elements -> factor COMMA elements .)


state 116

    (51) hash_pairs -> STRING COLON factor .
    (52) hash_pairs -> STRING COLON factor . COMMA hash_pairs

    RBRACE          reduce using rule 51 (hash_pairs -> STRING COLON factor .)
    COMMA           shift and go to state 124


state 117

    (57) condition -> IF logic_expression body ELSE body END .

    $end            reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    RETURN          reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    BREAK           reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    ID              reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    PUTS            reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    IF              reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    WHILE           reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    FOR             reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    LPAREN          reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    DEF             reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    CLASS           reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    INTEGER         reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    FLOAT           reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    STRING          reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    BOOLEAN         reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    VAR_INST        reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    TRUE            reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    FALSE           reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    NIL             reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    END             reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)
    ELSE            reduce using rule 57 (condition -> IF logic_expression body ELSE body END .)


state 118

    (59) logic_expression -> factor logic_op factor logic_connector logic_expression .

    RETURN          reduce using rule 59 (logic_expression -> factor logic_op factor logic_connector logic_expression .)
    BREAK           reduce using rule 59 (logic_expression -> factor logic_op factor logic_connector logic_expression .)
    ID              reduce using rule 59 (logic_expression -> factor logic_op factor logic_connector logic_expression .)
    PUTS            reduce using rule 59 (logic_expression -> factor logic_op factor logic_connector logic_expression .)
    IF              reduce using rule 59 (logic_expression -> factor logic_op factor logic_connector logic_expression .)
    WHILE           reduce using rule 59 (logic_expression -> factor logic_op factor logic_connector logic_expression .)
    FOR             reduce using rule 59 (logic_expression -> factor logic_op factor logic_connector logic_expression .)
    LPAREN          reduce using rule 59 (logic_expression -> factor logic_op factor logic_connector logic_expression .)
    DEF             reduce using rule 59 (logic_expression -> factor logic_op factor logic_connector logic_expression .)
    CLASS           reduce using rule 59 (logic_expression -> factor logic_op factor logic_connector logic_expression .)
    INTEGER         reduce using rule 59 (logic_expression -> factor logic_op factor logic_connector logic_expression .)
    FLOAT           reduce using rule 59 (logic_expression -> factor logic_op factor logic_connector logic_expression .)
    STRING          reduce using rule 59 (logic_expression -> factor logic_op factor logic_connector logic_expression .)
    BOOLEAN         reduce using rule 59 (logic_expression -> factor logic_op factor logic_connector logic_expression .)
    VAR_INST        reduce using rule 59 (logic_expression -> factor logic_op factor logic_connector logic_expression .)
    TRUE            reduce using rule 59 (logic_expression -> factor logic_op factor logic_connector logic_expression .)
    FALSE           reduce using rule 59 (logic_expression -> factor logic_op factor logic_connector logic_expression .)
    NIL             reduce using rule 59 (logic_expression -> factor logic_op factor logic_connector logic_expression .)


state 119

    (49) for_loop -> FOR ID IN range_incl body END .

    $end            reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    RETURN          reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    BREAK           reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    ID              reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    PUTS            reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    IF              reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    WHILE           reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    FOR             reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    LPAREN          reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    DEF             reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    CLASS           reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    INTEGER         reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    FLOAT           reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    STRING          reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    BOOLEAN         reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    VAR_INST        reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    TRUE            reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    FALSE           reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    NIL             reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    END             reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)
    ELSE            reduce using rule 49 (for_loop -> FOR ID IN range_incl body END .)


state 120

    (6) args -> ID .

    RPAREN          reduce using rule 6 (args -> ID .)


state 121

    (5) args_multiple -> ID COMMA args .

    RPAREN          reduce using rule 5 (args_multiple -> ID COMMA args .)


state 122

    (3) function -> DEF ID LPAREN args_multiple RPAREN body . END

    END             shift and go to state 125


state 123

    (4) function -> DEF ID LPAREN args RPAREN body . END

    END             shift and go to state 126


state 124

    (52) hash_pairs -> STRING COLON factor COMMA . hash_pairs
    (51) hash_pairs -> . STRING COLON factor
    (52) hash_pairs -> . STRING COLON factor COMMA hash_pairs

    STRING          shift and go to state 84

    hash_pairs                     shift and go to state 127

state 125

    (3) function -> DEF ID LPAREN args_multiple RPAREN body END .

    $end            reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    RETURN          reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    BREAK           reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    ID              reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    PUTS            reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    IF              reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    WHILE           reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    FOR             reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    LPAREN          reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    DEF             reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    CLASS           reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    INTEGER         reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    FLOAT           reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    STRING          reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    BOOLEAN         reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    VAR_INST        reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    TRUE            reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    FALSE           reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    NIL             reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    END             reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)
    ELSE            reduce using rule 3 (function -> DEF ID LPAREN args_multiple RPAREN body END .)


state 126

    (4) function -> DEF ID LPAREN args RPAREN body END .

    $end            reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    RETURN          reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    BREAK           reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    ID              reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    PUTS            reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    IF              reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    WHILE           reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    FOR             reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    LPAREN          reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    DEF             reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    CLASS           reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    INTEGER         reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    FLOAT           reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    STRING          reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    BOOLEAN         reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    VAR_INST        reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    TRUE            reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    FALSE           reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    NIL             reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    END             reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)
    ELSE            reduce using rule 4 (function -> DEF ID LPAREN args RPAREN body END .)


state 127

    (52) hash_pairs -> STRING COLON factor COMMA hash_pairs .

    RBRACE          reduce using rule 52 (hash_pairs -> STRING COLON factor COMMA hash_pairs .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 46 resolved using rule (input -> PUTS STRING)
WARNING: rejected rule (factor -> STRING) in state 46

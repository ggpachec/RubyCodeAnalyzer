ID	nombre	10	170
ASSIGN	=	10	177
STRING	María	10	179
ID	edad_correcta	11	214
ASSIGN	=	11	228
INTEGER	10	11	230
ID	resultado	12	260
ASSIGN	=	12	270
ID	edad_correcta	12	272
PLUS	+	12	286
INTEGER	5	12	288
ID	Edad	13	311
ASSIGN	=	13	316
INTEGER	10	13	318
ID	edad	14	346
ASSIGN	=	14	351
STRING	10	14	353
PLUS	+	14	357
INTEGER	5	14	358
INTEGER	2	15	449
ID	variable	15	450
ASSIGN	=	15	459
STRING	dato	15	461
ID	_1nombres	16	468
ASSIGN	=	16	478
STRING	Inválido	16	480
ID	entero	22	542
ASSIGN	=	22	549
INTEGER	100	22	551
ID	decimal	23	587
ASSIGN	=	23	595
FLOAT	3.1415	23	597
ID	texto	24	630
ASSIGN	=	24	636
STRING	Hola mundo	24	638
ID	activo	25	674
ASSIGN	=	25	681
TRUE	true	25	683
ID	nulo	26	719
ASSIGN	=	26	724
NIL	nil	26	726
ID	usuario	30	790
ASSIGN	=	30	798
LBRACE	{	30	800
STRING	nombre	30	802
COLON	:	30	811
STRING	Ana	30	813
COMMA	,	30	818
STRING	edad	30	820
COLON	:	30	827
INTEGER	28	30	829
RBRACE	}	30	832
ID	persona	31	854
ASSIGN	=	31	862
LBRACE	{	31	864
ID	nombre	31	866
COLON	:	31	873
STRING	Luis	31	875
COMMA	,	31	881
ID	edad	31	883
COLON	:	31	888
INTEGER	30	31	890
RBRACE	}	31	893
ID	numeros_primos	34	952
ASSIGN	=	34	967
LCORCH	[	34	969
INTEGER	2	34	970
COMMA	,	34	971
INTEGER	3	34	973
COMMA	,	34	974
INTEGER	5	34	976
COMMA	,	34	977
INTEGER	7	34	979
COMMA	,	34	980
INTEGER	11	34	982
COMMA	,	34	984
INTEGER	13	34	986
RCORCH	]	34	988
ID	rango_10	37	1019
ASSIGN	=	37	1028
LPAREN	(	37	1030
INTEGER	1	37	1031
RANGE_INCL	..	37	1032
INTEGER	10	37	1034
RPAREN	)	37	1036
ID	suma	43	1119
ASSIGN	=	43	1124
INTEGER	100	43	1126
PLUS	+	43	1130
INTEGER	200	43	1132
ID	division	44	1175
ASSIGN	=	44	1184
INTEGER	10	44	1186
DIVIDE	/	44	1189
STRING	2	44	1191
ID	division_correcta	45	1260
ASSIGN	=	45	1278
INTEGER	10	45	1280
DIVIDE	/	45	1283
INTEGER	2	45	1285
ID	modul	46	1316
ASSIGN	=	46	1322
INTEGER	10	46	1324
MODULE	%	46	1327
INTEGER	2	46	1329
ID	igual	49	1387
ASSIGN	=	49	1393
INTEGER	5	49	1395
EQUALS	==	49	1397
INTEGER	5	49	1400
ID	comparar	50	1443
ASSIGN	=	50	1452
STRING	5	50	1454
GREATERT	>	50	1458
INTEGER	3	50	1460
ID	comparar_OK	51	1536
ASSIGN	=	51	1548
INTEGER	5	51	1550
GREATERT	>	51	1552
INTEGER	3	51	1554
ID	es_valido	54	1603
ASSIGN	=	54	1613
TRUE	true	54	1615
AND_OP	&&	54	1620
FALSE	false	54	1623
ID	error_logico	55	1659
ASSIGN	=	55	1672
STRING	true	55	1674
OR_OP	||	55	1681
FALSE	false	55	1684
ID	x	58	1757
ASSIGN	=	58	1759
INTEGER	5	58	1761
ID	x	59	1813
PLUS	+	59	1815
ASSIGN	=	59	1816
INTEGER	3	59	1818
ID	x	60	1869
DIVIDE	/	60	1871
ASSIGN	=	60	1872
STRING	a	60	1874
ID	total	66	1997
ASSIGN	=	66	2003
LPAREN	(	66	2005
INTEGER	3	66	2006
PLUS	+	66	2008
INTEGER	2	66	2010
RPAREN	)	66	2011
TIMES	*	66	2013
INTEGER	4	66	2015
DIVIDE	/	66	2017
INTEGER	2	66	2019
ID	condicion	69	2069
ASSIGN	=	69	2079
LPAREN	(	69	2081
INTEGER	5	69	2082
GREATERT	>	69	2084
INTEGER	2	69	2086
RPAREN	)	69	2087
AND_OP	&&	69	2089
LPAREN	(	69	2092
INTEGER	3	69	2093
LESST	<	69	2095
INTEGER	8	69	2097
RPAREN	)	69	2098
ID	condicion2	70	2128
ASSIGN	=	70	2139
LPAREN	(	70	2141
TRUE	true	70	2142
AND_OP	&&	70	2147
STRING	false	70	2150
RPAREN	)	70	2157
ID	i	76	2260
ASSIGN	=	76	2262
INTEGER	0	76	2264
WHILE	while	77	2351
ID	i	77	2357
LESST	<	77	2359
INTEGER	3	77	2361
PUTS	puts	78	2365
STRING	Iteración #{i}	78	2370
ID	i	79	2389
PLUS	+	79	2391
ASSIGN	=	79	2392
INTEGER	1	79	2394
ID	i	81	2397
ASSIGN	=	81	2399
INTEGER	0	81	2401
WHILE	while	82	2482
ID	i	82	2488
LESST	<	82	2490
INTEGER	3	82	2492
PUTS	puts	83	2496
STRING	Iteración #{i}	83	2501
ID	i	84	2520
PLUS	+	84	2522
ASSIGN	=	84	2523
INTEGER	1	84	2525
END	end	85	2527
ID	imc	89	2542
ASSIGN	=	89	2546
INTEGER	20	89	2548
IF	if	90	2551
ID	imc	90	2554
GREATEREQ	>=	90	2558
INTEGER	25	90	2561
PUTS	puts	91	2639
STRING	Indice de Masa Corporal Alto. Sobrepeso - Obesidad	91	2644
ELSE	else	92	2697
PUTS	puts	93	2704
STRING	Indice de Masa Corporal Normal - Bajo.	93	2709
END	end	94	2750
IF	if	96	2755
STRING	hola	96	2758
PUTS	puts	97	2851
STRING	Activo	97	2856
END	end	98	2865
DEF	def	104	2943
ID	saludo	104	2947
LPAREN	(	104	2953
ID	nombre	104	2954
ASSIGN	=	104	2961
STRING	Usuario	104	2963
RPAREN	)	104	2972
PUTS	puts	105	3018
STRING	Hola, #{nombre}	105	3023
END	end	106	3041
ID	saludo	108	3046
LPAREN	(	108	3052
RPAREN	)	108	3053
ID	saludo	109	3123
LPAREN	(	109	3129
STRING	Genesis	109	3130
RPAREN	)	109	3139
DEF	def	113	3190
ID	obtener_nombre	113	3194
RETURN	return	114	3262
STRING	Genesis	114	3269
END	end	115	3279
PUTS	puts	116	3283
STRING	El nombre es #{obtener_nombre()}	116	3288
DEF	def	121	3351
ID	imprimir	121	3355
LPAREN	(	121	3363
ID	a	121	3364
RPAREN	)	121	3365
PUTS	puts	122	3420
ID	a	122	3425
END	end	123	3427
ID	result	124	3431
ASSIGN	=	124	3438
ID	imprimir	124	3440
LPAREN	(	124	3448
INTEGER	5	124	3449
RPAREN	)	124	3450
DEF	def	126	3453
ID	imprimir	126	3457
LPAREN	(	126	3465
ID	a	126	3466
RPAREN	)	126	3467
PUTS	puts	127	3544
ID	a	127	3549
CLASS	class	132	3585
ID	Vehiculo	132	3591
DEF	def	133	3602
ID	initialize	133	3606
LPAREN	(	133	3616
ID	marca	133	3617
COMMA	,	133	3622
ID	modelo	133	3624
RPAREN	)	133	3630
VAR_INST	@marca	134	3636
ASSIGN	=	134	3643
ID	marca	134	3645
VAR_INST	@modelo	135	3655
ASSIGN	=	135	3663
ID	modelo	135	3665
END	end	136	3674
DEF	def	138	3681
ID	descripcion	138	3685
RETURN	return	139	3701
STRING	Vehículo: #{@marca} #{@modelo}	139	3708
END	end	140	3743
END	end	141	3747
ID	carro	143	3752
ASSIGN	=	143	3758
ID	Vehiculo	143	3760
DOT	.	143	3768
ID	new	143	3769
LPAREN	(	143	3772
STRING	Toyota	143	3773
COMMA	,	143	3781
STRING	Corolla	143	3783
RPAREN	)	143	3792
PUTS	puts	144	3829
ID	carro	144	3834
DOT	.	144	3839
ID	descripcion	144	3840
ID	objeto	146	3853
ASSIGN	=	146	3860
ID	Vehiculo	146	3862
LPAREN	(	146	3870
STRING	Mazda	146	3871
COMMA	,	146	3878
STRING	CX-5	146	3880
RPAREN	)	146	3886
STRING	123	149	3992
DOT	.	149	3997
TO_I	to_i	149	3998
INTEGER	45	150	4003
DOT	.	150	4005
ID	to_str	150	4006
INTEGER	45	151	4078
DOT	.	151	4080
TO_S	to_s	151	4081
STRING	55.5	152	4086
DOT	.	152	4092
TO_I	to_i	152	4093
STRING	55.5	153	4098
DOT	.	153	4104
TO_F	to_f	153	4105

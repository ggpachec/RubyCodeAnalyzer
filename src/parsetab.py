
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startAND AND_OP ASSIGN BOOLEAN BREAK CLASS COLON COMMA DEF DIVIDE DO DOT ELSE END EQUALS EXPONENT FALSE FLOAT FOR GETS GREATEREQ GREATERT ID IF IN INTEGER LBRACE LCORCH LESSEQ LESST LPAREN MINUS MODULE NEQUALS NEXT NIL NOT NOT_OP OR OR_OP PLUS PUTS RANGE_EXCL RANGE_INCL RBRACE RCORCH RETURN RPAREN SEMICOLON STRING THEN TIMES TRUE VAR_INST WHILE YIELDstart : sentencessentences : sentence\n| sentence sentencesfunction : DEF ID body END\n| DEF ID LPAREN args RPAREN body ENDargs : ID\n| ID COMMA argsbody : body sentence\n| sentenceprint : PUTS factor\n| PUTS STRINGclass_def : CLASS ID body ENDsentence : assignment\n| expression\n| print\n| input\n| condition\n| while_loop\n| for_loop\n| array\n| range_incl\n| range_excl\n| hash\n| function\n| class_def\n| return_stmt\n| break_stmt\n| function_call_empty\n| function_call_argsreturn_stmt : RETURN factorbreak_stmt : BREAKassignment : ID ASSIGN expression\n| VAR_INST ASSIGN expressioninput : PUTS STRING\n| ID ASSIGN GETS method_chainmethod_chain : DOT ID\n| method_chain DOT IDexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : term EXPONENT factorterm : term MODULE factorterm : factorfactor : INTEGER\n| FLOAT\n| STRING\n| BOOLEAN\n| ID\n| VAR_INST\n| TRUE\n| FALSE\n| NILfactor : LPAREN expression RPARENfactor : logic_expressionfactor : range_inclfactor : range_exclfunction_call_empty : ID LPAREN RPARENfunction_call_args : ID LPAREN args RPARENarray : ID ASSIGN LCORCH elements RCORCHelements : factor\n| factor COMMA elementsfor_loop : FOR ID IN range_incl body ENDhash : ID ASSIGN LBRACE hash_pairs RBRACEhash_pairs : STRING COLON factor\n| STRING COLON factor COMMA hash_pairswhile_loop : WHILE logic_expression body ENDrange_incl : LPAREN INTEGER RANGE_INCL INTEGER RPAREN\n| INTEGER RANGE_INCL INTEGERrange_excl : LPAREN INTEGER RANGE_EXCL INTEGER RPAREN\n| INTEGER RANGE_EXCL INTEGERcondition : IF logic_expression body END\n| IF logic_expression body ELSE body ENDlogic_expression : factor logic_op factor\n| factor logic_op factor logic_connector logic_expressionlogic_expression : expression logic_op expressionlogic_op : EQUALS\n| NEQUALS\n| GREATEREQ\n| LESSEQ\n| GREATERT\n| LESSTlogic_connector : AND\n| OR'
    
_lr_action_items = {'ID':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,71,77,78,79,80,81,82,83,85,88,90,91,92,93,94,95,96,97,98,102,103,104,105,106,107,108,109,114,115,116,117,118,119,120,121,122,123,128,131,132,133,134,135,136,137,139,140,141,143,144,145,146,149,150,152,155,],[21,21,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,62,-45,-48,62,-56,62,72,62,-46,77,78,62,-31,-47,-49,-52,-53,-54,62,62,62,-78,-79,-80,-81,-82,-83,62,87,62,62,62,62,62,-10,-11,-46,-50,-51,62,-57,-58,62,21,21,21,21,-30,-38,-39,-77,-32,62,-59,-33,-41,-42,-43,-44,-75,21,-9,21,-55,-70,-72,21,129,21,-35,133,87,-60,62,-84,-85,-73,21,-8,-68,21,-4,-12,146,-36,-61,62,-65,62,-76,21,21,-69,-71,21,-37,-74,-64,21,-5,]),'VAR_INST':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,71,77,78,79,80,81,82,83,85,88,90,91,92,93,94,95,96,97,98,102,103,104,105,106,107,108,115,116,117,118,119,120,121,122,123,128,131,133,134,135,136,137,139,140,141,143,144,145,146,149,150,152,155,],[22,22,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,63,-45,-48,63,-56,63,63,-46,63,-31,-47,-49,-52,-53,-54,63,63,63,-78,-79,-80,-81,-82,-83,63,63,63,63,63,63,-10,-11,-46,-50,-51,63,-57,-58,63,22,22,22,22,-30,-38,-39,-77,-32,63,-59,-33,-41,-42,-43,-44,-75,22,-9,22,-55,-70,-72,22,63,22,-35,-60,63,-84,-85,-73,22,-8,-68,22,-4,-12,-36,-61,63,-65,63,-76,22,22,-69,-71,22,-37,-74,-64,22,-5,]),'PUTS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,59,60,61,62,63,66,67,69,71,77,78,79,80,81,82,83,88,90,91,92,93,94,95,96,97,98,102,103,104,105,107,108,115,119,120,121,122,123,128,131,133,134,136,139,140,141,143,144,145,146,149,150,152,155,],[24,24,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,-45,-48,-56,-46,-31,-47,-49,-52,-53,-54,-10,-11,-46,-50,-51,-57,-58,24,24,24,24,-30,-38,-39,-77,-32,-59,-33,-41,-42,-43,-44,-75,24,-9,24,-55,-70,-72,24,24,-35,-60,-73,24,-8,-68,24,-4,-12,-36,-61,-65,-76,24,24,-69,-71,24,-37,-74,-64,24,-5,]),'IF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,59,60,61,62,63,66,67,69,71,77,78,79,80,81,82,83,88,90,91,92,93,94,95,96,97,98,102,103,104,105,107,108,115,119,120,121,122,123,128,131,133,134,136,139,140,141,143,144,145,146,149,150,152,155,],[27,27,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,-45,-48,-56,-46,-31,-47,-49,-52,-53,-54,-10,-11,-46,-50,-51,-57,-58,27,27,27,27,-30,-38,-39,-77,-32,-59,-33,-41,-42,-43,-44,-75,27,-9,27,-55,-70,-72,27,27,-35,-60,-73,27,-8,-68,27,-4,-12,-36,-61,-65,-76,27,27,-69,-71,27,-37,-74,-64,27,-5,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,59,60,61,62,63,66,67,69,71,77,78,79,80,81,82,83,88,90,91,92,93,94,95,96,97,98,102,103,104,105,107,108,115,119,120,121,122,123,128,131,133,134,136,139,140,141,143,144,145,146,149,150,152,155,],[29,29,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,-45,-48,-56,-46,-31,-47,-49,-52,-53,-54,-10,-11,-46,-50,-51,-57,-58,29,29,29,29,-30,-38,-39,-77,-32,-59,-33,-41,-42,-43,-44,-75,29,-9,29,-55,-70,-72,29,29,-35,-60,-73,29,-8,-68,29,-4,-12,-36,-61,-65,-76,29,29,-69,-71,29,-37,-74,-64,29,-5,]),'FOR':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,59,60,61,62,63,66,67,69,71,77,78,79,80,81,82,83,88,90,91,92,93,94,95,96,97,98,102,103,104,105,107,108,115,119,120,121,122,123,128,131,133,134,136,139,140,141,143,144,145,146,149,150,152,155,],[30,30,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,-45,-48,-56,-46,-31,-47,-49,-52,-53,-54,-10,-11,-46,-50,-51,-57,-58,30,30,30,30,-30,-38,-39,-77,-32,-59,-33,-41,-42,-43,-44,-75,30,-9,30,-55,-70,-72,30,30,-35,-60,-73,30,-8,-68,30,-4,-12,-36,-61,-65,-76,30,30,-69,-71,30,-37,-74,-64,30,-5,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,71,77,78,79,80,81,82,83,85,88,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,115,116,117,118,119,120,121,122,123,128,131,133,134,135,136,137,139,140,141,143,144,145,146,149,150,152,155,],[31,31,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,53,-51,-40,64,-45,-48,64,-56,64,64,-46,64,-31,-47,-49,-52,-53,-54,64,64,64,-78,-79,-80,-81,-82,-83,64,64,64,64,64,64,-10,-11,-46,-50,-51,64,-57,-58,64,31,31,106,31,-30,-38,-39,-77,-32,64,-59,-33,-41,-42,-43,-44,-75,31,-9,31,124,-55,-70,-72,31,64,31,-35,-60,64,-84,-85,-73,31,-8,-68,31,-4,-12,-36,-61,64,-65,64,-76,31,31,-69,-71,31,-37,-74,-64,31,-5,]),'INTEGER':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,71,75,76,77,78,79,80,81,82,83,85,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,115,116,117,118,119,120,121,122,123,124,128,131,133,134,135,136,137,139,140,141,143,144,145,146,149,150,151,152,155,],[32,32,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,61,-45,-48,61,-56,61,73,-46,61,-31,-47,-49,-52,-53,-54,61,61,61,-78,-79,-80,-81,-82,-83,61,61,61,61,61,61,-10,-11,-46,-50,-51,73,-57,-58,61,32,32,103,104,32,32,-30,-38,-39,-77,-32,61,-59,-33,-41,-42,-43,-44,-75,32,-9,32,125,126,127,-55,-70,-72,32,73,32,-35,-60,61,-84,-85,-73,32,-8,-68,32,142,-4,-12,-36,-61,61,-65,61,-76,32,32,-69,-71,32,-37,-74,-64,154,32,-5,]),'DEF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,59,60,61,62,63,66,67,69,71,77,78,79,80,81,82,83,88,90,91,92,93,94,95,96,97,98,102,103,104,105,107,108,115,119,120,121,122,123,128,131,133,134,136,139,140,141,143,144,145,146,149,150,152,155,],[33,33,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,-45,-48,-56,-46,-31,-47,-49,-52,-53,-54,-10,-11,-46,-50,-51,-57,-58,33,33,33,33,-30,-38,-39,-77,-32,-59,-33,-41,-42,-43,-44,-75,33,-9,33,-55,-70,-72,33,33,-35,-60,-73,33,-8,-68,33,-4,-12,-36,-61,-65,-76,33,33,-69,-71,33,-37,-74,-64,33,-5,]),'CLASS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,59,60,61,62,63,66,67,69,71,77,78,79,80,81,82,83,88,90,91,92,93,94,95,96,97,98,102,103,104,105,107,108,115,119,120,121,122,123,128,131,133,134,136,139,140,141,143,144,145,146,149,150,152,155,],[34,34,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,-45,-48,-56,-46,-31,-47,-49,-52,-53,-54,-10,-11,-46,-50,-51,-57,-58,34,34,34,34,-30,-38,-39,-77,-32,-59,-33,-41,-42,-43,-44,-75,34,-9,34,-55,-70,-72,34,34,-35,-60,-73,34,-8,-68,34,-4,-12,-36,-61,-65,-76,34,34,-69,-71,34,-37,-74,-64,34,-5,]),'RETURN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,59,60,61,62,63,66,67,69,71,77,78,79,80,81,82,83,88,90,91,92,93,94,95,96,97,98,102,103,104,105,107,108,115,119,120,121,122,123,128,131,133,134,136,139,140,141,143,144,145,146,149,150,152,155,],[35,35,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,-45,-48,-56,-46,-31,-47,-49,-52,-53,-54,-10,-11,-46,-50,-51,-57,-58,35,35,35,35,-30,-38,-39,-77,-32,-59,-33,-41,-42,-43,-44,-75,35,-9,35,-55,-70,-72,35,35,-35,-60,-73,35,-8,-68,35,-4,-12,-36,-61,-65,-76,35,35,-69,-71,35,-37,-74,-64,35,-5,]),'BREAK':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,59,60,61,62,63,66,67,69,71,77,78,79,80,81,82,83,88,90,91,92,93,94,95,96,97,98,102,103,104,105,107,108,115,119,120,121,122,123,128,131,133,134,136,139,140,141,143,144,145,146,149,150,152,155,],[36,36,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,-45,-48,-56,-46,-31,-47,-49,-52,-53,-54,-10,-11,-46,-50,-51,-57,-58,36,36,36,36,-30,-38,-39,-77,-32,-59,-33,-41,-42,-43,-44,-75,36,-9,36,-55,-70,-72,36,36,-35,-60,-73,36,-8,-68,36,-4,-12,-36,-61,-65,-76,36,36,-69,-71,36,-37,-74,-64,36,-5,]),'FLOAT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,71,77,78,79,80,81,82,83,85,88,90,91,92,93,94,95,96,97,98,102,103,104,105,106,107,108,115,116,117,118,119,120,121,122,123,128,131,133,134,135,136,137,139,140,141,143,144,145,146,149,150,152,155,],[37,37,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,37,-45,-48,37,-56,37,37,-46,37,-31,-47,-49,-52,-53,-54,37,37,37,-78,-79,-80,-81,-82,-83,37,37,37,37,37,37,-10,-11,-46,-50,-51,37,-57,-58,37,37,37,37,37,-30,-38,-39,-77,-32,37,-59,-33,-41,-42,-43,-44,-75,37,-9,37,-55,-70,-72,37,37,37,-35,-60,37,-84,-85,-73,37,-8,-68,37,-4,-12,-36,-61,37,-65,37,-76,37,37,-69,-71,37,-37,-74,-64,37,-5,]),'STRING':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,71,77,78,79,80,81,82,83,85,86,88,90,91,92,93,94,95,96,97,98,102,103,104,105,106,107,108,115,116,117,118,119,120,121,122,123,128,131,133,134,135,136,137,139,140,141,143,144,145,146,149,150,152,153,155,],[26,26,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,60,-45,-48,26,-56,26,26,-46,26,-31,-47,-49,-52,-53,-54,26,26,26,-78,-79,-80,-81,-82,-83,26,26,26,26,26,26,-10,-11,-46,-50,-51,26,-57,-58,26,26,26,26,26,-30,-38,-39,-77,-32,26,113,-59,-33,-41,-42,-43,-44,-75,26,-9,26,-55,-70,-72,26,26,26,-35,-60,26,-84,-85,-73,26,-8,-68,26,-4,-12,-36,-61,26,-65,26,-76,26,26,-69,-71,26,-37,-74,-64,26,113,-5,]),'BOOLEAN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,71,77,78,79,80,81,82,83,85,88,90,91,92,93,94,95,96,97,98,102,103,104,105,106,107,108,115,116,117,118,119,120,121,122,123,128,131,133,134,135,136,137,139,140,141,143,144,145,146,149,150,152,155,],[38,38,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,38,-45,-48,38,-56,38,38,-46,38,-31,-47,-49,-52,-53,-54,38,38,38,-78,-79,-80,-81,-82,-83,38,38,38,38,38,38,-10,-11,-46,-50,-51,38,-57,-58,38,38,38,38,38,-30,-38,-39,-77,-32,38,-59,-33,-41,-42,-43,-44,-75,38,-9,38,-55,-70,-72,38,38,38,-35,-60,38,-84,-85,-73,38,-8,-68,38,-4,-12,-36,-61,38,-65,38,-76,38,38,-69,-71,38,-37,-74,-64,38,-5,]),'TRUE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,71,77,78,79,80,81,82,83,85,88,90,91,92,93,94,95,96,97,98,102,103,104,105,106,107,108,115,116,117,118,119,120,121,122,123,128,131,133,134,135,136,137,139,140,141,143,144,145,146,149,150,152,155,],[39,39,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,39,-45,-48,39,-56,39,39,-46,39,-31,-47,-49,-52,-53,-54,39,39,39,-78,-79,-80,-81,-82,-83,39,39,39,39,39,39,-10,-11,-46,-50,-51,39,-57,-58,39,39,39,39,39,-30,-38,-39,-77,-32,39,-59,-33,-41,-42,-43,-44,-75,39,-9,39,-55,-70,-72,39,39,39,-35,-60,39,-84,-85,-73,39,-8,-68,39,-4,-12,-36,-61,39,-65,39,-76,39,39,-69,-71,39,-37,-74,-64,39,-5,]),'FALSE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,71,77,78,79,80,81,82,83,85,88,90,91,92,93,94,95,96,97,98,102,103,104,105,106,107,108,115,116,117,118,119,120,121,122,123,128,131,133,134,135,136,137,139,140,141,143,144,145,146,149,150,152,155,],[40,40,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,40,-45,-48,40,-56,40,40,-46,40,-31,-47,-49,-52,-53,-54,40,40,40,-78,-79,-80,-81,-82,-83,40,40,40,40,40,40,-10,-11,-46,-50,-51,40,-57,-58,40,40,40,40,40,-30,-38,-39,-77,-32,40,-59,-33,-41,-42,-43,-44,-75,40,-9,40,-55,-70,-72,40,40,40,-35,-60,40,-84,-85,-73,40,-8,-68,40,-4,-12,-36,-61,40,-65,40,-76,40,40,-69,-71,40,-37,-74,-64,40,-5,]),'NIL':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,71,77,78,79,80,81,82,83,85,88,90,91,92,93,94,95,96,97,98,102,103,104,105,106,107,108,115,116,117,118,119,120,121,122,123,128,131,133,134,135,136,137,139,140,141,143,144,145,146,149,150,152,155,],[41,41,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,41,-45,-48,41,-56,41,41,-46,41,-31,-47,-49,-52,-53,-54,41,41,41,-78,-79,-80,-81,-82,-83,41,41,41,41,41,41,-10,-11,-46,-50,-51,41,-57,-58,41,41,41,41,41,-30,-38,-39,-77,-32,41,-59,-33,-41,-42,-43,-44,-75,41,-9,41,-55,-70,-72,41,41,41,-35,-60,41,-84,-85,-73,41,-8,-68,41,-4,-12,-36,-61,41,-65,41,-76,41,41,-69,-71,41,-37,-74,-64,41,-5,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,42,59,60,61,62,63,66,67,79,80,81,82,83,88,90,91,92,93,94,95,102,103,104,108,115,119,122,128,131,133,134,136,139,143,144,146,149,150,155,],[0,-1,-2,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,-45,-48,-56,-46,-31,-47,-49,-52,-53,-54,-3,-10,-11,-46,-50,-51,-57,-58,-30,-38,-39,-77,-32,-59,-33,-41,-42,-43,-44,-75,-55,-70,-72,-35,-60,-73,-68,-4,-12,-36,-61,-65,-76,-69,-71,-37,-74,-64,-5,]),'END':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,59,60,61,62,63,66,67,79,80,81,82,83,88,90,91,92,93,94,95,96,97,98,102,103,104,105,107,108,115,119,121,122,128,131,133,134,136,139,140,141,143,144,146,149,150,152,155,],[-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,-45,-48,-56,-46,-31,-47,-49,-52,-53,-54,-10,-11,-46,-50,-51,-57,-58,-30,-38,-39,-77,-32,-59,-33,-41,-42,-43,-44,-75,119,-9,122,-55,-70,-72,128,131,-35,-60,-73,-8,-68,-4,-12,-36,-61,-65,-76,149,150,-69,-71,-37,-74,-64,155,-5,]),'ELSE':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,59,60,61,62,63,66,67,79,80,81,82,83,88,90,91,92,93,94,95,96,97,102,103,104,108,115,119,121,122,128,131,133,134,136,139,143,144,146,149,150,155,],[-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-50,-51,-40,-45,-48,-56,-46,-31,-47,-49,-52,-53,-54,-10,-11,-46,-50,-51,-57,-58,-30,-38,-39,-77,-32,-59,-33,-41,-42,-43,-44,-75,120,-9,-55,-70,-72,-35,-60,-73,-8,-68,-4,-12,-36,-61,-65,-76,-69,-71,-37,-74,-64,-5,]),'PLUS':([5,12,13,21,22,23,25,26,28,32,37,38,39,40,41,59,60,61,62,63,65,66,67,69,70,71,73,74,79,80,81,82,83,90,91,92,93,94,95,102,103,104,111,126,127,129,139,143,144,148,],[43,-57,-58,-50,-51,-40,-45,-48,-56,-46,-47,-49,-52,-53,-54,-45,-48,-46,-50,-51,43,-57,-58,-56,-45,-56,-46,43,-45,-38,-39,43,43,43,-41,-42,-43,-44,-45,-55,-70,-72,-45,-70,-72,-50,-56,-69,-71,-45,]),'MINUS':([5,12,13,21,22,23,25,26,28,32,37,38,39,40,41,59,60,61,62,63,65,66,67,69,70,71,73,74,79,80,81,82,83,90,91,92,93,94,95,102,103,104,111,126,127,129,139,143,144,148,],[44,-57,-58,-50,-51,-40,-45,-48,-56,-46,-47,-49,-52,-53,-54,-45,-48,-46,-50,-51,44,-57,-58,-56,-45,-56,-46,44,-45,-38,-39,44,44,44,-41,-42,-43,-44,-45,-55,-70,-72,-45,-70,-72,-50,-56,-69,-71,-45,]),'EQUALS':([5,12,13,21,22,23,25,26,28,32,37,38,39,40,41,59,60,61,62,63,65,66,67,69,70,71,73,74,79,80,81,82,83,90,91,92,93,94,95,102,103,104,111,126,127,129,139,143,144,148,],[46,-57,-58,-50,-51,-40,46,-48,-56,-46,-47,-49,-52,-53,-54,46,-48,-46,-50,-51,46,-57,-58,-56,46,-56,-46,46,46,-38,-39,46,46,46,46,46,46,46,46,-55,-70,-72,46,-70,-72,-50,-56,-69,-71,46,]),'NEQUALS':([5,12,13,21,22,23,25,26,28,32,37,38,39,40,41,59,60,61,62,63,65,66,67,69,70,71,73,74,79,80,81,82,83,90,91,92,93,94,95,102,103,104,111,126,127,129,139,143,144,148,],[47,-57,-58,-50,-51,-40,47,-48,-56,-46,-47,-49,-52,-53,-54,47,-48,-46,-50,-51,47,-57,-58,-56,47,-56,-46,47,47,-38,-39,47,47,47,47,47,47,47,47,-55,-70,-72,47,-70,-72,-50,-56,-69,-71,47,]),'GREATEREQ':([5,12,13,21,22,23,25,26,28,32,37,38,39,40,41,59,60,61,62,63,65,66,67,69,70,71,73,74,79,80,81,82,83,90,91,92,93,94,95,102,103,104,111,126,127,129,139,143,144,148,],[48,-57,-58,-50,-51,-40,48,-48,-56,-46,-47,-49,-52,-53,-54,48,-48,-46,-50,-51,48,-57,-58,-56,48,-56,-46,48,48,-38,-39,48,48,48,48,48,48,48,48,-55,-70,-72,48,-70,-72,-50,-56,-69,-71,48,]),'LESSEQ':([5,12,13,21,22,23,25,26,28,32,37,38,39,40,41,59,60,61,62,63,65,66,67,69,70,71,73,74,79,80,81,82,83,90,91,92,93,94,95,102,103,104,111,126,127,129,139,143,144,148,],[49,-57,-58,-50,-51,-40,49,-48,-56,-46,-47,-49,-52,-53,-54,49,-48,-46,-50,-51,49,-57,-58,-56,49,-56,-46,49,49,-38,-39,49,49,49,49,49,49,49,49,-55,-70,-72,49,-70,-72,-50,-56,-69,-71,49,]),'GREATERT':([5,12,13,21,22,23,25,26,28,32,37,38,39,40,41,59,60,61,62,63,65,66,67,69,70,71,73,74,79,80,81,82,83,90,91,92,93,94,95,102,103,104,111,126,127,129,139,143,144,148,],[50,-57,-58,-50,-51,-40,50,-48,-56,-46,-47,-49,-52,-53,-54,50,-48,-46,-50,-51,50,-57,-58,-56,50,-56,-46,50,50,-38,-39,50,50,50,50,50,50,50,50,-55,-70,-72,50,-70,-72,-50,-56,-69,-71,50,]),'LESST':([5,12,13,21,22,23,25,26,28,32,37,38,39,40,41,59,60,61,62,63,65,66,67,69,70,71,73,74,79,80,81,82,83,90,91,92,93,94,95,102,103,104,111,126,127,129,139,143,144,148,],[51,-57,-58,-50,-51,-40,51,-48,-56,-46,-47,-49,-52,-53,-54,51,-48,-46,-50,-51,51,-57,-58,-56,51,-56,-46,51,51,-38,-39,51,51,51,51,51,51,51,51,-55,-70,-72,51,-70,-72,-50,-56,-69,-71,51,]),'TIMES':([12,13,21,22,23,25,26,28,32,37,38,39,40,41,59,60,61,62,63,66,67,69,70,71,73,79,80,81,82,91,92,93,94,95,102,103,104,111,126,127,129,139,143,144,148,],[-57,-58,-50,-51,55,-45,-48,-56,-46,-47,-49,-52,-53,-54,-45,-48,-46,-50,-51,-57,-58,-56,-45,-56,-46,-45,55,55,-77,-41,-42,-43,-44,-45,-55,-70,-72,-45,-70,-72,-50,-56,-69,-71,-45,]),'DIVIDE':([12,13,21,22,23,25,26,28,32,37,38,39,40,41,59,60,61,62,63,66,67,69,70,71,73,79,80,81,82,91,92,93,94,95,102,103,104,111,126,127,129,139,143,144,148,],[-57,-58,-50,-51,56,-45,-48,-56,-46,-47,-49,-52,-53,-54,-45,-48,-46,-50,-51,-57,-58,-56,-45,-56,-46,-45,56,56,-77,-41,-42,-43,-44,-45,-55,-70,-72,-45,-70,-72,-50,-56,-69,-71,-45,]),'EXPONENT':([12,13,21,22,23,25,26,28,32,37,38,39,40,41,59,60,61,62,63,66,67,69,70,71,73,79,80,81,82,91,92,93,94,95,102,103,104,111,126,127,129,139,143,144,148,],[-57,-58,-50,-51,57,-45,-48,-56,-46,-47,-49,-52,-53,-54,-45,-48,-46,-50,-51,-57,-58,-56,-45,-56,-46,-45,57,57,-77,-41,-42,-43,-44,-45,-55,-70,-72,-45,-70,-72,-50,-56,-69,-71,-45,]),'MODULE':([12,13,21,22,23,25,26,28,32,37,38,39,40,41,59,60,61,62,63,66,67,69,70,71,73,79,80,81,82,91,92,93,94,95,102,103,104,111,126,127,129,139,143,144,148,],[-57,-58,-50,-51,58,-45,-48,-56,-46,-47,-49,-52,-53,-54,-45,-48,-46,-50,-51,-57,-58,-56,-45,-56,-46,-45,58,58,-77,-41,-42,-43,-44,-45,-55,-70,-72,-45,-70,-72,-50,-56,-69,-71,-45,]),'ASSIGN':([21,22,],[52,54,]),'RPAREN':([23,25,26,28,37,38,39,40,41,53,61,62,63,66,67,73,74,80,81,82,87,89,91,92,93,94,95,102,103,104,126,127,129,130,138,139,143,144,154,],[-40,-45,-48,-56,-47,-49,-52,-53,-54,88,-46,-50,-51,-57,-58,-46,102,-38,-39,-77,-6,115,-41,-42,-43,-44,-75,-55,-70,-72,143,144,-6,145,-7,-76,-69,-71,143,]),'AND':([23,25,26,28,37,38,39,40,41,61,62,63,66,67,80,81,82,91,92,93,94,95,102,103,104,139,143,144,],[-40,-45,-48,-56,-47,-49,-52,-53,-54,-46,-50,-51,-57,-58,-38,-39,-77,-41,-42,-43,-44,117,-55,-70,-72,-76,-69,-71,]),'OR':([23,25,26,28,37,38,39,40,41,61,62,63,66,67,80,81,82,91,92,93,94,95,102,103,104,139,143,144,],[-40,-45,-48,-56,-47,-49,-52,-53,-54,-46,-50,-51,-57,-58,-38,-39,-77,-41,-42,-43,-44,118,-55,-70,-72,-76,-69,-71,]),'COMMA':([23,25,26,28,37,38,39,40,41,61,62,63,66,67,80,81,82,87,91,92,93,94,95,102,103,104,111,129,139,143,144,148,],[-40,-45,-48,-56,-47,-49,-52,-53,-54,-46,-50,-51,-57,-58,-38,-39,-77,114,-41,-42,-43,-44,-75,-55,-70,-72,135,114,-76,-69,-71,153,]),'RCORCH':([23,25,26,28,37,38,39,40,41,61,62,63,66,67,80,81,82,91,92,93,94,95,102,103,104,110,111,139,143,144,147,],[-40,-45,-48,-56,-47,-49,-52,-53,-54,-46,-50,-51,-57,-58,-38,-39,-77,-41,-42,-43,-44,-75,-55,-70,-72,134,-62,-76,-69,-71,-63,]),'RBRACE':([23,25,26,28,37,38,39,40,41,61,62,63,66,67,80,81,82,91,92,93,94,95,102,103,104,112,139,143,144,148,156,],[-40,-45,-48,-56,-47,-49,-52,-53,-54,-46,-50,-51,-57,-58,-38,-39,-77,-41,-42,-43,-44,-75,-55,-70,-72,136,-76,-69,-71,-66,-67,]),'RANGE_INCL':([32,61,73,125,142,],[75,75,100,75,151,]),'RANGE_EXCL':([32,61,73,],[76,76,101,]),'GETS':([52,],[84,]),'LCORCH':([52,],[85,]),'LBRACE':([52,],[86,]),'IN':([72,],[99,]),'DOT':([84,108,133,146,],[109,132,-36,-37,]),'COLON':([113,],[137,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'sentences':([0,3,],[2,42,]),'sentence':([0,3,69,71,77,78,96,98,105,107,120,123,140,141,145,152,],[3,3,97,97,97,97,121,121,121,121,97,97,121,121,97,121,]),'assignment':([0,3,69,71,77,78,96,98,105,107,120,123,140,141,145,152,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'expression':([0,3,24,27,29,31,35,43,44,45,52,54,55,56,57,58,64,68,69,71,77,78,85,96,98,105,106,107,116,120,123,135,137,140,141,145,152,],[5,5,65,65,65,74,65,65,65,82,83,90,65,65,65,65,74,65,5,5,5,5,65,5,5,5,74,5,65,5,5,65,65,5,5,5,5,]),'print':([0,3,69,71,77,78,96,98,105,107,120,123,140,141,145,152,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'input':([0,3,69,71,77,78,96,98,105,107,120,123,140,141,145,152,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'condition':([0,3,69,71,77,78,96,98,105,107,120,123,140,141,145,152,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'while_loop':([0,3,69,71,77,78,96,98,105,107,120,123,140,141,145,152,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'for_loop':([0,3,69,71,77,78,96,98,105,107,120,123,140,141,145,152,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'array':([0,3,69,71,77,78,96,98,105,107,120,123,140,141,145,152,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'range_incl':([0,3,24,27,29,31,35,43,44,45,52,54,55,56,57,58,64,68,69,71,77,78,85,96,98,99,105,106,107,116,120,123,135,137,140,141,145,152,],[12,12,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,12,12,12,12,66,12,12,123,12,66,12,66,12,12,66,66,12,12,12,12,]),'range_excl':([0,3,24,27,29,31,35,43,44,45,52,54,55,56,57,58,64,68,69,71,77,78,85,96,98,105,106,107,116,120,123,135,137,140,141,145,152,],[13,13,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,13,13,13,13,67,13,13,13,67,13,67,13,13,67,67,13,13,13,13,]),'hash':([0,3,69,71,77,78,96,98,105,107,120,123,140,141,145,152,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'function':([0,3,69,71,77,78,96,98,105,107,120,123,140,141,145,152,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'class_def':([0,3,69,71,77,78,96,98,105,107,120,123,140,141,145,152,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'return_stmt':([0,3,69,71,77,78,96,98,105,107,120,123,140,141,145,152,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'break_stmt':([0,3,69,71,77,78,96,98,105,107,120,123,140,141,145,152,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'function_call_empty':([0,3,69,71,77,78,96,98,105,107,120,123,140,141,145,152,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'function_call_args':([0,3,69,71,77,78,96,98,105,107,120,123,140,141,145,152,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'term':([0,3,24,27,29,31,35,43,44,45,52,54,55,56,57,58,64,68,69,71,77,78,85,96,98,105,106,107,116,120,123,135,137,140,141,145,152,],[23,23,23,23,23,23,23,80,81,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'factor':([0,3,24,27,29,31,35,43,44,45,52,54,55,56,57,58,64,68,69,71,77,78,85,96,98,105,106,107,116,120,123,135,137,140,141,145,152,],[25,25,59,70,70,25,79,25,25,25,25,25,91,92,93,94,25,95,25,25,25,25,111,25,25,25,25,25,70,25,25,111,148,25,25,25,25,]),'logic_expression':([0,3,24,27,29,31,35,43,44,45,52,54,55,56,57,58,64,68,69,71,77,78,85,96,98,105,106,107,116,120,123,135,137,140,141,145,152,],[28,28,28,69,71,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,139,28,28,28,28,28,28,28,28,]),'logic_op':([5,25,59,65,70,74,79,82,83,90,91,92,93,94,95,111,148,],[45,68,68,45,68,45,68,45,45,45,68,68,68,68,68,68,68,]),'args':([53,106,114,],[89,130,138,]),'body':([69,71,77,78,120,123,145,],[96,98,105,107,140,141,152,]),'method_chain':([84,],[108,]),'elements':([85,135,],[110,147,]),'hash_pairs':([86,153,],[112,156,]),'logic_connector':([95,],[116,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> sentences','start',1,'p_start','yacc.py',10),
  ('sentences -> sentence','sentences',1,'p_sentences','yacc.py',13),
  ('sentences -> sentence sentences','sentences',2,'p_sentences','yacc.py',14),
  ('function -> DEF ID body END','function',4,'p_function','yacc.py',19),
  ('function -> DEF ID LPAREN args RPAREN body END','function',7,'p_function','yacc.py',20),
  ('args -> ID','args',1,'p_args','yacc.py',25),
  ('args -> ID COMMA args','args',3,'p_args','yacc.py',26),
  ('body -> body sentence','body',2,'p_body','yacc.py',29),
  ('body -> sentence','body',1,'p_body','yacc.py',30),
  ('print -> PUTS factor','print',2,'p_print','yacc.py',33),
  ('print -> PUTS STRING','print',2,'p_print','yacc.py',34),
  ('class_def -> CLASS ID body END','class_def',4,'p_class_def','yacc.py',38),
  ('sentence -> assignment','sentence',1,'p_sentence','yacc.py',42),
  ('sentence -> expression','sentence',1,'p_sentence','yacc.py',43),
  ('sentence -> print','sentence',1,'p_sentence','yacc.py',44),
  ('sentence -> input','sentence',1,'p_sentence','yacc.py',45),
  ('sentence -> condition','sentence',1,'p_sentence','yacc.py',46),
  ('sentence -> while_loop','sentence',1,'p_sentence','yacc.py',47),
  ('sentence -> for_loop','sentence',1,'p_sentence','yacc.py',48),
  ('sentence -> array','sentence',1,'p_sentence','yacc.py',49),
  ('sentence -> range_incl','sentence',1,'p_sentence','yacc.py',50),
  ('sentence -> range_excl','sentence',1,'p_sentence','yacc.py',51),
  ('sentence -> hash','sentence',1,'p_sentence','yacc.py',52),
  ('sentence -> function','sentence',1,'p_sentence','yacc.py',53),
  ('sentence -> class_def','sentence',1,'p_sentence','yacc.py',54),
  ('sentence -> return_stmt','sentence',1,'p_sentence','yacc.py',55),
  ('sentence -> break_stmt','sentence',1,'p_sentence','yacc.py',56),
  ('sentence -> function_call_empty','sentence',1,'p_sentence','yacc.py',57),
  ('sentence -> function_call_args','sentence',1,'p_sentence','yacc.py',58),
  ('return_stmt -> RETURN factor','return_stmt',2,'p_return_stmt','yacc.py',61),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','yacc.py',64),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','yacc.py',68),
  ('assignment -> VAR_INST ASSIGN expression','assignment',3,'p_assignment','yacc.py',69),
  ('input -> PUTS STRING','input',2,'p_input','yacc.py',73),
  ('input -> ID ASSIGN GETS method_chain','input',4,'p_input','yacc.py',74),
  ('method_chain -> DOT ID','method_chain',2,'p_method_chain','yacc.py',78),
  ('method_chain -> method_chain DOT ID','method_chain',3,'p_method_chain','yacc.py',79),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','yacc.py',83),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','yacc.py',87),
  ('expression -> term','expression',1,'p_expression_term','yacc.py',91),
  ('term -> term TIMES factor','term',3,'p_term_times','yacc.py',95),
  ('term -> term DIVIDE factor','term',3,'p_term_div','yacc.py',99),
  ('term -> term EXPONENT factor','term',3,'p_term_exponent','yacc.py',103),
  ('term -> term MODULE factor','term',3,'p_term_module','yacc.py',107),
  ('term -> factor','term',1,'p_term_factor','yacc.py',111),
  ('factor -> INTEGER','factor',1,'p_factor_valor','yacc.py',116),
  ('factor -> FLOAT','factor',1,'p_factor_valor','yacc.py',117),
  ('factor -> STRING','factor',1,'p_factor_valor','yacc.py',118),
  ('factor -> BOOLEAN','factor',1,'p_factor_valor','yacc.py',119),
  ('factor -> ID','factor',1,'p_factor_valor','yacc.py',120),
  ('factor -> VAR_INST','factor',1,'p_factor_valor','yacc.py',121),
  ('factor -> TRUE','factor',1,'p_factor_valor','yacc.py',122),
  ('factor -> FALSE','factor',1,'p_factor_valor','yacc.py',123),
  ('factor -> NIL','factor',1,'p_factor_valor','yacc.py',124),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_group','yacc.py',130),
  ('factor -> logic_expression','factor',1,'p_factor_logic_expression','yacc.py',135),
  ('factor -> range_incl','factor',1,'p_factor_range_incl','yacc.py',141),
  ('factor -> range_excl','factor',1,'p_factor_range_excl','yacc.py',144),
  ('function_call_empty -> ID LPAREN RPAREN','function_call_empty',3,'p_function_call_empty','yacc.py',149),
  ('function_call_args -> ID LPAREN args RPAREN','function_call_args',4,'p_function_call_args','yacc.py',154),
  ('array -> ID ASSIGN LCORCH elements RCORCH','array',5,'p_array','yacc.py',160),
  ('elements -> factor','elements',1,'p_elements','yacc.py',163),
  ('elements -> factor COMMA elements','elements',3,'p_elements','yacc.py',164),
  ('for_loop -> FOR ID IN range_incl body END','for_loop',6,'p_for_loop','yacc.py',168),
  ('hash -> ID ASSIGN LBRACE hash_pairs RBRACE','hash',5,'p_hash','yacc.py',172),
  ('hash_pairs -> STRING COLON factor','hash_pairs',3,'p_hash_pairs','yacc.py',175),
  ('hash_pairs -> STRING COLON factor COMMA hash_pairs','hash_pairs',5,'p_hash_pairs','yacc.py',176),
  ('while_loop -> WHILE logic_expression body END','while_loop',4,'p_while_loop','yacc.py',181),
  ('range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN','range_incl',5,'p_range_incl','yacc.py',186),
  ('range_incl -> INTEGER RANGE_INCL INTEGER','range_incl',3,'p_range_incl','yacc.py',187),
  ('range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN','range_excl',5,'p_range_excl','yacc.py',190),
  ('range_excl -> INTEGER RANGE_EXCL INTEGER','range_excl',3,'p_range_excl','yacc.py',191),
  ('condition -> IF logic_expression body END','condition',4,'p_condition','yacc.py',197),
  ('condition -> IF logic_expression body ELSE body END','condition',6,'p_condition','yacc.py',198),
  ('logic_expression -> factor logic_op factor','logic_expression',3,'p_logic_expression','yacc.py',201),
  ('logic_expression -> factor logic_op factor logic_connector logic_expression','logic_expression',5,'p_logic_expression','yacc.py',202),
  ('logic_expression -> expression logic_op expression','logic_expression',3,'p_logic_expression_expression','yacc.py',205),
  ('logic_op -> EQUALS','logic_op',1,'p_logic_op','yacc.py',209),
  ('logic_op -> NEQUALS','logic_op',1,'p_logic_op','yacc.py',210),
  ('logic_op -> GREATEREQ','logic_op',1,'p_logic_op','yacc.py',211),
  ('logic_op -> LESSEQ','logic_op',1,'p_logic_op','yacc.py',212),
  ('logic_op -> GREATERT','logic_op',1,'p_logic_op','yacc.py',213),
  ('logic_op -> LESST','logic_op',1,'p_logic_op','yacc.py',214),
  ('logic_connector -> AND','logic_connector',1,'p_logic_connector','yacc.py',217),
  ('logic_connector -> OR','logic_connector',1,'p_logic_connector','yacc.py',218),
]


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startAND AND_OP ASSIGN BOOLEAN BREAK CLASS COLON COMMA DEF DIVIDE DO DOT ELSE END EQUALS EXPONENT FALSE FLOAT FOR GETS GREATEREQ GREATERT ID IF IN INTEGER LBRACE LCORCH LESSEQ LESST LPAREN MINUS MODULE NEQUALS NEXT NIL NOT NOT_OP OR OR_OP PLUS PUTS RANGE_EXCL RANGE_INCL RBRACE RCORCH RETURN RPAREN SEMICOLON STRING THEN TIMES TRUE VAR_INST WHILE YIELDstart : sentencessentences : sentence\n| sentence sentencesfunction : DEF ID body END\n| DEF ID LPAREN args RPAREN body ENDargs : ID\n| ID COMMA argsbody : sentence\n| sentence bodyprint : PUTS  factorclass_def : CLASS ID body ENDsentence : assignment\n| expression\n| print\n| input\n| condition\n| while_loop\n| for_loop\n| array\n| range_incl\n| range_excl\n| hash\n| function\n| class_def\n| return_stmt\n| break_stmt\n| function_call_empty\n| function_call_argsreturn_stmt : RETURN factorbreak_stmt : BREAKassignment : ID ASSIGN expression\n| VAR_INST ASSIGN expressioninput : PUTS STRING\n| ID ASSIGN GETS DOT IDexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : term EXPONENT factorterm : term MODULE factorterm : factorfactor : INTEGER\n| FLOAT\n| STRING\n| BOOLEAN\n| ID\n| VAR_INST\n| TRUE\n| FALSE\n| NILfactor : LPAREN expression RPARENfactor : logic_expressionfunction_call_empty : ID LPAREN RPARENfunction_call_args : ID LPAREN args RPARENarray : ID ASSIGN LCORCH elements RCORCHelements : factor\n| factor COMMA elementsfor_loop : FOR ID IN range_incl body ENDhash : ID ASSIGN LBRACE hash_pairs RBRACEhash_pairs : STRING COLON factor\n| STRING COLON factor COMMA hash_pairswhile_loop : WHILE logic_expression body ENDrange_incl : LPAREN INTEGER RANGE_INCL INTEGER RPARENrange_excl : LPAREN INTEGER RANGE_EXCL INTEGER RPARENcondition : IF logic_expression body END\n| IF logic_expression body ELSE body ENDlogic_expression : factor logic_op factor\n| factor logic_op factor logic_connector logic_expressionlogic_op : EQUALS\n| NEQUALS\n| GREATEREQ\n| LESSEQ\n| GREATERT\n| LESSTlogic_connector : AND\n| OR'
    
_lr_action_items = {'ID':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,71,72,73,74,75,77,80,82,83,84,85,86,87,89,94,96,98,103,104,105,106,107,108,109,111,112,116,119,120,121,122,123,124,126,130,131,132,135,136,139,],[21,21,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,54,-42,-45,54,-53,54,67,54,-43,70,71,54,-30,-44,-46,-49,-50,-51,54,54,54,79,54,54,54,54,54,-10,-33,-47,-48,54,54,-70,-71,-72,-73,-74,-75,21,21,21,21,-29,-35,-36,-31,54,-54,-32,-38,-39,-40,-41,-68,21,-52,117,120,79,-55,54,-76,-77,-66,21,-63,21,-4,-11,-34,-56,54,-60,54,-69,-64,-65,21,-67,-59,-5,]),'VAR_INST':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,39,40,41,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,71,72,73,74,75,77,80,82,83,84,85,86,87,89,94,96,104,105,106,107,108,109,111,112,116,119,120,121,122,123,124,126,130,131,132,135,136,139,],[22,22,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,55,-42,-45,55,-53,55,55,-43,55,-30,-44,-46,-49,-50,-51,55,55,55,55,55,55,55,55,-10,-33,-47,-48,55,55,-70,-71,-72,-73,-74,-75,22,22,22,22,-29,-35,-36,-31,55,-54,-32,-38,-39,-40,-41,-68,22,-52,55,-55,55,-76,-77,-66,22,-63,22,-4,-11,-34,-56,55,-60,55,-69,-64,-65,22,-67,-59,-5,]),'PUTS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,52,53,54,55,64,66,70,71,72,73,74,75,80,82,83,84,85,86,87,89,94,104,108,109,111,112,116,119,120,121,123,126,130,131,132,135,136,139,],[24,24,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,-42,-45,-53,-43,-30,-44,-46,-49,-50,-51,-10,-33,-47,-48,24,24,24,24,-29,-35,-36,-31,-54,-32,-38,-39,-40,-41,-68,24,-52,-55,-66,24,-63,24,-4,-11,-34,-56,-60,-69,-64,-65,24,-67,-59,-5,]),'IF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,52,53,54,55,64,66,70,71,72,73,74,75,80,82,83,84,85,86,87,89,94,104,108,109,111,112,116,119,120,121,123,126,130,131,132,135,136,139,],[27,27,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,-42,-45,-53,-43,-30,-44,-46,-49,-50,-51,-10,-33,-47,-48,27,27,27,27,-29,-35,-36,-31,-54,-32,-38,-39,-40,-41,-68,27,-52,-55,-66,27,-63,27,-4,-11,-34,-56,-60,-69,-64,-65,27,-67,-59,-5,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,52,53,54,55,64,66,70,71,72,73,74,75,80,82,83,84,85,86,87,89,94,104,108,109,111,112,116,119,120,121,123,126,130,131,132,135,136,139,],[29,29,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,-42,-45,-53,-43,-30,-44,-46,-49,-50,-51,-10,-33,-47,-48,29,29,29,29,-29,-35,-36,-31,-54,-32,-38,-39,-40,-41,-68,29,-52,-55,-66,29,-63,29,-4,-11,-34,-56,-60,-69,-64,-65,29,-67,-59,-5,]),'FOR':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,52,53,54,55,64,66,70,71,72,73,74,75,80,82,83,84,85,86,87,89,94,104,108,109,111,112,116,119,120,121,123,126,130,131,132,135,136,139,],[30,30,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,-42,-45,-53,-43,-30,-44,-46,-49,-50,-51,-10,-33,-47,-48,30,30,30,30,-29,-35,-36,-31,-54,-32,-38,-39,-40,-41,-68,30,-52,-55,-66,30,-63,30,-4,-11,-34,-56,-60,-69,-64,-65,30,-67,-59,-5,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,39,40,41,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,71,72,73,74,75,77,80,82,83,84,85,86,87,89,91,94,96,104,105,106,107,108,109,111,112,116,119,120,121,122,123,124,126,130,131,132,135,136,139,],[31,31,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,46,-48,-37,56,-42,-45,56,-53,56,56,-43,56,-30,-44,-46,-49,-50,-51,56,56,56,56,56,56,56,56,-10,-33,-47,-48,56,56,-70,-71,-72,-73,-74,-75,31,31,96,31,-29,-35,-36,-31,56,-54,-32,-38,-39,-40,-41,-68,31,113,-52,56,-55,56,-76,-77,-66,31,-63,31,-4,-11,-34,-56,56,-60,56,-69,-64,-65,31,-67,-59,-5,]),'DEF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,52,53,54,55,64,66,70,71,72,73,74,75,80,82,83,84,85,86,87,89,94,104,108,109,111,112,116,119,120,121,123,126,130,131,132,135,136,139,],[33,33,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,-42,-45,-53,-43,-30,-44,-46,-49,-50,-51,-10,-33,-47,-48,33,33,33,33,-29,-35,-36,-31,-54,-32,-38,-39,-40,-41,-68,33,-52,-55,-66,33,-63,33,-4,-11,-34,-56,-60,-69,-64,-65,33,-67,-59,-5,]),'CLASS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,52,53,54,55,64,66,70,71,72,73,74,75,80,82,83,84,85,86,87,89,94,104,108,109,111,112,116,119,120,121,123,126,130,131,132,135,136,139,],[34,34,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,-42,-45,-53,-43,-30,-44,-46,-49,-50,-51,-10,-33,-47,-48,34,34,34,34,-29,-35,-36,-31,-54,-32,-38,-39,-40,-41,-68,34,-52,-55,-66,34,-63,34,-4,-11,-34,-56,-60,-69,-64,-65,34,-67,-59,-5,]),'RETURN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,52,53,54,55,64,66,70,71,72,73,74,75,80,82,83,84,85,86,87,89,94,104,108,109,111,112,116,119,120,121,123,126,130,131,132,135,136,139,],[35,35,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,-42,-45,-53,-43,-30,-44,-46,-49,-50,-51,-10,-33,-47,-48,35,35,35,35,-29,-35,-36,-31,-54,-32,-38,-39,-40,-41,-68,35,-52,-55,-66,35,-63,35,-4,-11,-34,-56,-60,-69,-64,-65,35,-67,-59,-5,]),'BREAK':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,52,53,54,55,64,66,70,71,72,73,74,75,80,82,83,84,85,86,87,89,94,104,108,109,111,112,116,119,120,121,123,126,130,131,132,135,136,139,],[36,36,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,-42,-45,-53,-43,-30,-44,-46,-49,-50,-51,-10,-33,-47,-48,36,36,36,36,-29,-35,-36,-31,-54,-32,-38,-39,-40,-41,-68,36,-52,-55,-66,36,-63,36,-4,-11,-34,-56,-60,-69,-64,-65,36,-67,-59,-5,]),'INTEGER':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,39,40,41,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,71,72,73,74,75,77,80,82,83,84,85,86,87,89,92,93,94,96,104,105,106,107,108,109,111,112,113,116,119,120,121,122,123,124,126,130,131,132,135,136,139,],[32,32,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,32,-42,-45,32,-53,32,68,-43,32,-30,-44,-46,-49,-50,-51,32,32,32,32,32,32,32,32,-10,-33,-47,-48,32,32,-70,-71,-72,-73,-74,-75,32,32,32,32,-29,-35,-36,-31,32,-54,-32,-38,-39,-40,-41,-68,32,114,115,-52,68,-55,32,-76,-77,-66,32,-63,32,129,-4,-11,-34,-56,32,-60,32,-69,-64,-65,32,-67,-59,-5,]),'FLOAT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,39,40,41,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,71,72,73,74,75,77,80,82,83,84,85,86,87,89,94,96,104,105,106,107,108,109,111,112,116,119,120,121,122,123,124,126,130,131,132,135,136,139,],[37,37,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,37,-42,-45,37,-53,37,37,-43,37,-30,-44,-46,-49,-50,-51,37,37,37,37,37,37,37,37,-10,-33,-47,-48,37,37,-70,-71,-72,-73,-74,-75,37,37,37,37,-29,-35,-36,-31,37,-54,-32,-38,-39,-40,-41,-68,37,-52,37,-55,37,-76,-77,-66,37,-63,37,-4,-11,-34,-56,37,-60,37,-69,-64,-65,37,-67,-59,-5,]),'STRING':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,39,40,41,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,71,72,73,74,75,77,78,80,82,83,84,85,86,87,89,94,96,104,105,106,107,108,109,111,112,116,119,120,121,122,123,124,126,130,131,132,135,136,138,139,],[26,26,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,53,-42,-45,26,-53,26,26,-43,26,-30,-44,-46,-49,-50,-51,26,26,26,26,26,26,26,26,-10,-33,-47,-48,26,26,-70,-71,-72,-73,-74,-75,26,26,26,26,-29,-35,-36,-31,26,102,-54,-32,-38,-39,-40,-41,-68,26,-52,26,-55,26,-76,-77,-66,26,-63,26,-4,-11,-34,-56,26,-60,26,-69,-64,-65,26,-67,-59,102,-5,]),'BOOLEAN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,39,40,41,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,71,72,73,74,75,77,80,82,83,84,85,86,87,89,94,96,104,105,106,107,108,109,111,112,116,119,120,121,122,123,124,126,130,131,132,135,136,139,],[38,38,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,38,-42,-45,38,-53,38,38,-43,38,-30,-44,-46,-49,-50,-51,38,38,38,38,38,38,38,38,-10,-33,-47,-48,38,38,-70,-71,-72,-73,-74,-75,38,38,38,38,-29,-35,-36,-31,38,-54,-32,-38,-39,-40,-41,-68,38,-52,38,-55,38,-76,-77,-66,38,-63,38,-4,-11,-34,-56,38,-60,38,-69,-64,-65,38,-67,-59,-5,]),'TRUE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,39,40,41,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,71,72,73,74,75,77,80,82,83,84,85,86,87,89,94,96,104,105,106,107,108,109,111,112,116,119,120,121,122,123,124,126,130,131,132,135,136,139,],[39,39,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,39,-42,-45,39,-53,39,39,-43,39,-30,-44,-46,-49,-50,-51,39,39,39,39,39,39,39,39,-10,-33,-47,-48,39,39,-70,-71,-72,-73,-74,-75,39,39,39,39,-29,-35,-36,-31,39,-54,-32,-38,-39,-40,-41,-68,39,-52,39,-55,39,-76,-77,-66,39,-63,39,-4,-11,-34,-56,39,-60,39,-69,-64,-65,39,-67,-59,-5,]),'FALSE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,39,40,41,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,71,72,73,74,75,77,80,82,83,84,85,86,87,89,94,96,104,105,106,107,108,109,111,112,116,119,120,121,122,123,124,126,130,131,132,135,136,139,],[40,40,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,40,-42,-45,40,-53,40,40,-43,40,-30,-44,-46,-49,-50,-51,40,40,40,40,40,40,40,40,-10,-33,-47,-48,40,40,-70,-71,-72,-73,-74,-75,40,40,40,40,-29,-35,-36,-31,40,-54,-32,-38,-39,-40,-41,-68,40,-52,40,-55,40,-76,-77,-66,40,-63,40,-4,-11,-34,-56,40,-60,40,-69,-64,-65,40,-67,-59,-5,]),'NIL':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,39,40,41,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,71,72,73,74,75,77,80,82,83,84,85,86,87,89,94,96,104,105,106,107,108,109,111,112,116,119,120,121,122,123,124,126,130,131,132,135,136,139,],[41,41,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,41,-42,-45,41,-53,41,41,-43,41,-30,-44,-46,-49,-50,-51,41,41,41,41,41,41,41,41,-10,-33,-47,-48,41,41,-70,-71,-72,-73,-74,-75,41,41,41,41,-29,-35,-36,-31,41,-54,-32,-38,-39,-40,-41,-68,41,-52,41,-55,41,-76,-77,-66,41,-63,41,-4,-11,-34,-56,41,-60,41,-69,-64,-65,41,-67,-59,-5,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,42,52,53,54,55,72,73,74,75,80,82,83,84,85,86,87,94,104,108,111,116,119,120,121,123,126,130,131,135,136,139,],[0,-1,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,-42,-45,-53,-43,-30,-44,-46,-49,-50,-51,-3,-10,-33,-47,-48,-29,-35,-36,-31,-54,-32,-38,-39,-40,-41,-68,-52,-55,-66,-63,-4,-11,-34,-56,-60,-69,-64,-65,-67,-59,-5,]),'END':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,52,53,54,55,72,73,74,75,80,82,83,84,85,86,87,88,89,90,94,95,97,104,108,110,111,116,119,120,121,123,126,127,128,130,131,135,136,137,139,],[-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,-42,-45,-53,-43,-30,-44,-46,-49,-50,-51,-10,-33,-47,-48,-29,-35,-36,-31,-54,-32,-38,-39,-40,-41,-68,108,-8,111,-52,116,119,-55,-66,-9,-63,-4,-11,-34,-56,-60,-69,135,136,-64,-65,-67,-59,139,-5,]),'ELSE':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,32,36,37,38,39,40,41,52,53,54,55,72,73,74,75,80,82,83,84,85,86,87,88,89,94,104,108,110,111,116,119,120,121,123,126,130,131,135,136,139,],[-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-47,-48,-37,-42,-45,-53,-43,-30,-44,-46,-49,-50,-51,-10,-33,-47,-48,-29,-35,-36,-31,-54,-32,-38,-39,-40,-41,-68,109,-8,-52,-55,-66,-9,-63,-4,-11,-34,-56,-60,-69,-64,-65,-67,-59,-5,]),'PLUS':([5,21,22,23,25,26,28,32,37,38,39,40,41,54,55,68,69,73,74,75,82,83,84,85,86,87,94,117,126,],[43,-47,-48,-37,-42,-45,-53,-43,-44,-46,-49,-50,-51,-47,-48,-43,43,-35,-36,43,43,-38,-39,-40,-41,-68,-52,-47,-69,]),'MINUS':([5,21,22,23,25,26,28,32,37,38,39,40,41,54,55,68,69,73,74,75,82,83,84,85,86,87,94,117,126,],[44,-47,-48,-37,-42,-45,-53,-43,-44,-46,-49,-50,-51,-47,-48,-43,44,-35,-36,44,44,-38,-39,-40,-41,-68,-52,-47,-69,]),'ASSIGN':([21,22,],[45,47,]),'EQUALS':([21,22,25,26,28,32,37,38,39,40,41,52,53,54,55,64,65,66,68,72,83,84,85,86,87,94,100,117,126,134,],[-47,-48,58,-45,-53,-43,-44,-46,-49,-50,-51,58,-45,-47,-48,-53,58,-53,-43,58,58,58,58,58,58,-52,58,-47,-53,58,]),'NEQUALS':([21,22,25,26,28,32,37,38,39,40,41,52,53,54,55,64,65,66,68,72,83,84,85,86,87,94,100,117,126,134,],[-47,-48,59,-45,-53,-43,-44,-46,-49,-50,-51,59,-45,-47,-48,-53,59,-53,-43,59,59,59,59,59,59,-52,59,-47,-53,59,]),'GREATEREQ':([21,22,25,26,28,32,37,38,39,40,41,52,53,54,55,64,65,66,68,72,83,84,85,86,87,94,100,117,126,134,],[-47,-48,60,-45,-53,-43,-44,-46,-49,-50,-51,60,-45,-47,-48,-53,60,-53,-43,60,60,60,60,60,60,-52,60,-47,-53,60,]),'LESSEQ':([21,22,25,26,28,32,37,38,39,40,41,52,53,54,55,64,65,66,68,72,83,84,85,86,87,94,100,117,126,134,],[-47,-48,61,-45,-53,-43,-44,-46,-49,-50,-51,61,-45,-47,-48,-53,61,-53,-43,61,61,61,61,61,61,-52,61,-47,-53,61,]),'GREATERT':([21,22,25,26,28,32,37,38,39,40,41,52,53,54,55,64,65,66,68,72,83,84,85,86,87,94,100,117,126,134,],[-47,-48,62,-45,-53,-43,-44,-46,-49,-50,-51,62,-45,-47,-48,-53,62,-53,-43,62,62,62,62,62,62,-52,62,-47,-53,62,]),'LESST':([21,22,25,26,28,32,37,38,39,40,41,52,53,54,55,64,65,66,68,72,83,84,85,86,87,94,100,117,126,134,],[-47,-48,63,-45,-53,-43,-44,-46,-49,-50,-51,63,-45,-47,-48,-53,63,-53,-43,63,63,63,63,63,63,-52,63,-47,-53,63,]),'TIMES':([21,22,23,25,26,28,32,37,38,39,40,41,54,55,68,73,74,83,84,85,86,87,94,117,126,],[-47,-48,48,-42,-45,-53,-43,-44,-46,-49,-50,-51,-47,-48,-43,48,48,-38,-39,-40,-41,-68,-52,-47,-69,]),'DIVIDE':([21,22,23,25,26,28,32,37,38,39,40,41,54,55,68,73,74,83,84,85,86,87,94,117,126,],[-47,-48,49,-42,-45,-53,-43,-44,-46,-49,-50,-51,-47,-48,-43,49,49,-38,-39,-40,-41,-68,-52,-47,-69,]),'EXPONENT':([21,22,23,25,26,28,32,37,38,39,40,41,54,55,68,73,74,83,84,85,86,87,94,117,126,],[-47,-48,50,-42,-45,-53,-43,-44,-46,-49,-50,-51,-47,-48,-43,50,50,-38,-39,-40,-41,-68,-52,-47,-69,]),'MODULE':([21,22,23,25,26,28,32,37,38,39,40,41,54,55,68,73,74,83,84,85,86,87,94,117,126,],[-47,-48,51,-42,-45,-53,-43,-44,-46,-49,-50,-51,-47,-48,-43,51,51,-38,-39,-40,-41,-68,-52,-47,-69,]),'RPAREN':([23,25,26,28,32,37,38,39,40,41,46,54,55,68,69,73,74,79,81,83,84,85,86,87,94,114,115,117,118,125,126,],[-37,-42,-45,-53,-43,-44,-46,-49,-50,-51,80,-47,-48,-43,94,-35,-36,-6,104,-38,-39,-40,-41,-68,-52,130,131,-6,132,-7,-69,]),'AND':([26,28,32,37,38,39,40,41,54,55,87,94,126,],[-45,-53,-43,-44,-46,-49,-50,-51,-47,-48,106,-52,-69,]),'OR':([26,28,32,37,38,39,40,41,54,55,87,94,126,],[-45,-53,-43,-44,-46,-49,-50,-51,-47,-48,107,-52,-69,]),'COMMA':([26,28,32,37,38,39,40,41,54,55,79,87,94,100,117,126,134,],[-45,-53,-43,-44,-46,-49,-50,-51,-47,-48,103,-68,-52,122,103,-69,138,]),'RCORCH':([26,28,32,37,38,39,40,41,54,55,87,94,99,100,126,133,],[-45,-53,-43,-44,-46,-49,-50,-51,-47,-48,-68,-52,121,-57,-69,-58,]),'RBRACE':([26,28,32,37,38,39,40,41,54,55,87,94,101,126,134,140,],[-45,-53,-43,-44,-46,-49,-50,-51,-47,-48,-68,-52,123,-69,-61,-62,]),'GETS':([45,],[76,]),'LCORCH':([45,],[77,]),'LBRACE':([45,],[78,]),'IN':([67,],[91,]),'RANGE_INCL':([68,129,],[92,92,]),'RANGE_EXCL':([68,],[93,]),'DOT':([76,],[98,]),'COLON':([102,],[124,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'sentences':([0,3,],[2,42,]),'sentence':([0,3,64,66,70,71,89,109,112,132,],[3,3,89,89,89,89,89,89,89,89,]),'assignment':([0,3,64,66,70,71,89,109,112,132,],[4,4,4,4,4,4,4,4,4,4,]),'expression':([0,3,31,45,47,56,64,66,70,71,89,96,109,112,132,],[5,5,69,75,82,69,5,5,5,5,5,69,5,5,5,]),'print':([0,3,64,66,70,71,89,109,112,132,],[6,6,6,6,6,6,6,6,6,6,]),'input':([0,3,64,66,70,71,89,109,112,132,],[7,7,7,7,7,7,7,7,7,7,]),'condition':([0,3,64,66,70,71,89,109,112,132,],[8,8,8,8,8,8,8,8,8,8,]),'while_loop':([0,3,64,66,70,71,89,109,112,132,],[9,9,9,9,9,9,9,9,9,9,]),'for_loop':([0,3,64,66,70,71,89,109,112,132,],[10,10,10,10,10,10,10,10,10,10,]),'array':([0,3,64,66,70,71,89,109,112,132,],[11,11,11,11,11,11,11,11,11,11,]),'range_incl':([0,3,64,66,70,71,89,91,109,112,132,],[12,12,12,12,12,12,12,112,12,12,12,]),'range_excl':([0,3,64,66,70,71,89,109,112,132,],[13,13,13,13,13,13,13,13,13,13,]),'hash':([0,3,64,66,70,71,89,109,112,132,],[14,14,14,14,14,14,14,14,14,14,]),'function':([0,3,64,66,70,71,89,109,112,132,],[15,15,15,15,15,15,15,15,15,15,]),'class_def':([0,3,64,66,70,71,89,109,112,132,],[16,16,16,16,16,16,16,16,16,16,]),'return_stmt':([0,3,64,66,70,71,89,109,112,132,],[17,17,17,17,17,17,17,17,17,17,]),'break_stmt':([0,3,64,66,70,71,89,109,112,132,],[18,18,18,18,18,18,18,18,18,18,]),'function_call_empty':([0,3,64,66,70,71,89,109,112,132,],[19,19,19,19,19,19,19,19,19,19,]),'function_call_args':([0,3,64,66,70,71,89,109,112,132,],[20,20,20,20,20,20,20,20,20,20,]),'term':([0,3,31,43,44,45,47,56,64,66,70,71,89,96,109,112,132,],[23,23,23,73,74,23,23,23,23,23,23,23,23,23,23,23,23,]),'factor':([0,3,24,27,29,31,35,43,44,45,47,48,49,50,51,56,57,64,66,70,71,77,89,96,105,109,112,122,124,132,],[25,25,52,65,65,25,72,25,25,25,25,83,84,85,86,25,87,25,25,25,25,100,25,25,65,25,25,100,134,25,]),'logic_expression':([0,3,24,27,29,31,35,43,44,45,47,48,49,50,51,56,57,64,66,70,71,77,89,96,105,109,112,122,124,132,],[28,28,28,64,66,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,126,28,28,28,28,28,]),'logic_op':([25,52,65,72,83,84,85,86,87,100,134,],[57,57,57,57,57,57,57,57,57,57,57,]),'args':([46,96,103,],[81,118,125,]),'body':([64,66,70,71,89,109,112,132,],[88,90,95,97,110,127,128,137,]),'elements':([77,122,],[99,133,]),'hash_pairs':([78,138,],[101,140,]),'logic_connector':([87,],[105,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> sentences','start',1,'p_start','yacc.py',10),
  ('sentences -> sentence','sentences',1,'p_sentences','yacc.py',13),
  ('sentences -> sentence sentences','sentences',2,'p_sentences','yacc.py',14),
  ('function -> DEF ID body END','function',4,'p_function','yacc.py',19),
  ('function -> DEF ID LPAREN args RPAREN body END','function',7,'p_function','yacc.py',20),
  ('args -> ID','args',1,'p_args','yacc.py',25),
  ('args -> ID COMMA args','args',3,'p_args','yacc.py',26),
  ('body -> sentence','body',1,'p_body','yacc.py',29),
  ('body -> sentence body','body',2,'p_body','yacc.py',30),
  ('print -> PUTS factor','print',2,'p_print','yacc.py',33),
  ('class_def -> CLASS ID body END','class_def',4,'p_class_def','yacc.py',37),
  ('sentence -> assignment','sentence',1,'p_sentence','yacc.py',41),
  ('sentence -> expression','sentence',1,'p_sentence','yacc.py',42),
  ('sentence -> print','sentence',1,'p_sentence','yacc.py',43),
  ('sentence -> input','sentence',1,'p_sentence','yacc.py',44),
  ('sentence -> condition','sentence',1,'p_sentence','yacc.py',45),
  ('sentence -> while_loop','sentence',1,'p_sentence','yacc.py',46),
  ('sentence -> for_loop','sentence',1,'p_sentence','yacc.py',47),
  ('sentence -> array','sentence',1,'p_sentence','yacc.py',48),
  ('sentence -> range_incl','sentence',1,'p_sentence','yacc.py',49),
  ('sentence -> range_excl','sentence',1,'p_sentence','yacc.py',50),
  ('sentence -> hash','sentence',1,'p_sentence','yacc.py',51),
  ('sentence -> function','sentence',1,'p_sentence','yacc.py',52),
  ('sentence -> class_def','sentence',1,'p_sentence','yacc.py',53),
  ('sentence -> return_stmt','sentence',1,'p_sentence','yacc.py',54),
  ('sentence -> break_stmt','sentence',1,'p_sentence','yacc.py',55),
  ('sentence -> function_call_empty','sentence',1,'p_sentence','yacc.py',56),
  ('sentence -> function_call_args','sentence',1,'p_sentence','yacc.py',57),
  ('return_stmt -> RETURN factor','return_stmt',2,'p_return_stmt','yacc.py',60),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','yacc.py',63),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','yacc.py',67),
  ('assignment -> VAR_INST ASSIGN expression','assignment',3,'p_assignment','yacc.py',68),
  ('input -> PUTS STRING','input',2,'p_input','yacc.py',72),
  ('input -> ID ASSIGN GETS DOT ID','input',5,'p_input','yacc.py',73),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','yacc.py',78),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','yacc.py',82),
  ('expression -> term','expression',1,'p_expression_term','yacc.py',86),
  ('term -> term TIMES factor','term',3,'p_term_times','yacc.py',90),
  ('term -> term DIVIDE factor','term',3,'p_term_div','yacc.py',94),
  ('term -> term EXPONENT factor','term',3,'p_term_exponent','yacc.py',98),
  ('term -> term MODULE factor','term',3,'p_term_module','yacc.py',102),
  ('term -> factor','term',1,'p_term_factor','yacc.py',106),
  ('factor -> INTEGER','factor',1,'p_factor_valor','yacc.py',111),
  ('factor -> FLOAT','factor',1,'p_factor_valor','yacc.py',112),
  ('factor -> STRING','factor',1,'p_factor_valor','yacc.py',113),
  ('factor -> BOOLEAN','factor',1,'p_factor_valor','yacc.py',114),
  ('factor -> ID','factor',1,'p_factor_valor','yacc.py',115),
  ('factor -> VAR_INST','factor',1,'p_factor_valor','yacc.py',116),
  ('factor -> TRUE','factor',1,'p_factor_valor','yacc.py',117),
  ('factor -> FALSE','factor',1,'p_factor_valor','yacc.py',118),
  ('factor -> NIL','factor',1,'p_factor_valor','yacc.py',119),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_group','yacc.py',125),
  ('factor -> logic_expression','factor',1,'p_factor_logic_expression','yacc.py',130),
  ('function_call_empty -> ID LPAREN RPAREN','function_call_empty',3,'p_function_call_empty','yacc.py',135),
  ('function_call_args -> ID LPAREN args RPAREN','function_call_args',4,'p_function_call_args','yacc.py',140),
  ('array -> ID ASSIGN LCORCH elements RCORCH','array',5,'p_array','yacc.py',146),
  ('elements -> factor','elements',1,'p_elements','yacc.py',149),
  ('elements -> factor COMMA elements','elements',3,'p_elements','yacc.py',150),
  ('for_loop -> FOR ID IN range_incl body END','for_loop',6,'p_for_loop','yacc.py',154),
  ('hash -> ID ASSIGN LBRACE hash_pairs RBRACE','hash',5,'p_hash','yacc.py',166),
  ('hash_pairs -> STRING COLON factor','hash_pairs',3,'p_hash_pairs','yacc.py',169),
  ('hash_pairs -> STRING COLON factor COMMA hash_pairs','hash_pairs',5,'p_hash_pairs','yacc.py',170),
  ('while_loop -> WHILE logic_expression body END','while_loop',4,'p_while_loop','yacc.py',175),
  ('range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN','range_incl',5,'p_range_incl','yacc.py',180),
  ('range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN','range_excl',5,'p_range_excl','yacc.py',183),
  ('condition -> IF logic_expression body END','condition',4,'p_condition','yacc.py',189),
  ('condition -> IF logic_expression body ELSE body END','condition',6,'p_condition','yacc.py',190),
  ('logic_expression -> factor logic_op factor','logic_expression',3,'p_logic_expression','yacc.py',193),
  ('logic_expression -> factor logic_op factor logic_connector logic_expression','logic_expression',5,'p_logic_expression','yacc.py',194),
  ('logic_op -> EQUALS','logic_op',1,'p_logic_op','yacc.py',197),
  ('logic_op -> NEQUALS','logic_op',1,'p_logic_op','yacc.py',198),
  ('logic_op -> GREATEREQ','logic_op',1,'p_logic_op','yacc.py',199),
  ('logic_op -> LESSEQ','logic_op',1,'p_logic_op','yacc.py',200),
  ('logic_op -> GREATERT','logic_op',1,'p_logic_op','yacc.py',201),
  ('logic_op -> LESST','logic_op',1,'p_logic_op','yacc.py',202),
  ('logic_connector -> AND','logic_connector',1,'p_logic_connector','yacc.py',205),
  ('logic_connector -> OR','logic_connector',1,'p_logic_connector','yacc.py',206),
]

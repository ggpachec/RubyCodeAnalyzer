
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startAND AND_OP ASSIGN BOOLEAN BREAK CLASS COLON COMMA DEF DIVIDE DO DOT ELSE END EQUALS EXPONENT FALSE FLOAT FOR GETS GREATEREQ GREATERT ID IF IN INTEGER LBRACE LCORCH LESSEQ LESST LPAREN MINUS MODULE NEQUALS NEXT NIL NOT NOT_OP OR OR_OP PLUS PUTS RANGE_EXCL RANGE_INCL RBRACE RCORCH RETURN RPAREN SEMICOLON STRING THEN TIMES TRUE VAR_INST WHILE YIELDstart : sentencefunction : DEF ID body END\n                | DEF ID LPAREN args_multiple RPAREN body END\n                | DEF ID LPAREN args RPAREN body ENDargs_multiple : ID COMMA argsargs : IDbody : sentence\n            | sentence bodyprint : PUTS  factorclass_def : CLASS ID body ENDsentence : assignment\n        | expression\n        | print\n        | input\n        | condition\n        | while_loop\n        | for_loop\n        | array\n        | range_incl\n        | range_excl\n        | hash\n        | function\n        | class_defsentence : RETURN factorsentence : BREAKassignment : ID ASSIGN expressioninput : PUTS STRING\n            | ID ASSIGN GETS DOT IDexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : term EXPONENT factorterm : term MODULE factorterm : factorfactor : INTEGER\n              | FLOAT\n              | STRING\n              | BOOLEAN\n              | ID\n              | VAR_INST\n              | TRUE\n              | FALSE\n              | NILarray : ID ASSIGN LCORCH elements RCORCHelements : factor\n                | factor COMMA elementsfor_loop : FOR ID IN range_incl body ENDhash : ID ASSIGN LBRACE hash_pairs RBRACEhash_pairs : STRING COLON factor\n                  | STRING COLON factor COMMA hash_pairswhile_loop : WHILE logic_expression body ENDrange_incl : LPAREN INTEGER RANGE_INCL INTEGER RPARENrange_excl : LPAREN INTEGER RANGE_EXCL INTEGER RPARENcondition : IF logic_expression body END\n                 | IF logic_expression body ELSE body ENDlogic_expression : factor logic_op factor\n                        | factor logic_op factor logic_connector logic_expressionlogic_op : EQUALS\n                | NEQUALS\n                | GREATEREQ\n                | LESSEQ\n                | GREATERT\n                | LESSTlogic_connector : AND\n                       | OR'
    
_lr_action_items = {'RETURN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,22,27,30,31,32,33,34,35,38,39,45,46,47,49,52,53,54,55,56,60,61,62,63,65,85,86,88,89,90,94,98,99,100,102,110,111,113,114,117,118,119,125,126,],[16,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-36,-25,-41,-31,-39,-37,-38,-40,-42,-43,-44,-45,-24,-41,-9,-27,16,16,16,16,-29,-30,-26,-32,-33,-34,-35,16,-56,16,-58,-53,16,-2,-10,-28,-46,-50,-54,-55,16,16,-57,-59,-49,-3,-4,]),'BREAK':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,22,27,30,31,32,33,34,35,38,39,45,46,47,49,52,53,54,55,56,60,61,62,63,65,85,86,88,89,90,94,98,99,100,102,110,111,113,114,117,118,119,125,126,],[18,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-36,-25,-41,-31,-39,-37,-38,-40,-42,-43,-44,-45,-24,-41,-9,-27,18,18,18,18,-29,-30,-26,-32,-33,-34,-35,18,-56,18,-58,-53,18,-2,-10,-28,-46,-50,-54,-55,18,18,-57,-59,-49,-3,-4,]),'ID':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,53,54,55,56,58,60,61,62,63,65,66,67,68,69,70,71,72,78,80,85,86,88,89,90,94,98,99,100,101,102,103,105,106,107,110,111,112,113,114,117,118,119,125,126,],[19,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,39,-36,-25,-41,-31,39,-39,39,39,50,-37,52,53,-38,-40,-42,-43,-44,-45,39,39,-24,-41,39,39,39,39,39,-9,-27,19,19,19,19,-29,-30,-26,39,-32,-33,-34,-35,19,39,-60,-61,-62,-63,-64,-65,95,99,-56,19,-58,-53,19,-2,-10,-28,-46,39,-50,39,39,-66,-67,-54,-55,120,19,19,-57,-59,-49,-3,-4,]),'PUTS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,22,27,30,31,32,33,34,35,38,39,45,46,47,49,52,53,54,55,56,60,61,62,63,65,85,86,88,89,90,94,98,99,100,102,110,111,113,114,117,118,119,125,126,],[21,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-36,-25,-41,-31,-39,-37,-38,-40,-42,-43,-44,-45,-24,-41,-9,-27,21,21,21,21,-29,-30,-26,-32,-33,-34,-35,21,-56,21,-58,-53,21,-2,-10,-28,-46,-50,-54,-55,21,21,-57,-59,-49,-3,-4,]),'IF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,22,27,30,31,32,33,34,35,38,39,45,46,47,49,52,53,54,55,56,60,61,62,63,65,85,86,88,89,90,94,98,99,100,102,110,111,113,114,117,118,119,125,126,],[23,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-36,-25,-41,-31,-39,-37,-38,-40,-42,-43,-44,-45,-24,-41,-9,-27,23,23,23,23,-29,-30,-26,-32,-33,-34,-35,23,-56,23,-58,-53,23,-2,-10,-28,-46,-50,-54,-55,23,23,-57,-59,-49,-3,-4,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,22,27,30,31,32,33,34,35,38,39,45,46,47,49,52,53,54,55,56,60,61,62,63,65,85,86,88,89,90,94,98,99,100,102,110,111,113,114,117,118,119,125,126,],[24,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-36,-25,-41,-31,-39,-37,-38,-40,-42,-43,-44,-45,-24,-41,-9,-27,24,24,24,24,-29,-30,-26,-32,-33,-34,-35,24,-56,24,-58,-53,24,-2,-10,-28,-46,-50,-54,-55,24,24,-57,-59,-49,-3,-4,]),'FOR':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,22,27,30,31,32,33,34,35,38,39,45,46,47,49,52,53,54,55,56,60,61,62,63,65,85,86,88,89,90,94,98,99,100,102,110,111,113,114,117,118,119,125,126,],[25,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-36,-25,-41,-31,-39,-37,-38,-40,-42,-43,-44,-45,-24,-41,-9,-27,25,25,25,25,-29,-30,-26,-32,-33,-34,-35,25,-56,25,-58,-53,25,-2,-10,-28,-46,-50,-54,-55,25,25,-57,-59,-49,-3,-4,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,22,27,30,31,32,33,34,35,38,39,45,46,47,49,52,53,54,55,56,60,61,62,63,65,74,85,86,88,89,90,94,98,99,100,102,110,111,113,114,117,118,119,125,126,],[26,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-36,-25,-41,-31,-39,-37,-38,-40,-42,-43,-44,-45,-24,-41,-9,-27,26,26,78,26,-29,-30,-26,-32,-33,-34,-35,26,91,-56,26,-58,-53,26,-2,-10,-28,-46,-50,-54,-55,26,26,-57,-59,-49,-3,-4,]),'DEF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,22,27,30,31,32,33,34,35,38,39,45,46,47,49,52,53,54,55,56,60,61,62,63,65,85,86,88,89,90,94,98,99,100,102,110,111,113,114,117,118,119,125,126,],[28,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-36,-25,-41,-31,-39,-37,-38,-40,-42,-43,-44,-45,-24,-41,-9,-27,28,28,28,28,-29,-30,-26,-32,-33,-34,-35,28,-56,28,-58,-53,28,-2,-10,-28,-46,-50,-54,-55,28,28,-57,-59,-49,-3,-4,]),'CLASS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,22,27,30,31,32,33,34,35,38,39,45,46,47,49,52,53,54,55,56,60,61,62,63,65,85,86,88,89,90,94,98,99,100,102,110,111,113,114,117,118,119,125,126,],[29,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-36,-25,-41,-31,-39,-37,-38,-40,-42,-43,-44,-45,-24,-41,-9,-27,29,29,29,29,-29,-30,-26,-32,-33,-34,-35,29,-56,29,-58,-53,29,-2,-10,-28,-46,-50,-54,-55,29,29,-57,-59,-49,-3,-4,]),'INTEGER':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,53,54,55,56,58,60,61,62,63,65,66,67,68,69,70,71,72,75,76,78,85,86,88,89,90,91,94,98,99,100,101,102,103,105,106,107,110,111,113,114,117,118,119,125,126,],[27,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,27,-36,-25,-41,-31,27,-39,27,27,51,-37,-38,-40,-42,-43,-44,-45,27,27,-24,-41,27,27,27,27,27,-9,-27,27,27,27,27,-29,-30,-26,27,-32,-33,-34,-35,27,27,-60,-61,-62,-63,-64,-65,92,93,51,-56,27,-58,-53,27,109,-2,-10,-28,-46,27,-50,27,27,-66,-67,-54,-55,27,27,-57,-59,-49,-3,-4,]),'FLOAT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,53,54,55,56,58,60,61,62,63,65,66,67,68,69,70,71,72,85,86,88,89,90,94,98,99,100,101,102,103,105,106,107,110,111,113,114,117,118,119,125,126,],[30,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,30,-36,-25,-41,-31,30,-39,30,30,-37,-38,-40,-42,-43,-44,-45,30,30,-24,-41,30,30,30,30,30,-9,-27,30,30,30,30,-29,-30,-26,30,-32,-33,-34,-35,30,30,-60,-61,-62,-63,-64,-65,-56,30,-58,-53,30,-2,-10,-28,-46,30,-50,30,30,-66,-67,-54,-55,30,30,-57,-59,-49,-3,-4,]),'STRING':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,53,54,55,56,58,59,60,61,62,63,65,66,67,68,69,70,71,72,85,86,88,89,90,94,98,99,100,101,102,103,105,106,107,110,111,113,114,117,118,119,124,125,126,],[22,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,22,-36,-25,-41,-31,46,-39,22,22,-37,-38,-40,-42,-43,-44,-45,22,22,-24,-41,22,22,22,22,22,-9,-27,22,22,22,22,-29,-30,-26,22,84,-32,-33,-34,-35,22,22,-60,-61,-62,-63,-64,-65,-56,22,-58,-53,22,-2,-10,-28,-46,22,-50,22,22,-66,-67,-54,-55,22,22,-57,-59,-49,84,-3,-4,]),'BOOLEAN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,53,54,55,56,58,60,61,62,63,65,66,67,68,69,70,71,72,85,86,88,89,90,94,98,99,100,101,102,103,105,106,107,110,111,113,114,117,118,119,125,126,],[31,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,31,-36,-25,-41,-31,31,-39,31,31,-37,-38,-40,-42,-43,-44,-45,31,31,-24,-41,31,31,31,31,31,-9,-27,31,31,31,31,-29,-30,-26,31,-32,-33,-34,-35,31,31,-60,-61,-62,-63,-64,-65,-56,31,-58,-53,31,-2,-10,-28,-46,31,-50,31,31,-66,-67,-54,-55,31,31,-57,-59,-49,-3,-4,]),'VAR_INST':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,53,54,55,56,58,60,61,62,63,65,66,67,68,69,70,71,72,85,86,88,89,90,94,98,99,100,101,102,103,105,106,107,110,111,113,114,117,118,119,125,126,],[32,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,32,-36,-25,-41,-31,32,-39,32,32,-37,-38,-40,-42,-43,-44,-45,32,32,-24,-41,32,32,32,32,32,-9,-27,32,32,32,32,-29,-30,-26,32,-32,-33,-34,-35,32,32,-60,-61,-62,-63,-64,-65,-56,32,-58,-53,32,-2,-10,-28,-46,32,-50,32,32,-66,-67,-54,-55,32,32,-57,-59,-49,-3,-4,]),'TRUE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,53,54,55,56,58,60,61,62,63,65,66,67,68,69,70,71,72,85,86,88,89,90,94,98,99,100,101,102,103,105,106,107,110,111,113,114,117,118,119,125,126,],[33,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,33,-36,-25,-41,-31,33,-39,33,33,-37,-38,-40,-42,-43,-44,-45,33,33,-24,-41,33,33,33,33,33,-9,-27,33,33,33,33,-29,-30,-26,33,-32,-33,-34,-35,33,33,-60,-61,-62,-63,-64,-65,-56,33,-58,-53,33,-2,-10,-28,-46,33,-50,33,33,-66,-67,-54,-55,33,33,-57,-59,-49,-3,-4,]),'FALSE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,53,54,55,56,58,60,61,62,63,65,66,67,68,69,70,71,72,85,86,88,89,90,94,98,99,100,101,102,103,105,106,107,110,111,113,114,117,118,119,125,126,],[34,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,34,-36,-25,-41,-31,34,-39,34,34,-37,-38,-40,-42,-43,-44,-45,34,34,-24,-41,34,34,34,34,34,-9,-27,34,34,34,34,-29,-30,-26,34,-32,-33,-34,-35,34,34,-60,-61,-62,-63,-64,-65,-56,34,-58,-53,34,-2,-10,-28,-46,34,-50,34,34,-66,-67,-54,-55,34,34,-57,-59,-49,-3,-4,]),'NIL':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,53,54,55,56,58,60,61,62,63,65,66,67,68,69,70,71,72,85,86,88,89,90,94,98,99,100,101,102,103,105,106,107,110,111,113,114,117,118,119,125,126,],[35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,35,-36,-25,-41,-31,35,-39,35,35,-37,-38,-40,-42,-43,-44,-45,35,35,-24,-41,35,35,35,35,35,-9,-27,35,35,35,35,-29,-30,-26,35,-32,-33,-34,-35,35,35,-60,-61,-62,-63,-64,-65,-56,35,-58,-53,35,-2,-10,-28,-46,35,-50,35,35,-66,-67,-54,-55,35,35,-57,-59,-49,-3,-4,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,22,27,30,31,32,33,34,35,38,39,45,46,54,55,56,60,61,62,63,85,89,94,98,99,100,102,110,111,117,119,125,126,],[0,-1,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-36,-25,-41,-31,-39,-37,-38,-40,-42,-43,-44,-45,-24,-41,-9,-27,-29,-30,-26,-32,-33,-34,-35,-56,-53,-2,-10,-28,-46,-50,-54,-55,-57,-49,-3,-4,]),'END':([3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,22,27,30,31,32,33,34,35,38,39,45,46,54,55,56,60,61,62,63,64,65,73,77,79,85,87,89,94,98,99,100,102,104,108,110,111,117,119,122,123,125,126,],[-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-36,-25,-41,-31,-39,-37,-38,-40,-42,-43,-44,-45,-24,-41,-9,-27,-29,-30,-26,-32,-33,-34,-35,85,-7,89,94,98,-56,-8,-53,-2,-10,-28,-46,-50,117,119,-54,-55,-57,-49,125,126,-3,-4,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,22,27,30,31,32,33,34,35,38,39,45,46,54,55,56,60,61,62,63,64,65,85,87,89,94,98,99,100,102,110,111,117,119,125,126,],[-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-36,-25,-41,-31,-39,-37,-38,-40,-42,-43,-44,-45,-24,-41,-9,-27,-29,-30,-26,-32,-33,-34,-35,86,-7,-56,-8,-53,-2,-10,-28,-46,-50,-54,-55,-57,-49,-3,-4,]),'PLUS':([4,17,19,20,22,27,30,31,32,33,34,35,39,54,55,56,60,61,62,63,],[36,-36,-41,-31,-39,-37,-38,-40,-42,-43,-44,-45,-41,-29,-30,36,-32,-33,-34,-35,]),'MINUS':([4,17,19,20,22,27,30,31,32,33,34,35,39,54,55,56,60,61,62,63,],[37,-36,-41,-31,-39,-37,-38,-40,-42,-43,-44,-45,-41,-29,-30,37,-32,-33,-34,-35,]),'TIMES':([17,19,20,22,27,30,31,32,33,34,35,39,54,55,60,61,62,63,],[-36,-41,41,-39,-37,-38,-40,-42,-43,-44,-45,-41,41,41,-32,-33,-34,-35,]),'DIVIDE':([17,19,20,22,27,30,31,32,33,34,35,39,54,55,60,61,62,63,],[-36,-41,42,-39,-37,-38,-40,-42,-43,-44,-45,-41,42,42,-32,-33,-34,-35,]),'EXPONENT':([17,19,20,22,27,30,31,32,33,34,35,39,54,55,60,61,62,63,],[-36,-41,43,-39,-37,-38,-40,-42,-43,-44,-45,-41,43,43,-32,-33,-34,-35,]),'MODULE':([17,19,20,22,27,30,31,32,33,34,35,39,54,55,60,61,62,63,],[-36,-41,44,-39,-37,-38,-40,-42,-43,-44,-45,-41,44,44,-32,-33,-34,-35,]),'ASSIGN':([19,],[40,]),'EQUALS':([22,27,30,31,32,33,34,35,39,48,],[-39,-37,-38,-40,-42,-43,-44,-45,-41,67,]),'NEQUALS':([22,27,30,31,32,33,34,35,39,48,],[-39,-37,-38,-40,-42,-43,-44,-45,-41,68,]),'GREATEREQ':([22,27,30,31,32,33,34,35,39,48,],[-39,-37,-38,-40,-42,-43,-44,-45,-41,69,]),'LESSEQ':([22,27,30,31,32,33,34,35,39,48,],[-39,-37,-38,-40,-42,-43,-44,-45,-41,70,]),'GREATERT':([22,27,30,31,32,33,34,35,39,48,],[-39,-37,-38,-40,-42,-43,-44,-45,-41,71,]),'LESST':([22,27,30,31,32,33,34,35,39,48,],[-39,-37,-38,-40,-42,-43,-44,-45,-41,72,]),'COMMA':([22,27,30,31,32,33,34,35,39,82,95,116,],[-39,-37,-38,-40,-42,-43,-44,-45,-41,101,112,124,]),'RCORCH':([22,27,30,31,32,33,34,35,39,81,82,115,],[-39,-37,-38,-40,-42,-43,-44,-45,-41,100,-47,-48,]),'AND':([22,27,30,31,32,33,34,35,39,88,],[-39,-37,-38,-40,-42,-43,-44,-45,-41,106,]),'OR':([22,27,30,31,32,33,34,35,39,88,],[-39,-37,-38,-40,-42,-43,-44,-45,-41,107,]),'RBRACE':([22,27,30,31,32,33,34,35,39,83,116,127,],[-39,-37,-38,-40,-42,-43,-44,-45,-41,102,-51,-52,]),'GETS':([40,],[57,]),'LCORCH':([40,],[58,]),'LBRACE':([40,],[59,]),'IN':([50,],[74,]),'RANGE_INCL':([51,109,],[75,75,]),'RANGE_EXCL':([51,],[76,]),'DOT':([57,],[80,]),'COLON':([84,],[103,]),'RPAREN':([92,93,95,96,97,120,121,],[110,111,-6,113,114,-6,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'sentence':([0,47,49,52,53,65,86,90,113,114,],[2,65,65,65,65,65,65,65,65,65,]),'assignment':([0,47,49,52,53,65,86,90,113,114,],[3,3,3,3,3,3,3,3,3,3,]),'expression':([0,40,47,49,52,53,65,86,90,113,114,],[4,56,4,4,4,4,4,4,4,4,4,]),'print':([0,47,49,52,53,65,86,90,113,114,],[5,5,5,5,5,5,5,5,5,5,]),'input':([0,47,49,52,53,65,86,90,113,114,],[6,6,6,6,6,6,6,6,6,6,]),'condition':([0,47,49,52,53,65,86,90,113,114,],[7,7,7,7,7,7,7,7,7,7,]),'while_loop':([0,47,49,52,53,65,86,90,113,114,],[8,8,8,8,8,8,8,8,8,8,]),'for_loop':([0,47,49,52,53,65,86,90,113,114,],[9,9,9,9,9,9,9,9,9,9,]),'array':([0,47,49,52,53,65,86,90,113,114,],[10,10,10,10,10,10,10,10,10,10,]),'range_incl':([0,47,49,52,53,65,74,86,90,113,114,],[11,11,11,11,11,11,90,11,11,11,11,]),'range_excl':([0,47,49,52,53,65,86,90,113,114,],[12,12,12,12,12,12,12,12,12,12,]),'hash':([0,47,49,52,53,65,86,90,113,114,],[13,13,13,13,13,13,13,13,13,13,]),'function':([0,47,49,52,53,65,86,90,113,114,],[14,14,14,14,14,14,14,14,14,14,]),'class_def':([0,47,49,52,53,65,86,90,113,114,],[15,15,15,15,15,15,15,15,15,15,]),'factor':([0,16,21,23,24,36,37,40,41,42,43,44,47,49,52,53,58,65,66,86,90,101,103,105,113,114,],[17,38,45,48,48,17,17,17,60,61,62,63,17,17,17,17,82,17,88,17,17,82,116,48,17,17,]),'term':([0,36,37,40,47,49,52,53,65,86,90,113,114,],[20,54,55,20,20,20,20,20,20,20,20,20,20,]),'logic_expression':([23,24,105,],[47,49,118,]),'body':([47,49,52,53,65,86,90,113,114,],[64,73,77,79,87,104,108,122,123,]),'logic_op':([48,],[66,]),'elements':([58,101,],[81,115,]),'hash_pairs':([59,124,],[83,127,]),'args_multiple':([78,],[96,]),'args':([78,112,],[97,121,]),'logic_connector':([88,],[105,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> sentence','start',1,'p_start','yacc.py',10),
  ('function -> DEF ID body END','function',4,'p_function','yacc.py',14),
  ('function -> DEF ID LPAREN args_multiple RPAREN body END','function',7,'p_function','yacc.py',15),
  ('function -> DEF ID LPAREN args RPAREN body END','function',7,'p_function','yacc.py',16),
  ('args_multiple -> ID COMMA args','args_multiple',3,'p_args_multiple','yacc.py',19),
  ('args -> ID','args',1,'p_args','yacc.py',25),
  ('body -> sentence','body',1,'p_body','yacc.py',28),
  ('body -> sentence body','body',2,'p_body','yacc.py',29),
  ('print -> PUTS factor','print',2,'p_print','yacc.py',32),
  ('class_def -> CLASS ID body END','class_def',4,'p_class_def','yacc.py',36),
  ('sentence -> assignment','sentence',1,'p_sentence','yacc.py',40),
  ('sentence -> expression','sentence',1,'p_sentence','yacc.py',41),
  ('sentence -> print','sentence',1,'p_sentence','yacc.py',42),
  ('sentence -> input','sentence',1,'p_sentence','yacc.py',43),
  ('sentence -> condition','sentence',1,'p_sentence','yacc.py',44),
  ('sentence -> while_loop','sentence',1,'p_sentence','yacc.py',45),
  ('sentence -> for_loop','sentence',1,'p_sentence','yacc.py',46),
  ('sentence -> array','sentence',1,'p_sentence','yacc.py',47),
  ('sentence -> range_incl','sentence',1,'p_sentence','yacc.py',48),
  ('sentence -> range_excl','sentence',1,'p_sentence','yacc.py',49),
  ('sentence -> hash','sentence',1,'p_sentence','yacc.py',50),
  ('sentence -> function','sentence',1,'p_sentence','yacc.py',51),
  ('sentence -> class_def','sentence',1,'p_sentence','yacc.py',52),
  ('sentence -> RETURN factor','sentence',2,'p_return','yacc.py',55),
  ('sentence -> BREAK','sentence',1,'p_break','yacc.py',58),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','yacc.py',62),
  ('input -> PUTS STRING','input',2,'p_input','yacc.py',66),
  ('input -> ID ASSIGN GETS DOT ID','input',5,'p_input','yacc.py',67),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','yacc.py',72),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','yacc.py',76),
  ('expression -> term','expression',1,'p_expression_term','yacc.py',80),
  ('term -> term TIMES factor','term',3,'p_term_times','yacc.py',84),
  ('term -> term DIVIDE factor','term',3,'p_term_div','yacc.py',88),
  ('term -> term EXPONENT factor','term',3,'p_term_exponent','yacc.py',92),
  ('term -> term MODULE factor','term',3,'p_term_module','yacc.py',96),
  ('term -> factor','term',1,'p_term_factor','yacc.py',100),
  ('factor -> INTEGER','factor',1,'p_factor_valor','yacc.py',105),
  ('factor -> FLOAT','factor',1,'p_factor_valor','yacc.py',106),
  ('factor -> STRING','factor',1,'p_factor_valor','yacc.py',107),
  ('factor -> BOOLEAN','factor',1,'p_factor_valor','yacc.py',108),
  ('factor -> ID','factor',1,'p_factor_valor','yacc.py',109),
  ('factor -> VAR_INST','factor',1,'p_factor_valor','yacc.py',110),
  ('factor -> TRUE','factor',1,'p_factor_valor','yacc.py',111),
  ('factor -> FALSE','factor',1,'p_factor_valor','yacc.py',112),
  ('factor -> NIL','factor',1,'p_factor_valor','yacc.py',113),
  ('array -> ID ASSIGN LCORCH elements RCORCH','array',5,'p_array','yacc.py',118),
  ('elements -> factor','elements',1,'p_elements','yacc.py',121),
  ('elements -> factor COMMA elements','elements',3,'p_elements','yacc.py',122),
  ('for_loop -> FOR ID IN range_incl body END','for_loop',6,'p_for_loop','yacc.py',126),
  ('hash -> ID ASSIGN LBRACE hash_pairs RBRACE','hash',5,'p_hash','yacc.py',138),
  ('hash_pairs -> STRING COLON factor','hash_pairs',3,'p_hash_pairs','yacc.py',141),
  ('hash_pairs -> STRING COLON factor COMMA hash_pairs','hash_pairs',5,'p_hash_pairs','yacc.py',142),
  ('while_loop -> WHILE logic_expression body END','while_loop',4,'p_while_loop','yacc.py',147),
  ('range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN','range_incl',5,'p_range_incl','yacc.py',152),
  ('range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN','range_excl',5,'p_range_excl','yacc.py',155),
  ('condition -> IF logic_expression body END','condition',4,'p_condition','yacc.py',161),
  ('condition -> IF logic_expression body ELSE body END','condition',6,'p_condition','yacc.py',162),
  ('logic_expression -> factor logic_op factor','logic_expression',3,'p_logic_expression','yacc.py',165),
  ('logic_expression -> factor logic_op factor logic_connector logic_expression','logic_expression',5,'p_logic_expression','yacc.py',166),
  ('logic_op -> EQUALS','logic_op',1,'p_logic_op','yacc.py',169),
  ('logic_op -> NEQUALS','logic_op',1,'p_logic_op','yacc.py',170),
  ('logic_op -> GREATEREQ','logic_op',1,'p_logic_op','yacc.py',171),
  ('logic_op -> LESSEQ','logic_op',1,'p_logic_op','yacc.py',172),
  ('logic_op -> GREATERT','logic_op',1,'p_logic_op','yacc.py',173),
  ('logic_op -> LESST','logic_op',1,'p_logic_op','yacc.py',174),
  ('logic_connector -> AND','logic_connector',1,'p_logic_connector','yacc.py',177),
  ('logic_connector -> OR','logic_connector',1,'p_logic_connector','yacc.py',178),
]


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startAND AND_OP ASSIGN BOOLEAN BREAK CLASS COLON COMMA DEF DIVIDE DO DOT ELSE END EQUALS EXPONENT FALSE FLOAT FOR GETS GREATEREQ GREATERT ID IF IN INTEGER LBRACE LCORCH LESSEQ LESST LPAREN MINUS MODULE NEQUALS NEXT NIL NOT NOT_OP OR OR_OP PLUS PUTS RANGE_EXCL RANGE_INCL RBRACE RCORCH RETURN RPAREN SEMICOLON STRING THEN TIMES TO_F TO_I TO_S TRUE VAR_INST WHILE YIELDstart : sentencessentences : sentence\n| sentence sentencesfunction : DEF ID body END\n| DEF ID LPAREN args RPAREN body ENDargs : ID\n| ID COMMA argsbody : body sentence\n| sentenceprint : PUTS factor\n| PUTS STRINGclass_def : CLASS ID body ENDsentence : assignment\n| expression\n| print\n| input\n| condition\n| while_loop\n| for_loop\n| array\n| range_incl\n| range_excl\n| hash\n| function\n| class_def\n| return_stmt\n| break_stmt\n| function_call_empty\n| function_call_args\n| methodsmethods : ID DOT IDreturn_stmt : RETURN factorbreak_stmt : BREAKassignment : ID ASSIGN expression\n| VAR_INST ASSIGN expressioninput : PUTS STRING\n| ID ASSIGN GETS method_chainmethod_chain : DOT ID\n| method_chain DOT IDexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : term EXPONENT factorterm : term MODULE factorterm : factorfactor : INTEGER\n| FLOAT\n| STRING\n| BOOLEAN\n| ID\n| VAR_INST\n| TRUE\n| FALSE\n| NILfactor : LPAREN expression RPARENfactor : logic_expressionfactor : range_inclfactor : range_exclfunction_call_empty : ID LPAREN RPARENfunction_call_args : ID LPAREN args RPARENarray : ID ASSIGN LCORCH elements RCORCHelements : factor\n| factor COMMA elementsfor_loop : FOR ID IN range_incl body ENDhash : ID ASSIGN LBRACE hash_pairs RBRACEhash_pairs : STRING COLON factor\n| STRING COLON factor COMMA hash_pairswhile_loop : WHILE logic_expression body ENDrange_incl : LPAREN INTEGER RANGE_INCL INTEGER RPAREN\n| INTEGER RANGE_INCL INTEGERrange_excl : LPAREN INTEGER RANGE_EXCL INTEGER RPAREN\n| INTEGER RANGE_EXCL INTEGERcondition : IF logic_expression body END\n| IF logic_expression body ELSE body ENDlogic_expression : factor logic_op factorlogic_expression : factor logic_connector factorlogic_expression : expression logic_op expressionlogic_op : EQUALS\n| NEQUALS\n| GREATEREQ\n| LESSEQ\n| GREATERT\n| LESSTlogic_connector : AND\n| OR'
    
_lr_action_items = {'ID':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,76,82,83,84,85,86,87,88,90,93,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,113,114,115,116,121,122,123,124,125,126,127,132,135,136,137,138,139,140,141,143,144,146,147,148,149,152,153,155,158,],[22,22,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,64,-47,-50,64,-58,64,77,64,-48,82,83,64,-33,-49,-51,-54,-55,-56,64,64,64,-80,-81,-82,-83,-84,-85,64,92,95,64,64,64,64,64,-10,-11,-48,-52,-53,64,-59,-60,64,64,-86,-87,22,22,22,22,-32,-40,-41,-79,-34,64,-61,-31,-35,-43,-44,-45,-46,-77,-78,22,-9,22,-57,-72,-74,22,133,22,-37,137,92,-62,-75,22,-8,-70,22,-4,-12,149,-38,-63,64,-67,64,22,22,-71,-73,22,-39,-76,-66,22,-5,]),'VAR_INST':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,76,82,83,84,85,86,87,88,90,93,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,113,114,115,122,123,124,125,126,127,132,135,137,138,139,140,141,143,144,146,147,148,149,152,153,155,158,],[23,23,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,65,-47,-50,65,-58,65,65,-48,65,-33,-49,-51,-54,-55,-56,65,65,65,-80,-81,-82,-83,-84,-85,65,65,65,65,65,65,-10,-11,-48,-52,-53,65,-59,-60,65,65,-86,-87,23,23,23,23,-32,-40,-41,-79,-34,65,-61,-31,-35,-43,-44,-45,-46,-77,-78,23,-9,23,-57,-72,-74,23,65,23,-37,-62,-75,23,-8,-70,23,-4,-12,-38,-63,65,-67,65,23,23,-71,-73,23,-39,-76,-66,23,-5,]),'PUTS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,33,37,38,39,40,41,42,61,62,63,64,65,68,69,74,76,82,83,84,85,86,87,88,93,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,114,115,122,123,124,125,126,127,132,135,137,138,140,143,144,146,147,148,149,152,153,155,158,],[25,25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,-47,-50,-58,-48,-33,-49,-51,-54,-55,-56,-10,-11,-48,-52,-53,-59,-60,25,25,25,25,-32,-40,-41,-79,-34,-61,-31,-35,-43,-44,-45,-46,-77,-78,25,-9,25,-57,-72,-74,25,25,-37,-62,-75,25,-8,-70,25,-4,-12,-38,-63,-67,25,25,-71,-73,25,-39,-76,-66,25,-5,]),'IF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,33,37,38,39,40,41,42,61,62,63,64,65,68,69,74,76,82,83,84,85,86,87,88,93,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,114,115,122,123,124,125,126,127,132,135,137,138,140,143,144,146,147,148,149,152,153,155,158,],[28,28,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,-47,-50,-58,-48,-33,-49,-51,-54,-55,-56,-10,-11,-48,-52,-53,-59,-60,28,28,28,28,-32,-40,-41,-79,-34,-61,-31,-35,-43,-44,-45,-46,-77,-78,28,-9,28,-57,-72,-74,28,28,-37,-62,-75,28,-8,-70,28,-4,-12,-38,-63,-67,28,28,-71,-73,28,-39,-76,-66,28,-5,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,33,37,38,39,40,41,42,61,62,63,64,65,68,69,74,76,82,83,84,85,86,87,88,93,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,114,115,122,123,124,125,126,127,132,135,137,138,140,143,144,146,147,148,149,152,153,155,158,],[30,30,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,-47,-50,-58,-48,-33,-49,-51,-54,-55,-56,-10,-11,-48,-52,-53,-59,-60,30,30,30,30,-32,-40,-41,-79,-34,-61,-31,-35,-43,-44,-45,-46,-77,-78,30,-9,30,-57,-72,-74,30,30,-37,-62,-75,30,-8,-70,30,-4,-12,-38,-63,-67,30,30,-71,-73,30,-39,-76,-66,30,-5,]),'FOR':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,33,37,38,39,40,41,42,61,62,63,64,65,68,69,74,76,82,83,84,85,86,87,88,93,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,114,115,122,123,124,125,126,127,132,135,137,138,140,143,144,146,147,148,149,152,153,155,158,],[31,31,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,-47,-50,-58,-48,-33,-49,-51,-54,-55,-56,-10,-11,-48,-52,-53,-59,-60,31,31,31,31,-32,-40,-41,-79,-34,-61,-31,-35,-43,-44,-45,-46,-77,-78,31,-9,31,-57,-72,-74,31,31,-37,-62,-75,31,-8,-70,31,-4,-12,-38,-63,-67,31,31,-71,-73,31,-39,-76,-66,31,-5,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,76,82,83,84,85,86,87,88,90,93,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,112,113,114,115,122,123,124,125,126,127,132,135,137,138,139,140,141,143,144,146,147,148,149,152,153,155,158,],[32,32,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,54,-53,-42,66,-47,-50,66,-58,66,66,-48,66,-33,-49,-51,-54,-55,-56,66,66,66,-80,-81,-82,-83,-84,-85,66,66,66,66,66,66,-10,-11,-48,-52,-53,66,-59,-60,66,66,-86,-87,32,32,113,32,-32,-40,-41,-79,-34,66,-61,-31,-35,-43,-44,-45,-46,-77,-78,32,-9,32,128,-57,-72,-74,32,66,32,-37,-62,-75,32,-8,-70,32,-4,-12,-38,-63,66,-67,66,32,32,-71,-73,32,-39,-76,-66,32,-5,]),'INTEGER':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,76,80,81,82,83,84,85,86,87,88,90,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,122,123,124,125,126,127,128,132,135,137,138,139,140,141,143,144,146,147,148,149,152,153,154,155,158,],[33,33,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,63,-47,-50,63,-58,63,78,-48,63,-33,-49,-51,-54,-55,-56,63,63,63,-80,-81,-82,-83,-84,-85,63,63,63,63,63,63,-10,-11,-48,-52,-53,78,-59,-60,63,63,-86,-87,33,33,110,111,33,33,-32,-40,-41,-79,-34,63,-61,-31,-35,-43,-44,-45,-46,-77,-78,33,-9,33,129,130,131,-57,-72,-74,33,78,33,-37,-62,-75,33,-8,-70,33,145,-4,-12,-38,-63,63,-67,63,33,33,-71,-73,33,-39,-76,-66,157,33,-5,]),'DEF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,33,37,38,39,40,41,42,61,62,63,64,65,68,69,74,76,82,83,84,85,86,87,88,93,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,114,115,122,123,124,125,126,127,132,135,137,138,140,143,144,146,147,148,149,152,153,155,158,],[34,34,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,-47,-50,-58,-48,-33,-49,-51,-54,-55,-56,-10,-11,-48,-52,-53,-59,-60,34,34,34,34,-32,-40,-41,-79,-34,-61,-31,-35,-43,-44,-45,-46,-77,-78,34,-9,34,-57,-72,-74,34,34,-37,-62,-75,34,-8,-70,34,-4,-12,-38,-63,-67,34,34,-71,-73,34,-39,-76,-66,34,-5,]),'CLASS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,33,37,38,39,40,41,42,61,62,63,64,65,68,69,74,76,82,83,84,85,86,87,88,93,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,114,115,122,123,124,125,126,127,132,135,137,138,140,143,144,146,147,148,149,152,153,155,158,],[35,35,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,-47,-50,-58,-48,-33,-49,-51,-54,-55,-56,-10,-11,-48,-52,-53,-59,-60,35,35,35,35,-32,-40,-41,-79,-34,-61,-31,-35,-43,-44,-45,-46,-77,-78,35,-9,35,-57,-72,-74,35,35,-37,-62,-75,35,-8,-70,35,-4,-12,-38,-63,-67,35,35,-71,-73,35,-39,-76,-66,35,-5,]),'RETURN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,33,37,38,39,40,41,42,61,62,63,64,65,68,69,74,76,82,83,84,85,86,87,88,93,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,114,115,122,123,124,125,126,127,132,135,137,138,140,143,144,146,147,148,149,152,153,155,158,],[36,36,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,-47,-50,-58,-48,-33,-49,-51,-54,-55,-56,-10,-11,-48,-52,-53,-59,-60,36,36,36,36,-32,-40,-41,-79,-34,-61,-31,-35,-43,-44,-45,-46,-77,-78,36,-9,36,-57,-72,-74,36,36,-37,-62,-75,36,-8,-70,36,-4,-12,-38,-63,-67,36,36,-71,-73,36,-39,-76,-66,36,-5,]),'BREAK':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,33,37,38,39,40,41,42,61,62,63,64,65,68,69,74,76,82,83,84,85,86,87,88,93,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,114,115,122,123,124,125,126,127,132,135,137,138,140,143,144,146,147,148,149,152,153,155,158,],[37,37,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,-47,-50,-58,-48,-33,-49,-51,-54,-55,-56,-10,-11,-48,-52,-53,-59,-60,37,37,37,37,-32,-40,-41,-79,-34,-61,-31,-35,-43,-44,-45,-46,-77,-78,37,-9,37,-57,-72,-74,37,37,-37,-62,-75,37,-8,-70,37,-4,-12,-38,-63,-67,37,37,-71,-73,37,-39,-76,-66,37,-5,]),'FLOAT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,76,82,83,84,85,86,87,88,90,93,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,113,114,115,122,123,124,125,126,127,132,135,137,138,139,140,141,143,144,146,147,148,149,152,153,155,158,],[38,38,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,38,-47,-50,38,-58,38,38,-48,38,-33,-49,-51,-54,-55,-56,38,38,38,-80,-81,-82,-83,-84,-85,38,38,38,38,38,38,-10,-11,-48,-52,-53,38,-59,-60,38,38,-86,-87,38,38,38,38,-32,-40,-41,-79,-34,38,-61,-31,-35,-43,-44,-45,-46,-77,-78,38,-9,38,-57,-72,-74,38,38,38,-37,-62,-75,38,-8,-70,38,-4,-12,-38,-63,38,-67,38,38,38,-71,-73,38,-39,-76,-66,38,-5,]),'STRING':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,76,82,83,84,85,86,87,88,90,91,93,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,113,114,115,122,123,124,125,126,127,132,135,137,138,139,140,141,143,144,146,147,148,149,152,153,155,156,158,],[27,27,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,62,-47,-50,27,-58,27,27,-48,27,-33,-49,-51,-54,-55,-56,27,27,27,-80,-81,-82,-83,-84,-85,27,27,27,27,27,27,-10,-11,-48,-52,-53,27,-59,-60,27,27,-86,-87,27,27,27,27,-32,-40,-41,-79,-34,27,120,-61,-31,-35,-43,-44,-45,-46,-77,-78,27,-9,27,-57,-72,-74,27,27,27,-37,-62,-75,27,-8,-70,27,-4,-12,-38,-63,27,-67,27,27,27,-71,-73,27,-39,-76,-66,27,120,-5,]),'BOOLEAN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,76,82,83,84,85,86,87,88,90,93,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,113,114,115,122,123,124,125,126,127,132,135,137,138,139,140,141,143,144,146,147,148,149,152,153,155,158,],[39,39,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,39,-47,-50,39,-58,39,39,-48,39,-33,-49,-51,-54,-55,-56,39,39,39,-80,-81,-82,-83,-84,-85,39,39,39,39,39,39,-10,-11,-48,-52,-53,39,-59,-60,39,39,-86,-87,39,39,39,39,-32,-40,-41,-79,-34,39,-61,-31,-35,-43,-44,-45,-46,-77,-78,39,-9,39,-57,-72,-74,39,39,39,-37,-62,-75,39,-8,-70,39,-4,-12,-38,-63,39,-67,39,39,39,-71,-73,39,-39,-76,-66,39,-5,]),'TRUE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,76,82,83,84,85,86,87,88,90,93,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,113,114,115,122,123,124,125,126,127,132,135,137,138,139,140,141,143,144,146,147,148,149,152,153,155,158,],[40,40,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,40,-47,-50,40,-58,40,40,-48,40,-33,-49,-51,-54,-55,-56,40,40,40,-80,-81,-82,-83,-84,-85,40,40,40,40,40,40,-10,-11,-48,-52,-53,40,-59,-60,40,40,-86,-87,40,40,40,40,-32,-40,-41,-79,-34,40,-61,-31,-35,-43,-44,-45,-46,-77,-78,40,-9,40,-57,-72,-74,40,40,40,-37,-62,-75,40,-8,-70,40,-4,-12,-38,-63,40,-67,40,40,40,-71,-73,40,-39,-76,-66,40,-5,]),'FALSE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,76,82,83,84,85,86,87,88,90,93,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,113,114,115,122,123,124,125,126,127,132,135,137,138,139,140,141,143,144,146,147,148,149,152,153,155,158,],[41,41,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,41,-47,-50,41,-58,41,41,-48,41,-33,-49,-51,-54,-55,-56,41,41,41,-80,-81,-82,-83,-84,-85,41,41,41,41,41,41,-10,-11,-48,-52,-53,41,-59,-60,41,41,-86,-87,41,41,41,41,-32,-40,-41,-79,-34,41,-61,-31,-35,-43,-44,-45,-46,-77,-78,41,-9,41,-57,-72,-74,41,41,41,-37,-62,-75,41,-8,-70,41,-4,-12,-38,-63,41,-67,41,41,41,-71,-73,41,-39,-76,-66,41,-5,]),'NIL':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,76,82,83,84,85,86,87,88,90,93,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,113,114,115,122,123,124,125,126,127,132,135,137,138,139,140,141,143,144,146,147,148,149,152,153,155,158,],[42,42,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,42,-47,-50,42,-58,42,42,-48,42,-33,-49,-51,-54,-55,-56,42,42,42,-80,-81,-82,-83,-84,-85,42,42,42,42,42,42,-10,-11,-48,-52,-53,42,-59,-60,42,42,-86,-87,42,42,42,42,-32,-40,-41,-79,-34,42,-61,-31,-35,-43,-44,-45,-46,-77,-78,42,-9,42,-57,-72,-74,42,42,42,-37,-62,-75,42,-8,-70,42,-4,-12,-38,-63,42,-67,42,42,42,-71,-73,42,-39,-76,-66,42,-5,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,33,37,38,39,40,41,42,43,61,62,63,64,65,68,69,84,85,86,87,88,93,95,96,97,98,99,100,101,102,109,110,111,115,122,123,126,132,135,137,138,140,146,147,149,152,153,158,],[0,-1,-2,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,-47,-50,-58,-48,-33,-49,-51,-54,-55,-56,-3,-10,-11,-48,-52,-53,-59,-60,-32,-40,-41,-79,-34,-61,-31,-35,-43,-44,-45,-46,-77,-78,-57,-72,-74,-37,-62,-75,-70,-4,-12,-38,-63,-67,-71,-73,-39,-76,-66,-5,]),'END':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,33,37,38,39,40,41,42,61,62,63,64,65,68,69,84,85,86,87,88,93,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,114,115,122,123,125,126,132,135,137,138,140,143,144,146,147,149,152,153,155,158,],[-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,-47,-50,-58,-48,-33,-49,-51,-54,-55,-56,-10,-11,-48,-52,-53,-59,-60,-32,-40,-41,-79,-34,-61,-31,-35,-43,-44,-45,-46,-77,-78,123,-9,126,-57,-72,-74,132,135,-37,-62,-75,-8,-70,-4,-12,-38,-63,-67,152,153,-71,-73,-39,-76,-66,158,-5,]),'ELSE':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,33,37,38,39,40,41,42,61,62,63,64,65,68,69,84,85,86,87,88,93,95,96,97,98,99,100,101,102,103,104,109,110,111,115,122,123,125,126,132,135,137,138,140,146,147,149,152,153,158,],[-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,-42,-47,-50,-58,-48,-33,-49,-51,-54,-55,-56,-10,-11,-48,-52,-53,-59,-60,-32,-40,-41,-79,-34,-61,-31,-35,-43,-44,-45,-46,-77,-78,124,-9,-57,-72,-74,-37,-62,-75,-8,-70,-4,-12,-38,-63,-67,-71,-73,-39,-76,-66,-5,]),'PLUS':([5,12,13,22,23,24,26,27,29,33,38,39,40,41,42,61,62,63,64,65,67,68,69,74,75,76,78,79,84,85,86,87,88,96,97,98,99,100,101,102,109,110,111,118,130,131,133,146,147,151,],[44,-59,-60,-52,-53,-42,-47,-50,-58,-48,-49,-51,-54,-55,-56,-47,-50,-48,-52,-53,44,-59,-60,-58,-47,-58,-48,44,-47,-40,-41,44,44,44,-43,-44,-45,-46,-47,-47,-57,-72,-74,-47,-72,-74,-52,-71,-73,-47,]),'MINUS':([5,12,13,22,23,24,26,27,29,33,38,39,40,41,42,61,62,63,64,65,67,68,69,74,75,76,78,79,84,85,86,87,88,96,97,98,99,100,101,102,109,110,111,118,130,131,133,146,147,151,],[45,-59,-60,-52,-53,-42,-47,-50,-58,-48,-49,-51,-54,-55,-56,-47,-50,-48,-52,-53,45,-59,-60,-58,-47,-58,-48,45,-47,-40,-41,45,45,45,-43,-44,-45,-46,-47,-47,-57,-72,-74,-47,-72,-74,-52,-71,-73,-47,]),'EQUALS':([5,12,13,22,23,24,26,27,29,33,38,39,40,41,42,61,62,63,64,65,67,68,69,74,75,76,78,79,84,85,86,87,88,96,97,98,99,100,101,102,109,110,111,118,130,131,133,146,147,151,],[47,-59,-60,-52,-53,-42,47,-50,-58,-48,-49,-51,-54,-55,-56,47,-50,-48,-52,-53,47,-59,-60,-58,47,-58,-48,47,47,-40,-41,47,47,47,47,47,47,47,47,47,-57,-72,-74,47,-72,-74,-52,-71,-73,47,]),'NEQUALS':([5,12,13,22,23,24,26,27,29,33,38,39,40,41,42,61,62,63,64,65,67,68,69,74,75,76,78,79,84,85,86,87,88,96,97,98,99,100,101,102,109,110,111,118,130,131,133,146,147,151,],[48,-59,-60,-52,-53,-42,48,-50,-58,-48,-49,-51,-54,-55,-56,48,-50,-48,-52,-53,48,-59,-60,-58,48,-58,-48,48,48,-40,-41,48,48,48,48,48,48,48,48,48,-57,-72,-74,48,-72,-74,-52,-71,-73,48,]),'GREATEREQ':([5,12,13,22,23,24,26,27,29,33,38,39,40,41,42,61,62,63,64,65,67,68,69,74,75,76,78,79,84,85,86,87,88,96,97,98,99,100,101,102,109,110,111,118,130,131,133,146,147,151,],[49,-59,-60,-52,-53,-42,49,-50,-58,-48,-49,-51,-54,-55,-56,49,-50,-48,-52,-53,49,-59,-60,-58,49,-58,-48,49,49,-40,-41,49,49,49,49,49,49,49,49,49,-57,-72,-74,49,-72,-74,-52,-71,-73,49,]),'LESSEQ':([5,12,13,22,23,24,26,27,29,33,38,39,40,41,42,61,62,63,64,65,67,68,69,74,75,76,78,79,84,85,86,87,88,96,97,98,99,100,101,102,109,110,111,118,130,131,133,146,147,151,],[50,-59,-60,-52,-53,-42,50,-50,-58,-48,-49,-51,-54,-55,-56,50,-50,-48,-52,-53,50,-59,-60,-58,50,-58,-48,50,50,-40,-41,50,50,50,50,50,50,50,50,50,-57,-72,-74,50,-72,-74,-52,-71,-73,50,]),'GREATERT':([5,12,13,22,23,24,26,27,29,33,38,39,40,41,42,61,62,63,64,65,67,68,69,74,75,76,78,79,84,85,86,87,88,96,97,98,99,100,101,102,109,110,111,118,130,131,133,146,147,151,],[51,-59,-60,-52,-53,-42,51,-50,-58,-48,-49,-51,-54,-55,-56,51,-50,-48,-52,-53,51,-59,-60,-58,51,-58,-48,51,51,-40,-41,51,51,51,51,51,51,51,51,51,-57,-72,-74,51,-72,-74,-52,-71,-73,51,]),'LESST':([5,12,13,22,23,24,26,27,29,33,38,39,40,41,42,61,62,63,64,65,67,68,69,74,75,76,78,79,84,85,86,87,88,96,97,98,99,100,101,102,109,110,111,118,130,131,133,146,147,151,],[52,-59,-60,-52,-53,-42,52,-50,-58,-48,-49,-51,-54,-55,-56,52,-50,-48,-52,-53,52,-59,-60,-58,52,-58,-48,52,52,-40,-41,52,52,52,52,52,52,52,52,52,-57,-72,-74,52,-72,-74,-52,-71,-73,52,]),'AND':([12,13,22,23,24,26,27,29,33,38,39,40,41,42,61,62,63,64,65,68,69,74,75,76,78,84,85,86,87,97,98,99,100,101,102,109,110,111,118,130,131,133,146,147,151,],[-59,-60,-52,-53,-42,72,-50,-58,-48,-49,-51,-54,-55,-56,72,-50,-48,-52,-53,-59,-60,-58,72,-58,-48,72,-40,-41,-79,72,72,72,72,72,72,-57,-72,-74,72,-72,-74,-52,-71,-73,72,]),'OR':([12,13,22,23,24,26,27,29,33,38,39,40,41,42,61,62,63,64,65,68,69,74,75,76,78,84,85,86,87,97,98,99,100,101,102,109,110,111,118,130,131,133,146,147,151,],[-59,-60,-52,-53,-42,73,-50,-58,-48,-49,-51,-54,-55,-56,73,-50,-48,-52,-53,-59,-60,-58,73,-58,-48,73,-40,-41,-79,73,73,73,73,73,73,-57,-72,-74,73,-72,-74,-52,-71,-73,73,]),'TIMES':([12,13,22,23,24,26,27,29,33,38,39,40,41,42,61,62,63,64,65,68,69,74,75,76,78,84,85,86,87,97,98,99,100,101,102,109,110,111,118,130,131,133,146,147,151,],[-59,-60,-52,-53,57,-47,-50,-58,-48,-49,-51,-54,-55,-56,-47,-50,-48,-52,-53,-59,-60,-58,-47,-58,-48,-47,57,57,-79,-43,-44,-45,-46,-47,-47,-57,-72,-74,-47,-72,-74,-52,-71,-73,-47,]),'DIVIDE':([12,13,22,23,24,26,27,29,33,38,39,40,41,42,61,62,63,64,65,68,69,74,75,76,78,84,85,86,87,97,98,99,100,101,102,109,110,111,118,130,131,133,146,147,151,],[-59,-60,-52,-53,58,-47,-50,-58,-48,-49,-51,-54,-55,-56,-47,-50,-48,-52,-53,-59,-60,-58,-47,-58,-48,-47,58,58,-79,-43,-44,-45,-46,-47,-47,-57,-72,-74,-47,-72,-74,-52,-71,-73,-47,]),'EXPONENT':([12,13,22,23,24,26,27,29,33,38,39,40,41,42,61,62,63,64,65,68,69,74,75,76,78,84,85,86,87,97,98,99,100,101,102,109,110,111,118,130,131,133,146,147,151,],[-59,-60,-52,-53,59,-47,-50,-58,-48,-49,-51,-54,-55,-56,-47,-50,-48,-52,-53,-59,-60,-58,-47,-58,-48,-47,59,59,-79,-43,-44,-45,-46,-47,-47,-57,-72,-74,-47,-72,-74,-52,-71,-73,-47,]),'MODULE':([12,13,22,23,24,26,27,29,33,38,39,40,41,42,61,62,63,64,65,68,69,74,75,76,78,84,85,86,87,97,98,99,100,101,102,109,110,111,118,130,131,133,146,147,151,],[-59,-60,-52,-53,60,-47,-50,-58,-48,-49,-51,-54,-55,-56,-47,-50,-48,-52,-53,-59,-60,-58,-47,-58,-48,-47,60,60,-79,-43,-44,-45,-46,-47,-47,-57,-72,-74,-47,-72,-74,-52,-71,-73,-47,]),'ASSIGN':([22,23,],[53,56,]),'DOT':([22,89,115,137,149,],[55,116,136,-38,-39,]),'RPAREN':([24,26,27,29,38,39,40,41,42,54,63,64,65,68,69,78,79,85,86,87,92,94,97,98,99,100,101,102,109,110,111,130,131,133,134,142,146,147,157,],[-42,-47,-50,-58,-49,-51,-54,-55,-56,93,-48,-52,-53,-59,-60,-48,109,-40,-41,-79,-6,122,-43,-44,-45,-46,-77,-78,-57,-72,-74,146,147,-6,148,-7,-71,-73,146,]),'COMMA':([24,26,27,29,38,39,40,41,42,63,64,65,68,69,85,86,87,92,97,98,99,100,101,102,109,110,111,118,133,146,147,151,],[-42,-47,-50,-58,-49,-51,-54,-55,-56,-48,-52,-53,-59,-60,-40,-41,-79,121,-43,-44,-45,-46,-77,-78,-57,-72,-74,139,121,-71,-73,156,]),'RCORCH':([24,26,27,29,38,39,40,41,42,63,64,65,68,69,85,86,87,97,98,99,100,101,102,109,110,111,117,118,146,147,150,],[-42,-47,-50,-58,-49,-51,-54,-55,-56,-48,-52,-53,-59,-60,-40,-41,-79,-43,-44,-45,-46,-77,-78,-57,-72,-74,138,-64,-71,-73,-65,]),'RBRACE':([24,26,27,29,38,39,40,41,42,63,64,65,68,69,85,86,87,97,98,99,100,101,102,109,110,111,119,146,147,151,159,],[-42,-47,-50,-58,-49,-51,-54,-55,-56,-48,-52,-53,-59,-60,-40,-41,-79,-43,-44,-45,-46,-77,-78,-57,-72,-74,140,-71,-73,-68,-69,]),'RANGE_INCL':([33,63,78,129,145,],[80,80,107,80,154,]),'RANGE_EXCL':([33,63,78,],[81,81,108,]),'GETS':([53,],[89,]),'LCORCH':([53,],[90,]),'LBRACE':([53,],[91,]),'IN':([77,],[106,]),'COLON':([120,],[141,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'sentences':([0,3,],[2,43,]),'sentence':([0,3,74,76,82,83,103,105,112,114,124,127,143,144,148,155,],[3,3,104,104,104,104,125,125,125,125,104,104,125,125,104,125,]),'assignment':([0,3,74,76,82,83,103,105,112,114,124,127,143,144,148,155,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'expression':([0,3,25,28,30,32,36,44,45,46,53,56,57,58,59,60,66,70,71,74,76,82,83,90,103,105,112,113,114,124,127,139,141,143,144,148,155,],[5,5,67,67,67,79,67,67,67,87,88,96,67,67,67,67,79,67,67,5,5,5,5,67,5,5,5,79,5,5,5,67,67,5,5,5,5,]),'print':([0,3,74,76,82,83,103,105,112,114,124,127,143,144,148,155,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'input':([0,3,74,76,82,83,103,105,112,114,124,127,143,144,148,155,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'condition':([0,3,74,76,82,83,103,105,112,114,124,127,143,144,148,155,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'while_loop':([0,3,74,76,82,83,103,105,112,114,124,127,143,144,148,155,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'for_loop':([0,3,74,76,82,83,103,105,112,114,124,127,143,144,148,155,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'array':([0,3,74,76,82,83,103,105,112,114,124,127,143,144,148,155,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'range_incl':([0,3,25,28,30,32,36,44,45,46,53,56,57,58,59,60,66,70,71,74,76,82,83,90,103,105,106,112,113,114,124,127,139,141,143,144,148,155,],[12,12,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,12,12,12,12,68,12,12,127,12,68,12,12,12,68,68,12,12,12,12,]),'range_excl':([0,3,25,28,30,32,36,44,45,46,53,56,57,58,59,60,66,70,71,74,76,82,83,90,103,105,112,113,114,124,127,139,141,143,144,148,155,],[13,13,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,13,13,13,13,69,13,13,13,69,13,13,13,69,69,13,13,13,13,]),'hash':([0,3,74,76,82,83,103,105,112,114,124,127,143,144,148,155,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'function':([0,3,74,76,82,83,103,105,112,114,124,127,143,144,148,155,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'class_def':([0,3,74,76,82,83,103,105,112,114,124,127,143,144,148,155,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'return_stmt':([0,3,74,76,82,83,103,105,112,114,124,127,143,144,148,155,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'break_stmt':([0,3,74,76,82,83,103,105,112,114,124,127,143,144,148,155,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'function_call_empty':([0,3,74,76,82,83,103,105,112,114,124,127,143,144,148,155,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'function_call_args':([0,3,74,76,82,83,103,105,112,114,124,127,143,144,148,155,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'methods':([0,3,74,76,82,83,103,105,112,114,124,127,143,144,148,155,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'term':([0,3,25,28,30,32,36,44,45,46,53,56,57,58,59,60,66,70,71,74,76,82,83,90,103,105,112,113,114,124,127,139,141,143,144,148,155,],[24,24,24,24,24,24,24,85,86,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'factor':([0,3,25,28,30,32,36,44,45,46,53,56,57,58,59,60,66,70,71,74,76,82,83,90,103,105,112,113,114,124,127,139,141,143,144,148,155,],[26,26,61,75,75,26,84,26,26,26,26,26,97,98,99,100,26,101,102,26,26,26,26,118,26,26,26,26,26,26,26,118,151,26,26,26,26,]),'logic_expression':([0,3,25,28,30,32,36,44,45,46,53,56,57,58,59,60,66,70,71,74,76,82,83,90,103,105,112,113,114,124,127,139,141,143,144,148,155,],[29,29,29,74,76,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'logic_op':([5,26,61,67,75,79,84,87,88,96,97,98,99,100,101,102,118,151,],[46,70,70,46,70,46,70,46,46,46,70,70,70,70,70,70,70,70,]),'logic_connector':([26,61,75,84,97,98,99,100,101,102,118,151,],[71,71,71,71,71,71,71,71,71,71,71,71,]),'args':([54,113,121,],[94,134,142,]),'body':([74,76,82,83,124,127,148,],[103,105,112,114,143,144,155,]),'method_chain':([89,],[115,]),'elements':([90,139,],[117,150,]),'hash_pairs':([91,156,],[119,159,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> sentences','start',1,'p_start','yacc.py',21),
  ('sentences -> sentence','sentences',1,'p_sentences','yacc.py',24),
  ('sentences -> sentence sentences','sentences',2,'p_sentences','yacc.py',25),
  ('function -> DEF ID body END','function',4,'p_function','yacc.py',30),
  ('function -> DEF ID LPAREN args RPAREN body END','function',7,'p_function','yacc.py',31),
  ('args -> ID','args',1,'p_args','yacc.py',40),
  ('args -> ID COMMA args','args',3,'p_args','yacc.py',41),
  ('body -> body sentence','body',2,'p_body','yacc.py',44),
  ('body -> sentence','body',1,'p_body','yacc.py',45),
  ('print -> PUTS factor','print',2,'p_print','yacc.py',48),
  ('print -> PUTS STRING','print',2,'p_print','yacc.py',49),
  ('class_def -> CLASS ID body END','class_def',4,'p_class_def','yacc.py',53),
  ('sentence -> assignment','sentence',1,'p_sentence','yacc.py',57),
  ('sentence -> expression','sentence',1,'p_sentence','yacc.py',58),
  ('sentence -> print','sentence',1,'p_sentence','yacc.py',59),
  ('sentence -> input','sentence',1,'p_sentence','yacc.py',60),
  ('sentence -> condition','sentence',1,'p_sentence','yacc.py',61),
  ('sentence -> while_loop','sentence',1,'p_sentence','yacc.py',62),
  ('sentence -> for_loop','sentence',1,'p_sentence','yacc.py',63),
  ('sentence -> array','sentence',1,'p_sentence','yacc.py',64),
  ('sentence -> range_incl','sentence',1,'p_sentence','yacc.py',65),
  ('sentence -> range_excl','sentence',1,'p_sentence','yacc.py',66),
  ('sentence -> hash','sentence',1,'p_sentence','yacc.py',67),
  ('sentence -> function','sentence',1,'p_sentence','yacc.py',68),
  ('sentence -> class_def','sentence',1,'p_sentence','yacc.py',69),
  ('sentence -> return_stmt','sentence',1,'p_sentence','yacc.py',70),
  ('sentence -> break_stmt','sentence',1,'p_sentence','yacc.py',71),
  ('sentence -> function_call_empty','sentence',1,'p_sentence','yacc.py',72),
  ('sentence -> function_call_args','sentence',1,'p_sentence','yacc.py',73),
  ('sentence -> methods','sentence',1,'p_sentence','yacc.py',74),
  ('methods -> ID DOT ID','methods',3,'p_methods','yacc.py',78),
  ('return_stmt -> RETURN factor','return_stmt',2,'p_return_stmt','yacc.py',108),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','yacc.py',119),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','yacc.py',128),
  ('assignment -> VAR_INST ASSIGN expression','assignment',3,'p_assignment','yacc.py',129),
  ('input -> PUTS STRING','input',2,'p_input','yacc.py',136),
  ('input -> ID ASSIGN GETS method_chain','input',4,'p_input','yacc.py',137),
  ('method_chain -> DOT ID','method_chain',2,'p_method_chain','yacc.py',141),
  ('method_chain -> method_chain DOT ID','method_chain',3,'p_method_chain','yacc.py',142),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','yacc.py',146),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','yacc.py',156),
  ('expression -> term','expression',1,'p_expression_term','yacc.py',165),
  ('term -> term TIMES factor','term',3,'p_term_times','yacc.py',170),
  ('term -> term DIVIDE factor','term',3,'p_term_div','yacc.py',180),
  ('term -> term EXPONENT factor','term',3,'p_term_exponent','yacc.py',189),
  ('term -> term MODULE factor','term',3,'p_term_module','yacc.py',199),
  ('term -> factor','term',1,'p_term_factor','yacc.py',209),
  ('factor -> INTEGER','factor',1,'p_factor_valor','yacc.py',214),
  ('factor -> FLOAT','factor',1,'p_factor_valor','yacc.py',215),
  ('factor -> STRING','factor',1,'p_factor_valor','yacc.py',216),
  ('factor -> BOOLEAN','factor',1,'p_factor_valor','yacc.py',217),
  ('factor -> ID','factor',1,'p_factor_valor','yacc.py',218),
  ('factor -> VAR_INST','factor',1,'p_factor_valor','yacc.py',219),
  ('factor -> TRUE','factor',1,'p_factor_valor','yacc.py',220),
  ('factor -> FALSE','factor',1,'p_factor_valor','yacc.py',221),
  ('factor -> NIL','factor',1,'p_factor_valor','yacc.py',222),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_group','yacc.py',246),
  ('factor -> logic_expression','factor',1,'p_factor_logic_expression','yacc.py',251),
  ('factor -> range_incl','factor',1,'p_factor_range_incl','yacc.py',257),
  ('factor -> range_excl','factor',1,'p_factor_range_excl','yacc.py',260),
  ('function_call_empty -> ID LPAREN RPAREN','function_call_empty',3,'p_function_call_empty','yacc.py',265),
  ('function_call_args -> ID LPAREN args RPAREN','function_call_args',4,'p_function_call_args','yacc.py',270),
  ('array -> ID ASSIGN LCORCH elements RCORCH','array',5,'p_array','yacc.py',276),
  ('elements -> factor','elements',1,'p_elements','yacc.py',279),
  ('elements -> factor COMMA elements','elements',3,'p_elements','yacc.py',280),
  ('for_loop -> FOR ID IN range_incl body END','for_loop',6,'p_for_loop','yacc.py',284),
  ('hash -> ID ASSIGN LBRACE hash_pairs RBRACE','hash',5,'p_hash','yacc.py',292),
  ('hash_pairs -> STRING COLON factor','hash_pairs',3,'p_hash_pairs','yacc.py',295),
  ('hash_pairs -> STRING COLON factor COMMA hash_pairs','hash_pairs',5,'p_hash_pairs','yacc.py',296),
  ('while_loop -> WHILE logic_expression body END','while_loop',4,'p_while_loop','yacc.py',301),
  ('range_incl -> LPAREN INTEGER RANGE_INCL INTEGER RPAREN','range_incl',5,'p_range_incl','yacc.py',317),
  ('range_incl -> INTEGER RANGE_INCL INTEGER','range_incl',3,'p_range_incl','yacc.py',318),
  ('range_excl -> LPAREN INTEGER RANGE_EXCL INTEGER RPAREN','range_excl',5,'p_range_excl','yacc.py',321),
  ('range_excl -> INTEGER RANGE_EXCL INTEGER','range_excl',3,'p_range_excl','yacc.py',322),
  ('condition -> IF logic_expression body END','condition',4,'p_condition','yacc.py',328),
  ('condition -> IF logic_expression body ELSE body END','condition',6,'p_condition','yacc.py',329),
  ('logic_expression -> factor logic_op factor','logic_expression',3,'p_logic_expression_comparison','yacc.py',345),
  ('logic_expression -> factor logic_connector factor','logic_expression',3,'p_logic_expression_connector','yacc.py',360),
  ('logic_expression -> expression logic_op expression','logic_expression',3,'p_logic_expression_expression','yacc.py',372),
  ('logic_op -> EQUALS','logic_op',1,'p_logic_op','yacc.py',385),
  ('logic_op -> NEQUALS','logic_op',1,'p_logic_op','yacc.py',386),
  ('logic_op -> GREATEREQ','logic_op',1,'p_logic_op','yacc.py',387),
  ('logic_op -> LESSEQ','logic_op',1,'p_logic_op','yacc.py',388),
  ('logic_op -> GREATERT','logic_op',1,'p_logic_op','yacc.py',389),
  ('logic_op -> LESST','logic_op',1,'p_logic_op','yacc.py',390),
  ('logic_connector -> AND','logic_connector',1,'p_logic_connector','yacc.py',393),
  ('logic_connector -> OR','logic_connector',1,'p_logic_connector','yacc.py',394),
]

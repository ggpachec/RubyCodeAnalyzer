
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AND_OP ASSIGN BOOLEAN BREAK CLASS COLON COMMA DEF DIVIDE DO DOT ELSE END EQUALS EXPONENT FALSE FLOAT FOR GREATEREQ GREATERT ID IF INTEGER LBRACE LCORCH LESSEQ LESST LPAREN MINUS MODULE NEQUALS NEXT NIL NOT NOT_OP OR OR_OP PLUS PUTS RANGE_EXCL RANGE_INCL RBRACE RCORCH RETURN RPAREN SEMICOLON STRING THEN TIMES TRUE VAR_INST WHILE YIELDfunction : DEF ID LPAREN RPAREN\n| DEF ID LPAREN body RPARENbody : sentence\n| sentence bodyprint : PUTS  factorsentence : assignment\n| expression\n| printassignment : ID EQUALS factorexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : factorfactor : INTEGER\n| FLOAT\n| IDfactor : STRING'
    
_lr_action_items = {'DEF':([0,],[2,]),'$end':([1,6,19,],[0,-1,-2,]),'ID':([2,4,5,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,30,31,],[3,5,-18,5,-6,-7,-8,-15,-12,26,-16,-17,-19,26,26,26,26,26,-5,-18,-9,-10,-11,-13,-14,]),'LPAREN':([3,],[4,]),'RPAREN':([4,5,7,8,9,10,11,12,13,15,16,17,20,25,26,27,28,29,30,31,],[6,-18,19,-3,-6,-7,-8,-15,-12,-16,-17,-19,-4,-5,-18,-9,-10,-11,-13,-14,]),'PUTS':([4,5,8,9,10,11,12,13,15,16,17,25,26,27,28,29,30,31,],[14,-18,14,-6,-7,-8,-15,-12,-16,-17,-19,-5,-18,-9,-10,-11,-13,-14,]),'INTEGER':([4,5,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,30,31,],[15,-18,15,-6,-7,-8,-15,-12,15,-16,-17,-19,15,15,15,15,15,-5,-18,-9,-10,-11,-13,-14,]),'FLOAT':([4,5,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,30,31,],[16,-18,16,-6,-7,-8,-15,-12,16,-16,-17,-19,16,16,16,16,16,-5,-18,-9,-10,-11,-13,-14,]),'STRING':([4,5,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,30,31,],[17,-18,17,-6,-7,-8,-15,-12,17,-16,-17,-19,17,17,17,17,17,-5,-18,-9,-10,-11,-13,-14,]),'EQUALS':([5,],[18,]),'TIMES':([5,12,13,15,16,17,26,28,29,30,31,],[-18,-15,23,-16,-17,-19,-18,23,23,-13,-14,]),'DIVIDE':([5,12,13,15,16,17,26,28,29,30,31,],[-18,-15,24,-16,-17,-19,-18,24,24,-13,-14,]),'PLUS':([5,10,12,13,15,16,17,26,28,29,30,31,],[-18,21,-15,-12,-16,-17,-19,-18,-10,-11,-13,-14,]),'MINUS':([5,10,12,13,15,16,17,26,28,29,30,31,],[-18,22,-15,-12,-16,-17,-19,-18,-10,-11,-13,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,],[1,]),'body':([4,8,],[7,20,]),'sentence':([4,8,],[8,8,]),'assignment':([4,8,],[9,9,]),'expression':([4,8,],[10,10,]),'print':([4,8,],[11,11,]),'factor':([4,8,14,18,21,22,23,24,],[12,12,25,27,12,12,30,31,]),'term':([4,8,21,22,],[13,13,28,29,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> function","S'",1,None,None,None),
  ('function -> DEF ID LPAREN RPAREN','function',4,'p_function','yacc.py',9),
  ('function -> DEF ID LPAREN body RPAREN','function',5,'p_function','yacc.py',10),
  ('body -> sentence','body',1,'p_body','yacc.py',13),
  ('body -> sentence body','body',2,'p_body','yacc.py',14),
  ('print -> PUTS factor','print',2,'p_print','yacc.py',17),
  ('sentence -> assignment','sentence',1,'p_sentence','yacc.py',20),
  ('sentence -> expression','sentence',1,'p_sentence','yacc.py',21),
  ('sentence -> print','sentence',1,'p_sentence','yacc.py',22),
  ('assignment -> ID EQUALS factor','assignment',3,'p_assignment','yacc.py',26),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','yacc.py',30),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','yacc.py',34),
  ('expression -> term','expression',1,'p_expression_term','yacc.py',38),
  ('term -> term TIMES factor','term',3,'p_term_times','yacc.py',42),
  ('term -> term DIVIDE factor','term',3,'p_term_div','yacc.py',46),
  ('term -> factor','term',1,'p_term_factor','yacc.py',50),
  ('factor -> INTEGER','factor',1,'p_factor_valor','yacc.py',63),
  ('factor -> FLOAT','factor',1,'p_factor_valor','yacc.py',64),
  ('factor -> ID','factor',1,'p_factor_valor','yacc.py',65),
  ('factor -> STRING','factor',1,'p_factor_expr','yacc.py',70),
]
